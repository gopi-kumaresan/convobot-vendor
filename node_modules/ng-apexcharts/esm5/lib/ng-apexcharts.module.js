/**
 * @fileoverview added by tsickle
 * Generated from: lib/ng-apexcharts.module.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { __read, __spread } from "tslib";
import { NgModule } from "@angular/core";
import { ChartComponent } from "./chart/chart.component";
import ApexCharts from "apexcharts";
import * as ɵngcc0 from '@angular/core';
window.ApexCharts = ApexCharts;
/** @type {?} */
var declerations = [ChartComponent];
var NgApexchartsModule = /** @class */ (function () {
    function NgApexchartsModule() {
    }
NgApexchartsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgApexchartsModule });
NgApexchartsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgApexchartsModule_Factory(t) { return new (t || NgApexchartsModule)(); }, imports: [[]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgApexchartsModule, { declarations: [ChartComponent], exports: [ChartComponent] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgApexchartsModule, [{
        type: NgModule,
        args: [{
                declarations: __spread(declerations),
                imports: [],
                exports: __spread(declerations)
            }]
    }], function () { return []; }, null); })();
    return NgApexchartsModule;
}());
export { NgApexchartsModule };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmctYXBleGNoYXJ0cy5tb2R1bGUuanMiLCJzb3VyY2VzIjpbIm5nLWFwZXhjaGFydHMvbGliL25nLWFwZXhjaGFydHMubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQ3pELE9BQU8sVUFBVSxNQUFNLFlBQVksQ0FBQzs7QUFRcEMsTUFBTSxDQUFDLFVBQVUsR0FBRyxVQUFVLENBQUM7QUFFL0I7QUFBa0IsSUFBWixZQUFZLEdBQUcsQ0FBQyxjQUFjLENBQUM7QUFFckM7QUFFUSxJQUZSO0FBQ3FCLElBSVksQ0FBQzt3REFMakMsUUFBUSxTQUFDO2VBQ1IsWUFBWSxXQUFNLFlBQVksQ0FBQyx1QkFDL0IsT0FBTyxFQUFFLEVBQUUsdUJBQ1gsT0FBTyxXQUFNLFlBQVksQ0FBQyxvQkFDM0I7Ozs7Ozs7OztnREFDUztBQUFFLElBQXFCLHlCQUFDO0FBQ2hDLENBRGdDLEFBTGxDLElBS2tDOztBQW5CQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQVFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBRUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBRUEsQUFBQSxBQUtBLEFBQUEsQUFMQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFDQSxBQUFBLEFBQUEsQUFMQSxBQUtBLEFBQUEsQUFBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcbmltcG9ydCB7IENoYXJ0Q29tcG9uZW50IH0gZnJvbSBcIi4vY2hhcnQvY2hhcnQuY29tcG9uZW50XCI7XG5pbXBvcnQgQXBleENoYXJ0cyBmcm9tIFwiYXBleGNoYXJ0c1wiO1xuXG5kZWNsYXJlIGdsb2JhbCB7XG4gIGludGVyZmFjZSBXaW5kb3cge1xuICAgIEFwZXhDaGFydHM6IGFueTtcbiAgfVxufVxuXG53aW5kb3cuQXBleENoYXJ0cyA9IEFwZXhDaGFydHM7XG5cbmNvbnN0IGRlY2xlcmF0aW9ucyA9IFtDaGFydENvbXBvbmVudF07XG5cbkBOZ01vZHVsZSh7XG4gIGRlY2xhcmF0aW9uczogWy4uLmRlY2xlcmF0aW9uc10sXG4gIGltcG9ydHM6IFtdLFxuICBleHBvcnRzOiBbLi4uZGVjbGVyYXRpb25zXSxcbn0pXG5leHBvcnQgY2xhc3MgTmdBcGV4Y2hhcnRzTW9kdWxlIHt9XG4iXX0=