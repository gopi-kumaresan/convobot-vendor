{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{NFeN:function(module,__webpack_exports__,__webpack_require__){\"use strict\";__webpack_require__.d(__webpack_exports__,\"a\",function(){return MatIcon}),__webpack_require__.d(__webpack_exports__,\"b\",function(){return MatIconModule}),__webpack_require__.d(__webpack_exports__,\"c\",function(){return MatIconRegistry});var _angular_core__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(\"fXoL\"),_angular_material_core__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(\"FKr1\"),_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(\"8LU1\"),_angular_common__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(\"ofXK\"),rxjs__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(\"LRne\"),rxjs__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(\"z6cu\"),rxjs__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__(\"cp0P\"),rxjs__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__(\"quSY\"),rxjs_operators__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__(\"vkgz\"),rxjs_operators__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__(\"lJxs\"),rxjs_operators__WEBPACK_IMPORTED_MODULE_10__=__webpack_require__(\"JIr8\"),rxjs_operators__WEBPACK_IMPORTED_MODULE_11__=__webpack_require__(\"nYR2\"),rxjs_operators__WEBPACK_IMPORTED_MODULE_12__=__webpack_require__(\"w1tV\"),rxjs_operators__WEBPACK_IMPORTED_MODULE_13__=__webpack_require__(\"IzEk\"),_angular_common_http__WEBPACK_IMPORTED_MODULE_14__=__webpack_require__(\"tk/3\"),_angular_platform_browser__WEBPACK_IMPORTED_MODULE_15__=__webpack_require__(\"jhN1\");const _c0=[\"*\"];function getMatIconNameNotFoundError(iconName){return Error(`Unable to find icon with the name \"${iconName}\"`)}function getMatIconFailedToSanitizeUrlError(url){return Error(`The URL provided to MatIconRegistry was not trusted as a resource URL via Angular's DomSanitizer. Attempted URL was \"${url}\".`)}function getMatIconFailedToSanitizeLiteralError(literal){return Error(`The literal provided to MatIconRegistry was not trusted as safe HTML by Angular's DomSanitizer. Attempted literal was \"${literal}\".`)}class SvgIconConfig{constructor(url,svgText,options){this.url=url,this.svgText=svgText,this.options=options}}let MatIconRegistry=(()=>{class MatIconRegistry{constructor(_httpClient,_sanitizer,document,_errorHandler){this._httpClient=_httpClient,this._sanitizer=_sanitizer,this._errorHandler=_errorHandler,this._svgIconConfigs=new Map,this._iconSetConfigs=new Map,this._cachedIconsByUrl=new Map,this._inProgressUrlFetches=new Map,this._fontCssClassesByAlias=new Map,this._resolvers=[],this._defaultFontSetClass=\"material-icons\",this._document=document}addSvgIcon(iconName,url,options){return this.addSvgIconInNamespace(\"\",iconName,url,options)}addSvgIconLiteral(iconName,literal,options){return this.addSvgIconLiteralInNamespace(\"\",iconName,literal,options)}addSvgIconInNamespace(namespace,iconName,url,options){return this._addSvgIconConfig(namespace,iconName,new SvgIconConfig(url,null,options))}addSvgIconResolver(resolver){return this._resolvers.push(resolver),this}addSvgIconLiteralInNamespace(namespace,iconName,literal,options){const cleanLiteral=this._sanitizer.sanitize(_angular_core__WEBPACK_IMPORTED_MODULE_0__.O.HTML,literal);if(!cleanLiteral)throw getMatIconFailedToSanitizeLiteralError(literal);return this._addSvgIconConfig(namespace,iconName,new SvgIconConfig(\"\",cleanLiteral,options))}addSvgIconSet(url,options){return this.addSvgIconSetInNamespace(\"\",url,options)}addSvgIconSetLiteral(literal,options){return this.addSvgIconSetLiteralInNamespace(\"\",literal,options)}addSvgIconSetInNamespace(namespace,url,options){return this._addSvgIconSetConfig(namespace,new SvgIconConfig(url,null,options))}addSvgIconSetLiteralInNamespace(namespace,literal,options){const cleanLiteral=this._sanitizer.sanitize(_angular_core__WEBPACK_IMPORTED_MODULE_0__.O.HTML,literal);if(!cleanLiteral)throw getMatIconFailedToSanitizeLiteralError(literal);return this._addSvgIconSetConfig(namespace,new SvgIconConfig(\"\",cleanLiteral,options))}registerFontClassAlias(alias,className=alias){return this._fontCssClassesByAlias.set(alias,className),this}classNameForFontAlias(alias){return this._fontCssClassesByAlias.get(alias)||alias}setDefaultFontSetClass(className){return this._defaultFontSetClass=className,this}getDefaultFontSetClass(){return this._defaultFontSetClass}getSvgIconFromUrl(safeUrl){const url=this._sanitizer.sanitize(_angular_core__WEBPACK_IMPORTED_MODULE_0__.O.RESOURCE_URL,safeUrl);if(!url)throw getMatIconFailedToSanitizeUrlError(safeUrl);const cachedIcon=this._cachedIconsByUrl.get(url);return cachedIcon?Object(rxjs__WEBPACK_IMPORTED_MODULE_4__.a)(cloneSvg(cachedIcon)):this._loadSvgIconFromConfig(new SvgIconConfig(safeUrl,null)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_8__.a)(svg=>this._cachedIconsByUrl.set(url,svg)),Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_9__.a)(svg=>cloneSvg(svg)))}getNamedSvgIcon(name,namespace=\"\"){const key=iconKey(namespace,name);let config=this._svgIconConfigs.get(key);if(config)return this._getSvgFromConfig(config);if(config=this._getIconConfigFromResolvers(namespace,name),config)return this._svgIconConfigs.set(key,config),this._getSvgFromConfig(config);const iconSetConfigs=this._iconSetConfigs.get(namespace);return iconSetConfigs?this._getSvgFromIconSetConfigs(name,iconSetConfigs):Object(rxjs__WEBPACK_IMPORTED_MODULE_5__.a)(getMatIconNameNotFoundError(key))}ngOnDestroy(){this._resolvers=[],this._svgIconConfigs.clear(),this._iconSetConfigs.clear(),this._cachedIconsByUrl.clear()}_getSvgFromConfig(config){return config.svgText?Object(rxjs__WEBPACK_IMPORTED_MODULE_4__.a)(cloneSvg(this._svgElementFromConfig(config))):this._loadSvgIconFromConfig(config).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_9__.a)(svg=>cloneSvg(svg)))}_getSvgFromIconSetConfigs(name,iconSetConfigs){const namedIcon=this._extractIconWithNameFromAnySet(name,iconSetConfigs);if(namedIcon)return Object(rxjs__WEBPACK_IMPORTED_MODULE_4__.a)(namedIcon);const iconSetFetchRequests=iconSetConfigs.filter(iconSetConfig=>!iconSetConfig.svgText).map(iconSetConfig=>this._loadSvgIconSetFromConfig(iconSetConfig).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_10__.a)(err=>{const url=this._sanitizer.sanitize(_angular_core__WEBPACK_IMPORTED_MODULE_0__.O.RESOURCE_URL,iconSetConfig.url);return this._errorHandler.handleError(new Error(`Loading icon set URL: ${url} failed: ${err.message}`)),Object(rxjs__WEBPACK_IMPORTED_MODULE_4__.a)(null)})));return Object(rxjs__WEBPACK_IMPORTED_MODULE_6__.a)(iconSetFetchRequests).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_9__.a)(()=>{const foundIcon=this._extractIconWithNameFromAnySet(name,iconSetConfigs);if(!foundIcon)throw getMatIconNameNotFoundError(name);return foundIcon}))}_extractIconWithNameFromAnySet(iconName,iconSetConfigs){for(let i=iconSetConfigs.length-1;i>=0;i--){const config=iconSetConfigs[i];if(config.svgText&&config.svgText.indexOf(iconName)>-1){const svg=this._svgElementFromConfig(config),foundIcon=this._extractSvgIconFromSet(svg,iconName,config.options);if(foundIcon)return foundIcon}}return null}_loadSvgIconFromConfig(config){return this._fetchIcon(config).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_8__.a)(svgText=>config.svgText=svgText),Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_9__.a)(()=>this._svgElementFromConfig(config)))}_loadSvgIconSetFromConfig(config){return config.svgText?Object(rxjs__WEBPACK_IMPORTED_MODULE_4__.a)(null):this._fetchIcon(config).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_8__.a)(svgText=>config.svgText=svgText))}_extractSvgIconFromSet(iconSet,iconName,options){const iconSource=iconSet.querySelector(`[id=\"${iconName}\"]`);if(!iconSource)return null;const iconElement=iconSource.cloneNode(!0);if(iconElement.removeAttribute(\"id\"),\"svg\"===iconElement.nodeName.toLowerCase())return this._setSvgAttributes(iconElement,options);if(\"symbol\"===iconElement.nodeName.toLowerCase())return this._setSvgAttributes(this._toSvgElement(iconElement),options);const svg=this._svgElementFromString(\"<svg></svg>\");return svg.appendChild(iconElement),this._setSvgAttributes(svg,options)}_svgElementFromString(str){const div=this._document.createElement(\"DIV\");div.innerHTML=str;const svg=div.querySelector(\"svg\");if(!svg)throw Error(\"<svg> tag not found\");return svg}_toSvgElement(element){const svg=this._svgElementFromString(\"<svg></svg>\"),attributes=element.attributes;for(let i=0;i<attributes.length;i++){const{name:name,value:value}=attributes[i];\"id\"!==name&&svg.setAttribute(name,value)}for(let i=0;i<element.childNodes.length;i++)element.childNodes[i].nodeType===this._document.ELEMENT_NODE&&svg.appendChild(element.childNodes[i].cloneNode(!0));return svg}_setSvgAttributes(svg,options){return svg.setAttribute(\"fit\",\"\"),svg.setAttribute(\"height\",\"100%\"),svg.setAttribute(\"width\",\"100%\"),svg.setAttribute(\"preserveAspectRatio\",\"xMidYMid meet\"),svg.setAttribute(\"focusable\",\"false\"),options&&options.viewBox&&svg.setAttribute(\"viewBox\",options.viewBox),svg}_fetchIcon(iconConfig){var _a;const{url:safeUrl,options:options}=iconConfig,withCredentials=null!==(_a=null==options?void 0:options.withCredentials)&&void 0!==_a&&_a;if(!this._httpClient)throw Error(\"Could not find HttpClient provider for use with Angular Material icons. Please include the HttpClientModule from @angular/common/http in your app imports.\");if(null==safeUrl)throw Error(`Cannot fetch icon from URL \"${safeUrl}\".`);const url=this._sanitizer.sanitize(_angular_core__WEBPACK_IMPORTED_MODULE_0__.O.RESOURCE_URL,safeUrl);if(!url)throw getMatIconFailedToSanitizeUrlError(safeUrl);const inProgressFetch=this._inProgressUrlFetches.get(url);if(inProgressFetch)return inProgressFetch;const req=this._httpClient.get(url,{responseType:\"text\",withCredentials:withCredentials}).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_11__.a)(()=>this._inProgressUrlFetches.delete(url)),Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__.a)());return this._inProgressUrlFetches.set(url,req),req}_addSvgIconConfig(namespace,iconName,config){return this._svgIconConfigs.set(iconKey(namespace,iconName),config),this}_addSvgIconSetConfig(namespace,config){const configNamespace=this._iconSetConfigs.get(namespace);return configNamespace?configNamespace.push(config):this._iconSetConfigs.set(namespace,[config]),this}_svgElementFromConfig(config){if(!config.svgElement){const svg=this._svgElementFromString(config.svgText);this._setSvgAttributes(svg,config.options),config.svgElement=svg}return config.svgElement}_getIconConfigFromResolvers(namespace,name){for(let i=0;i<this._resolvers.length;i++){const result=this._resolvers[i](name,namespace);if(result)return(value=result).url&&value.options?new SvgIconConfig(result.url,null,result.options):new SvgIconConfig(result,null)}var value}}return MatIconRegistry.ɵfac=function(t){return new(t||MatIconRegistry)(_angular_core__WEBPACK_IMPORTED_MODULE_0__.gc(_angular_common_http__WEBPACK_IMPORTED_MODULE_14__.b,8),_angular_core__WEBPACK_IMPORTED_MODULE_0__.gc(_angular_platform_browser__WEBPACK_IMPORTED_MODULE_15__.b),_angular_core__WEBPACK_IMPORTED_MODULE_0__.gc(_angular_common__WEBPACK_IMPORTED_MODULE_3__.d,8),_angular_core__WEBPACK_IMPORTED_MODULE_0__.gc(_angular_core__WEBPACK_IMPORTED_MODULE_0__.o))},MatIconRegistry.ɵprov=Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__.Pb)({factory:function(){return new MatIconRegistry(Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__.gc)(_angular_common_http__WEBPACK_IMPORTED_MODULE_14__.b,8),Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__.gc)(_angular_platform_browser__WEBPACK_IMPORTED_MODULE_15__.b),Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__.gc)(_angular_common__WEBPACK_IMPORTED_MODULE_3__.d,8),Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__.gc)(_angular_core__WEBPACK_IMPORTED_MODULE_0__.o))},token:MatIconRegistry,providedIn:\"root\"}),MatIconRegistry})();function cloneSvg(svg){return svg.cloneNode(!0)}function iconKey(namespace,name){return namespace+\":\"+name}class MatIconBase{constructor(_elementRef){this._elementRef=_elementRef}}const _MatIconMixinBase=Object(_angular_material_core__WEBPACK_IMPORTED_MODULE_1__.y)(MatIconBase),MAT_ICON_LOCATION=new _angular_core__WEBPACK_IMPORTED_MODULE_0__.u(\"mat-icon-location\",{providedIn:\"root\",factory:function(){const _document=Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__.ab)(_angular_common__WEBPACK_IMPORTED_MODULE_3__.d),_location=_document?_document.location:null;return{getPathname:()=>_location?_location.pathname+_location.search:\"\"}}}),funcIriAttributes=[\"clip-path\",\"color-profile\",\"src\",\"cursor\",\"fill\",\"filter\",\"marker\",\"marker-start\",\"marker-mid\",\"marker-end\",\"mask\",\"stroke\"],funcIriAttributeSelector=funcIriAttributes.map(attr=>`[${attr}]`).join(\", \"),funcIriPattern=/^url\\(['\"]?#(.*?)['\"]?\\)$/;let MatIcon=(()=>{class MatIcon extends _MatIconMixinBase{constructor(elementRef,_iconRegistry,ariaHidden,_location,_errorHandler){super(elementRef),this._iconRegistry=_iconRegistry,this._location=_location,this._errorHandler=_errorHandler,this._inline=!1,this._currentIconFetch=rxjs__WEBPACK_IMPORTED_MODULE_7__.a.EMPTY,ariaHidden||elementRef.nativeElement.setAttribute(\"aria-hidden\",\"true\")}get inline(){return this._inline}set inline(inline){this._inline=Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_2__.c)(inline)}get svgIcon(){return this._svgIcon}set svgIcon(value){value!==this._svgIcon&&(value?this._updateSvgIcon(value):this._svgIcon&&this._clearSvgElement(),this._svgIcon=value)}get fontSet(){return this._fontSet}set fontSet(value){const newValue=this._cleanupFontValue(value);newValue!==this._fontSet&&(this._fontSet=newValue,this._updateFontIconClasses())}get fontIcon(){return this._fontIcon}set fontIcon(value){const newValue=this._cleanupFontValue(value);newValue!==this._fontIcon&&(this._fontIcon=newValue,this._updateFontIconClasses())}_splitIconName(iconName){if(!iconName)return[\"\",\"\"];const parts=iconName.split(\":\");switch(parts.length){case 1:return[\"\",parts[0]];case 2:return parts;default:throw Error(`Invalid icon name: \"${iconName}\"`)}}ngOnInit(){this._updateFontIconClasses()}ngAfterViewChecked(){const cachedElements=this._elementsWithExternalReferences;if(cachedElements&&cachedElements.size){const newPath=this._location.getPathname();newPath!==this._previousPath&&(this._previousPath=newPath,this._prependPathToReferences(newPath))}}ngOnDestroy(){this._currentIconFetch.unsubscribe(),this._elementsWithExternalReferences&&this._elementsWithExternalReferences.clear()}_usingFontIcon(){return!this.svgIcon}_setSvgElement(svg){this._clearSvgElement();const styleTags=svg.querySelectorAll(\"style\");for(let i=0;i<styleTags.length;i++)styleTags[i].textContent+=\" \";const path=this._location.getPathname();this._previousPath=path,this._cacheChildrenWithExternalReferences(svg),this._prependPathToReferences(path),this._elementRef.nativeElement.appendChild(svg)}_clearSvgElement(){const layoutElement=this._elementRef.nativeElement;let childCount=layoutElement.childNodes.length;for(this._elementsWithExternalReferences&&this._elementsWithExternalReferences.clear();childCount--;){const child=layoutElement.childNodes[childCount];1===child.nodeType&&\"svg\"!==child.nodeName.toLowerCase()||layoutElement.removeChild(child)}}_updateFontIconClasses(){if(!this._usingFontIcon())return;const elem=this._elementRef.nativeElement,fontSetClass=this.fontSet?this._iconRegistry.classNameForFontAlias(this.fontSet):this._iconRegistry.getDefaultFontSetClass();fontSetClass!=this._previousFontSetClass&&(this._previousFontSetClass&&elem.classList.remove(this._previousFontSetClass),fontSetClass&&elem.classList.add(fontSetClass),this._previousFontSetClass=fontSetClass),this.fontIcon!=this._previousFontIconClass&&(this._previousFontIconClass&&elem.classList.remove(this._previousFontIconClass),this.fontIcon&&elem.classList.add(this.fontIcon),this._previousFontIconClass=this.fontIcon)}_cleanupFontValue(value){return\"string\"==typeof value?value.trim().split(\" \")[0]:value}_prependPathToReferences(path){const elements=this._elementsWithExternalReferences;elements&&elements.forEach((attrs,element)=>{attrs.forEach(attr=>{element.setAttribute(attr.name,`url('${path}#${attr.value}')`)})})}_cacheChildrenWithExternalReferences(element){const elementsWithFuncIri=element.querySelectorAll(funcIriAttributeSelector),elements=this._elementsWithExternalReferences=this._elementsWithExternalReferences||new Map;for(let i=0;i<elementsWithFuncIri.length;i++)funcIriAttributes.forEach(attr=>{const elementWithReference=elementsWithFuncIri[i],value=elementWithReference.getAttribute(attr),match=value?value.match(funcIriPattern):null;if(match){let attributes=elements.get(elementWithReference);attributes||(attributes=[],elements.set(elementWithReference,attributes)),attributes.push({name:attr,value:match[1]})}})}_updateSvgIcon(rawName){if(this._svgNamespace=null,this._svgName=null,this._currentIconFetch.unsubscribe(),rawName){const[namespace,iconName]=this._splitIconName(rawName);namespace&&(this._svgNamespace=namespace),iconName&&(this._svgName=iconName),this._currentIconFetch=this._iconRegistry.getNamedSvgIcon(iconName,namespace).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_13__.a)(1)).subscribe(svg=>this._setSvgElement(svg),err=>{this._errorHandler.handleError(new Error(`Error retrieving icon ${namespace}:${iconName}! ${err.message}`))})}}}return MatIcon.ɵfac=function(t){return new(t||MatIcon)(_angular_core__WEBPACK_IMPORTED_MODULE_0__.Tb(_angular_core__WEBPACK_IMPORTED_MODULE_0__.m),_angular_core__WEBPACK_IMPORTED_MODULE_0__.Tb(MatIconRegistry),_angular_core__WEBPACK_IMPORTED_MODULE_0__.hc(\"aria-hidden\"),_angular_core__WEBPACK_IMPORTED_MODULE_0__.Tb(MAT_ICON_LOCATION),_angular_core__WEBPACK_IMPORTED_MODULE_0__.Tb(_angular_core__WEBPACK_IMPORTED_MODULE_0__.o))},MatIcon.ɵcmp=_angular_core__WEBPACK_IMPORTED_MODULE_0__.Nb({type:MatIcon,selectors:[[\"mat-icon\"]],hostAttrs:[\"role\",\"img\",1,\"mat-icon\",\"notranslate\"],hostVars:7,hostBindings:function(rf,ctx){2&rf&&(_angular_core__WEBPACK_IMPORTED_MODULE_0__.Hb(\"data-mat-icon-type\",ctx._usingFontIcon()?\"font\":\"svg\")(\"data-mat-icon-name\",ctx._svgName||ctx.fontIcon)(\"data-mat-icon-namespace\",ctx._svgNamespace||ctx.fontSet),_angular_core__WEBPACK_IMPORTED_MODULE_0__.Lb(\"mat-icon-inline\",ctx.inline)(\"mat-icon-no-color\",\"primary\"!==ctx.color&&\"accent\"!==ctx.color&&\"warn\"!==ctx.color))},inputs:{color:\"color\",inline:\"inline\",svgIcon:\"svgIcon\",fontSet:\"fontSet\",fontIcon:\"fontIcon\"},exportAs:[\"matIcon\"],features:[_angular_core__WEBPACK_IMPORTED_MODULE_0__.Db],ngContentSelectors:_c0,decls:1,vars:0,template:function(rf,ctx){1&rf&&(_angular_core__WEBPACK_IMPORTED_MODULE_0__.sc(),_angular_core__WEBPACK_IMPORTED_MODULE_0__.rc(0))},styles:[\".mat-icon{background-repeat:no-repeat;display:inline-block;fill:currentColor;height:24px;width:24px}.mat-icon.mat-icon-inline{font-size:inherit;height:inherit;line-height:inherit;width:inherit}[dir=rtl] .mat-icon-rtl-mirror{transform:scale(-1, 1)}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon{display:block}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-icon{margin:auto}\\n\"],encapsulation:2,changeDetection:0}),MatIcon})(),MatIconModule=(()=>{class MatIconModule{}return MatIconModule.ɵmod=_angular_core__WEBPACK_IMPORTED_MODULE_0__.Rb({type:MatIconModule}),MatIconModule.ɵinj=_angular_core__WEBPACK_IMPORTED_MODULE_0__.Qb({factory:function(t){return new(t||MatIconModule)},imports:[[_angular_material_core__WEBPACK_IMPORTED_MODULE_1__.j],_angular_material_core__WEBPACK_IMPORTED_MODULE_1__.j]}),MatIconModule})()},bTqV:function(module,__webpack_exports__,__webpack_require__){\"use strict\";__webpack_require__.d(__webpack_exports__,\"a\",function(){return MatAnchor}),__webpack_require__.d(__webpack_exports__,\"b\",function(){return MatButton}),__webpack_require__.d(__webpack_exports__,\"c\",function(){return MatButtonModule});var _angular_material_core__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(\"FKr1\"),_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(\"R1ws\"),_angular_core__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(\"fXoL\"),_angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(\"u47x\");const _c0=[\"mat-button\",\"\"],_c1=[\"*\"],_c2=\".mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{opacity:0}.mat-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay,.mat-stroked-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay{opacity:.04}@media(hover: none){.mat-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay,.mat-stroked-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay{opacity:0}}.mat-button,.mat-icon-button,.mat-stroked-button,.mat-flat-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-button.mat-button-disabled,.mat-icon-button.mat-button-disabled,.mat-stroked-button.mat-button-disabled,.mat-flat-button.mat-button-disabled{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button.mat-button-disabled{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-raised-button::-moz-focus-inner{border:0}._mat-animation-noopable.mat-raised-button{transition:none;animation:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button .mat-button-ripple.mat-ripple,.mat-stroked-button .mat-button-focus-overlay{top:-1px;left:-1px;right:-1px;bottom:-1px}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab::-moz-focus-inner{border:0}.mat-fab.mat-button-disabled{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-fab{transition:none;animation:none}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab.mat-button-disabled{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-mini-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-mini-fab{transition:none;animation:none}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button i,.mat-icon-button .mat-icon{line-height:24px}.mat-button-ripple.mat-ripple,.mat-button-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-button-ripple.mat-ripple:not(:empty){transform:translateZ(0)}.mat-button-focus-overlay{opacity:0;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1),background-color 200ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-button-focus-overlay{transition:none}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:inline-flex;justify-content:center;align-items:center;font-size:inherit;width:2.5em;height:2.5em}.cdk-high-contrast-active .mat-button,.cdk-high-contrast-active .mat-flat-button,.cdk-high-contrast-active .mat-raised-button,.cdk-high-contrast-active .mat-icon-button,.cdk-high-contrast-active .mat-fab,.cdk-high-contrast-active .mat-mini-fab{outline:solid 1px}.cdk-high-contrast-active .mat-button-base.cdk-keyboard-focused,.cdk-high-contrast-active .mat-button-base.cdk-program-focused{outline:solid 3px}\\n\",BUTTON_HOST_ATTRIBUTES=[\"mat-button\",\"mat-flat-button\",\"mat-icon-button\",\"mat-raised-button\",\"mat-stroked-button\",\"mat-mini-fab\",\"mat-fab\"];class MatButtonBase{constructor(_elementRef){this._elementRef=_elementRef}}const _MatButtonMixinBase=Object(_angular_material_core__WEBPACK_IMPORTED_MODULE_0__.y)(Object(_angular_material_core__WEBPACK_IMPORTED_MODULE_0__.A)(Object(_angular_material_core__WEBPACK_IMPORTED_MODULE_0__.z)(MatButtonBase)));let MatButton=(()=>{class MatButton extends _MatButtonMixinBase{constructor(elementRef,_focusMonitor,_animationMode){super(elementRef),this._focusMonitor=_focusMonitor,this._animationMode=_animationMode,this.isRoundButton=this._hasHostAttributes(\"mat-fab\",\"mat-mini-fab\"),this.isIconButton=this._hasHostAttributes(\"mat-icon-button\");for(const attr of BUTTON_HOST_ATTRIBUTES)this._hasHostAttributes(attr)&&this._getHostElement().classList.add(attr);elementRef.nativeElement.classList.add(\"mat-button-base\"),this.isRoundButton&&(this.color=\"accent\")}ngAfterViewInit(){this._focusMonitor.monitor(this._elementRef,!0)}ngOnDestroy(){this._focusMonitor.stopMonitoring(this._elementRef)}focus(origin,options){origin?this._focusMonitor.focusVia(this._getHostElement(),origin,options):this._getHostElement().focus(options)}_getHostElement(){return this._elementRef.nativeElement}_isRippleDisabled(){return this.disableRipple||this.disabled}_hasHostAttributes(...attributes){return attributes.some(attribute=>this._getHostElement().hasAttribute(attribute))}}return MatButton.ɵfac=function(t){return new(t||MatButton)(_angular_core__WEBPACK_IMPORTED_MODULE_2__.Tb(_angular_core__WEBPACK_IMPORTED_MODULE_2__.m),_angular_core__WEBPACK_IMPORTED_MODULE_2__.Tb(_angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_3__.h),_angular_core__WEBPACK_IMPORTED_MODULE_2__.Tb(_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_1__.a,8))},MatButton.ɵcmp=_angular_core__WEBPACK_IMPORTED_MODULE_2__.Nb({type:MatButton,selectors:[[\"button\",\"mat-button\",\"\"],[\"button\",\"mat-raised-button\",\"\"],[\"button\",\"mat-icon-button\",\"\"],[\"button\",\"mat-fab\",\"\"],[\"button\",\"mat-mini-fab\",\"\"],[\"button\",\"mat-stroked-button\",\"\"],[\"button\",\"mat-flat-button\",\"\"]],viewQuery:function(rf,ctx){if(1&rf&&_angular_core__WEBPACK_IMPORTED_MODULE_2__.Zc(_angular_material_core__WEBPACK_IMPORTED_MODULE_0__.t,!0),2&rf){let _t;_angular_core__WEBPACK_IMPORTED_MODULE_2__.Fc(_t=_angular_core__WEBPACK_IMPORTED_MODULE_2__.kc())&&(ctx.ripple=_t.first)}},hostAttrs:[1,\"mat-focus-indicator\"],hostVars:5,hostBindings:function(rf,ctx){2&rf&&(_angular_core__WEBPACK_IMPORTED_MODULE_2__.Hb(\"disabled\",ctx.disabled||null),_angular_core__WEBPACK_IMPORTED_MODULE_2__.Lb(\"_mat-animation-noopable\",\"NoopAnimations\"===ctx._animationMode)(\"mat-button-disabled\",ctx.disabled))},inputs:{disabled:\"disabled\",disableRipple:\"disableRipple\",color:\"color\"},exportAs:[\"matButton\"],features:[_angular_core__WEBPACK_IMPORTED_MODULE_2__.Db],attrs:_c0,ngContentSelectors:_c1,decls:4,vars:5,consts:[[1,\"mat-button-wrapper\"],[\"matRipple\",\"\",1,\"mat-button-ripple\",3,\"matRippleDisabled\",\"matRippleCentered\",\"matRippleTrigger\"],[1,\"mat-button-focus-overlay\"]],template:function(rf,ctx){1&rf&&(_angular_core__WEBPACK_IMPORTED_MODULE_2__.sc(),_angular_core__WEBPACK_IMPORTED_MODULE_2__.Zb(0,\"span\",0),_angular_core__WEBPACK_IMPORTED_MODULE_2__.rc(1),_angular_core__WEBPACK_IMPORTED_MODULE_2__.Yb(),_angular_core__WEBPACK_IMPORTED_MODULE_2__.Ub(2,\"span\",1),_angular_core__WEBPACK_IMPORTED_MODULE_2__.Ub(3,\"span\",2)),2&rf&&(_angular_core__WEBPACK_IMPORTED_MODULE_2__.Gb(2),_angular_core__WEBPACK_IMPORTED_MODULE_2__.Lb(\"mat-button-ripple-round\",ctx.isRoundButton||ctx.isIconButton),_angular_core__WEBPACK_IMPORTED_MODULE_2__.tc(\"matRippleDisabled\",ctx._isRippleDisabled())(\"matRippleCentered\",ctx.isIconButton)(\"matRippleTrigger\",ctx._getHostElement()))},directives:[_angular_material_core__WEBPACK_IMPORTED_MODULE_0__.t],styles:[_c2],encapsulation:2,changeDetection:0}),MatButton})(),MatAnchor=(()=>{class MatAnchor extends MatButton{constructor(focusMonitor,elementRef,animationMode){super(elementRef,focusMonitor,animationMode)}_haltDisabledEvents(event){this.disabled&&(event.preventDefault(),event.stopImmediatePropagation())}}return MatAnchor.ɵfac=function(t){return new(t||MatAnchor)(_angular_core__WEBPACK_IMPORTED_MODULE_2__.Tb(_angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_3__.h),_angular_core__WEBPACK_IMPORTED_MODULE_2__.Tb(_angular_core__WEBPACK_IMPORTED_MODULE_2__.m),_angular_core__WEBPACK_IMPORTED_MODULE_2__.Tb(_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_1__.a,8))},MatAnchor.ɵcmp=_angular_core__WEBPACK_IMPORTED_MODULE_2__.Nb({type:MatAnchor,selectors:[[\"a\",\"mat-button\",\"\"],[\"a\",\"mat-raised-button\",\"\"],[\"a\",\"mat-icon-button\",\"\"],[\"a\",\"mat-fab\",\"\"],[\"a\",\"mat-mini-fab\",\"\"],[\"a\",\"mat-stroked-button\",\"\"],[\"a\",\"mat-flat-button\",\"\"]],hostAttrs:[1,\"mat-focus-indicator\"],hostVars:7,hostBindings:function(rf,ctx){1&rf&&_angular_core__WEBPACK_IMPORTED_MODULE_2__.jc(\"click\",function($event){return ctx._haltDisabledEvents($event)}),2&rf&&(_angular_core__WEBPACK_IMPORTED_MODULE_2__.Hb(\"tabindex\",ctx.disabled?-1:ctx.tabIndex||0)(\"disabled\",ctx.disabled||null)(\"aria-disabled\",ctx.disabled.toString()),_angular_core__WEBPACK_IMPORTED_MODULE_2__.Lb(\"_mat-animation-noopable\",\"NoopAnimations\"===ctx._animationMode)(\"mat-button-disabled\",ctx.disabled))},inputs:{disabled:\"disabled\",disableRipple:\"disableRipple\",color:\"color\",tabIndex:\"tabIndex\"},exportAs:[\"matButton\",\"matAnchor\"],features:[_angular_core__WEBPACK_IMPORTED_MODULE_2__.Db],attrs:_c0,ngContentSelectors:_c1,decls:4,vars:5,consts:[[1,\"mat-button-wrapper\"],[\"matRipple\",\"\",1,\"mat-button-ripple\",3,\"matRippleDisabled\",\"matRippleCentered\",\"matRippleTrigger\"],[1,\"mat-button-focus-overlay\"]],template:function(rf,ctx){1&rf&&(_angular_core__WEBPACK_IMPORTED_MODULE_2__.sc(),_angular_core__WEBPACK_IMPORTED_MODULE_2__.Zb(0,\"span\",0),_angular_core__WEBPACK_IMPORTED_MODULE_2__.rc(1),_angular_core__WEBPACK_IMPORTED_MODULE_2__.Yb(),_angular_core__WEBPACK_IMPORTED_MODULE_2__.Ub(2,\"span\",1),_angular_core__WEBPACK_IMPORTED_MODULE_2__.Ub(3,\"span\",2)),2&rf&&(_angular_core__WEBPACK_IMPORTED_MODULE_2__.Gb(2),_angular_core__WEBPACK_IMPORTED_MODULE_2__.Lb(\"mat-button-ripple-round\",ctx.isRoundButton||ctx.isIconButton),_angular_core__WEBPACK_IMPORTED_MODULE_2__.tc(\"matRippleDisabled\",ctx._isRippleDisabled())(\"matRippleCentered\",ctx.isIconButton)(\"matRippleTrigger\",ctx._getHostElement()))},directives:[_angular_material_core__WEBPACK_IMPORTED_MODULE_0__.t],styles:[_c2],encapsulation:2,changeDetection:0}),MatAnchor})(),MatButtonModule=(()=>{class MatButtonModule{}return MatButtonModule.ɵmod=_angular_core__WEBPACK_IMPORTED_MODULE_2__.Rb({type:MatButtonModule}),MatButtonModule.ɵinj=_angular_core__WEBPACK_IMPORTED_MODULE_2__.Qb({factory:function(t){return new(t||MatButtonModule)},imports:[[_angular_material_core__WEBPACK_IMPORTED_MODULE_0__.u,_angular_material_core__WEBPACK_IMPORTED_MODULE_0__.j],_angular_material_core__WEBPACK_IMPORTED_MODULE_0__.j]}),MatButtonModule})()},xHqg:function(module,__webpack_exports__,__webpack_require__){\"use strict\";__webpack_require__.d(__webpack_exports__,\"a\",function(){return stepper_MatHorizontalStepper}),__webpack_require__.d(__webpack_exports__,\"b\",function(){return stepper_MatStep}),__webpack_require__.d(__webpack_exports__,\"c\",function(){return stepper_MatStepLabel}),__webpack_require__.d(__webpack_exports__,\"d\",function(){return stepper_MatStepperModule}),__webpack_require__.d(__webpack_exports__,\"e\",function(){return stepper_MatStepperNext}),__webpack_require__.d(__webpack_exports__,\"f\",function(){return stepper_MatStepperPrevious}),__webpack_require__.d(__webpack_exports__,\"g\",function(){return stepper_MatVerticalStepper});var portal=__webpack_require__(\"+rOU\"),a11y=__webpack_require__(\"u47x\"),bidi=__webpack_require__(\"cH1L\"),coercion=__webpack_require__(\"8LU1\"),keycodes=__webpack_require__(\"FtGj\"),common=__webpack_require__(\"ofXK\"),core=__webpack_require__(\"fXoL\"),Subject=__webpack_require__(\"XNiG\"),of=__webpack_require__(\"LRne\"),startWith=__webpack_require__(\"JX91\"),takeUntil=__webpack_require__(\"1G5W\");function CdkStep_ng_template_0_Template(rf,ctx){1&rf&&core.rc(0)}const _c0=[\"*\"];let stepper_CdkStepHeader=(()=>{class CdkStepHeader{constructor(_elementRef){this._elementRef=_elementRef}focus(){this._elementRef.nativeElement.focus()}}return CdkStepHeader.ɵfac=function(t){return new(t||CdkStepHeader)(core.Tb(core.m))},CdkStepHeader.ɵdir=core.Ob({type:CdkStepHeader,selectors:[[\"\",\"cdkStepHeader\",\"\"]],hostAttrs:[\"role\",\"tab\"]}),CdkStepHeader})(),stepper_CdkStepLabel=(()=>{class CdkStepLabel{constructor(template){this.template=template}}return CdkStepLabel.ɵfac=function(t){return new(t||CdkStepLabel)(core.Tb(core.R))},CdkStepLabel.ɵdir=core.Ob({type:CdkStepLabel,selectors:[[\"\",\"cdkStepLabel\",\"\"]]}),CdkStepLabel})(),nextId=0;const STEPPER_GLOBAL_OPTIONS=new core.u(\"STEPPER_GLOBAL_OPTIONS\");let stepper_CdkStep=(()=>{class CdkStep{constructor(_stepper,stepperOptions){this._stepper=_stepper,this.interacted=!1,this._editable=!0,this._optional=!1,this._completedOverride=null,this._customError=null,this._stepperOptions=stepperOptions||{},this._displayDefaultIndicatorType=!1!==this._stepperOptions.displayDefaultIndicatorType,this._showError=!!this._stepperOptions.showError}get editable(){return this._editable}set editable(value){this._editable=Object(coercion.c)(value)}get optional(){return this._optional}set optional(value){this._optional=Object(coercion.c)(value)}get completed(){return null==this._completedOverride?this._getDefaultCompleted():this._completedOverride}set completed(value){this._completedOverride=Object(coercion.c)(value)}_getDefaultCompleted(){return this.stepControl?this.stepControl.valid&&this.interacted:this.interacted}get hasError(){return null==this._customError?this._getDefaultError():this._customError}set hasError(value){this._customError=Object(coercion.c)(value)}_getDefaultError(){return this.stepControl&&this.stepControl.invalid&&this.interacted}select(){this._stepper.selected=this}reset(){this.interacted=!1,null!=this._completedOverride&&(this._completedOverride=!1),null!=this._customError&&(this._customError=!1),this.stepControl&&this.stepControl.reset()}ngOnChanges(){this._stepper._stateChanged()}}return CdkStep.ɵfac=function(t){return new(t||CdkStep)(core.Tb(Object(core.Z)(()=>stepper_CdkStepper)),core.Tb(STEPPER_GLOBAL_OPTIONS,8))},CdkStep.ɵcmp=core.Nb({type:CdkStep,selectors:[[\"cdk-step\"]],contentQueries:function(rf,ctx,dirIndex){if(1&rf&&core.Mb(dirIndex,stepper_CdkStepLabel,!0),2&rf){let _t;core.Fc(_t=core.kc())&&(ctx.stepLabel=_t.first)}},viewQuery:function(rf,ctx){if(1&rf&&core.Nc(core.R,!0),2&rf){let _t;core.Fc(_t=core.kc())&&(ctx.content=_t.first)}},inputs:{editable:\"editable\",optional:\"optional\",completed:\"completed\",hasError:\"hasError\",stepControl:\"stepControl\",label:\"label\",errorMessage:\"errorMessage\",ariaLabel:[\"aria-label\",\"ariaLabel\"],ariaLabelledby:[\"aria-labelledby\",\"ariaLabelledby\"],state:\"state\"},exportAs:[\"cdkStep\"],features:[core.Eb],ngContentSelectors:_c0,decls:1,vars:0,template:function(rf,ctx){1&rf&&(core.sc(),core.Sc(0,CdkStep_ng_template_0_Template,1,0,\"ng-template\"))},encapsulation:2,changeDetection:0}),CdkStep})(),stepper_CdkStepper=(()=>{class CdkStepper{constructor(_dir,_changeDetectorRef,_elementRef,_document){this._dir=_dir,this._changeDetectorRef=_changeDetectorRef,this._elementRef=_elementRef,this._destroyed=new Subject.a,this.steps=new core.J,this._linear=!1,this._selectedIndex=0,this.selectionChange=new core.p,this._orientation=\"horizontal\",this._groupId=nextId++,this._document=_document}get linear(){return this._linear}set linear(value){this._linear=Object(coercion.c)(value)}get selectedIndex(){return this._selectedIndex}set selectedIndex(index){const newIndex=Object(coercion.f)(index);if(this.steps&&this._steps){this._isValidIndex(index);const selectedStep=this.selected;selectedStep&&(selectedStep.interacted=!0),this._selectedIndex!==newIndex&&!this._anyControlsInvalidOrPending(newIndex)&&(newIndex>=this._selectedIndex||this.steps.toArray()[newIndex].editable)&&this._updateSelectedItemIndex(index)}else this._selectedIndex=newIndex}get selected(){return this.steps?this.steps.toArray()[this.selectedIndex]:void 0}set selected(step){this.selectedIndex=this.steps?this.steps.toArray().indexOf(step):-1}ngAfterContentInit(){this._steps.changes.pipe(Object(startWith.a)(this._steps),Object(takeUntil.a)(this._destroyed)).subscribe(steps=>{this.steps.reset(steps.filter(step=>step._stepper===this)),this.steps.notifyOnChanges()})}ngAfterViewInit(){this._keyManager=new a11y.g(this._stepHeader).withWrap().withHomeAndEnd().withVerticalOrientation(\"vertical\"===this._orientation),(this._dir?this._dir.change:Object(of.a)()).pipe(Object(startWith.a)(this._layoutDirection()),Object(takeUntil.a)(this._destroyed)).subscribe(direction=>this._keyManager.withHorizontalOrientation(direction)),this._keyManager.updateActiveItem(this._selectedIndex),this.steps.changes.subscribe(()=>{this.selected||(this._selectedIndex=Math.max(this._selectedIndex-1,0))}),this._isValidIndex(this._selectedIndex)||(this._selectedIndex=0)}ngOnDestroy(){this.steps.destroy(),this._destroyed.next(),this._destroyed.complete()}next(){this.selectedIndex=Math.min(this._selectedIndex+1,this.steps.length-1)}previous(){this.selectedIndex=Math.max(this._selectedIndex-1,0)}reset(){this._updateSelectedItemIndex(0),this.steps.forEach(step=>step.reset()),this._stateChanged()}_getStepLabelId(i){return`cdk-step-label-${this._groupId}-${i}`}_getStepContentId(i){return`cdk-step-content-${this._groupId}-${i}`}_stateChanged(){this._changeDetectorRef.markForCheck()}_getAnimationDirection(index){const position=index-this._selectedIndex;return position<0?\"rtl\"===this._layoutDirection()?\"next\":\"previous\":position>0?\"rtl\"===this._layoutDirection()?\"previous\":\"next\":\"current\"}_getIndicatorType(index,state=\"number\"){const step=this.steps.toArray()[index],isCurrentStep=this._isCurrentStep(index);return step._displayDefaultIndicatorType?this._getDefaultIndicatorLogic(step,isCurrentStep):this._getGuidelineLogic(step,isCurrentStep,state)}_getDefaultIndicatorLogic(step,isCurrentStep){return step._showError&&step.hasError&&!isCurrentStep?\"error\":!step.completed||isCurrentStep?\"number\":step.editable?\"edit\":\"done\"}_getGuidelineLogic(step,isCurrentStep,state=\"number\"){return step._showError&&step.hasError&&!isCurrentStep?\"error\":step.completed&&!isCurrentStep?\"done\":step.completed&&isCurrentStep?state:step.editable&&isCurrentStep?\"edit\":state}_isCurrentStep(index){return this._selectedIndex===index}_getFocusIndex(){return this._keyManager?this._keyManager.activeItemIndex:this._selectedIndex}_updateSelectedItemIndex(newIndex){const stepsArray=this.steps.toArray();this.selectionChange.emit({selectedIndex:newIndex,previouslySelectedIndex:this._selectedIndex,selectedStep:stepsArray[newIndex],previouslySelectedStep:stepsArray[this._selectedIndex]}),this._containsFocus()?this._keyManager.setActiveItem(newIndex):this._keyManager.updateActiveItem(newIndex),this._selectedIndex=newIndex,this._stateChanged()}_onKeydown(event){const hasModifier=Object(keycodes.t)(event),keyCode=event.keyCode,manager=this._keyManager;null==manager.activeItemIndex||hasModifier||keyCode!==keycodes.o&&keyCode!==keycodes.g?manager.onKeydown(event):(this.selectedIndex=manager.activeItemIndex,event.preventDefault())}_anyControlsInvalidOrPending(index){return!!(this._linear&&index>=0)&&this.steps.toArray().slice(0,index).some(step=>{const control=step.stepControl;return(control?control.invalid||control.pending||!step.interacted:!step.completed)&&!step.optional&&!step._completedOverride})}_layoutDirection(){return this._dir&&\"rtl\"===this._dir.value?\"rtl\":\"ltr\"}_containsFocus(){if(!this._document||!this._elementRef)return!1;const stepperElement=this._elementRef.nativeElement,focusedElement=this._document.activeElement;return stepperElement===focusedElement||stepperElement.contains(focusedElement)}_isValidIndex(index){return index>-1&&(!this.steps||index<this.steps.length)}}return CdkStepper.ɵfac=function(t){return new(t||CdkStepper)(core.Tb(bidi.b,8),core.Tb(core.i),core.Tb(core.m),core.Tb(common.d))},CdkStepper.ɵdir=core.Ob({type:CdkStepper,selectors:[[\"\",\"cdkStepper\",\"\"]],contentQueries:function(rf,ctx,dirIndex){if(1&rf&&(core.Mb(dirIndex,stepper_CdkStep,!0),core.Mb(dirIndex,stepper_CdkStepHeader,!0)),2&rf){let _t;core.Fc(_t=core.kc())&&(ctx._steps=_t),core.Fc(_t=core.kc())&&(ctx._stepHeader=_t)}},inputs:{linear:\"linear\",selectedIndex:\"selectedIndex\",selected:\"selected\"},outputs:{selectionChange:\"selectionChange\"},exportAs:[\"cdkStepper\"]}),CdkStepper})(),stepper_CdkStepperNext=(()=>{class CdkStepperNext{constructor(_stepper){this._stepper=_stepper,this.type=\"submit\"}_handleClick(){this._stepper.next()}}return CdkStepperNext.ɵfac=function(t){return new(t||CdkStepperNext)(core.Tb(stepper_CdkStepper))},CdkStepperNext.ɵdir=core.Ob({type:CdkStepperNext,selectors:[[\"button\",\"cdkStepperNext\",\"\"]],hostVars:1,hostBindings:function(rf,ctx){1&rf&&core.jc(\"click\",function(){return ctx._handleClick()}),2&rf&&core.cc(\"type\",ctx.type)},inputs:{type:\"type\"}}),CdkStepperNext})(),stepper_CdkStepperPrevious=(()=>{class CdkStepperPrevious{constructor(_stepper){this._stepper=_stepper,this.type=\"button\"}_handleClick(){this._stepper.previous()}}return CdkStepperPrevious.ɵfac=function(t){return new(t||CdkStepperPrevious)(core.Tb(stepper_CdkStepper))},CdkStepperPrevious.ɵdir=core.Ob({type:CdkStepperPrevious,selectors:[[\"button\",\"cdkStepperPrevious\",\"\"]],hostVars:1,hostBindings:function(rf,ctx){1&rf&&core.jc(\"click\",function(){return ctx._handleClick()}),2&rf&&core.cc(\"type\",ctx.type)},inputs:{type:\"type\"}}),CdkStepperPrevious})(),stepper_CdkStepperModule=(()=>{class CdkStepperModule{}return CdkStepperModule.ɵmod=core.Rb({type:CdkStepperModule}),CdkStepperModule.ɵinj=core.Qb({factory:function(t){return new(t||CdkStepperModule)},imports:[[bidi.a]]}),CdkStepperModule})();var fesm2015_button=__webpack_require__(\"bTqV\"),fesm2015_core=__webpack_require__(\"FKr1\"),icon=__webpack_require__(\"NFeN\"),distinctUntilChanged=__webpack_require__(\"/uUt\"),animations=__webpack_require__(\"R0Ic\");function MatStepHeader_ng_container_3_Template(rf,ctx){if(1&rf&&core.Vb(0,8),2&rf){const ctx_r0=core.nc();core.tc(\"ngTemplateOutlet\",ctx_r0.iconOverrides[ctx_r0.state])(\"ngTemplateOutletContext\",ctx_r0._getIconContext())}}function MatStepHeader_ng_container_4_span_1_Template(rf,ctx){if(1&rf&&(core.Zb(0,\"span\"),core.Uc(1),core.Yb()),2&rf){const ctx_r6=core.nc(2);core.Gb(1),core.Vc(ctx_r6._getDefaultTextForState(ctx_r6.state))}}function MatStepHeader_ng_container_4_mat_icon_2_Template(rf,ctx){if(1&rf&&(core.Zb(0,\"mat-icon\"),core.Uc(1),core.Yb()),2&rf){const ctx_r7=core.nc(2);core.Gb(1),core.Vc(ctx_r7._getDefaultTextForState(ctx_r7.state))}}function MatStepHeader_ng_container_4_Template(rf,ctx){if(1&rf&&(core.Xb(0,9),core.Sc(1,MatStepHeader_ng_container_4_span_1_Template,2,1,\"span\",10),core.Sc(2,MatStepHeader_ng_container_4_mat_icon_2_Template,2,1,\"mat-icon\",11),core.Wb()),2&rf){const ctx_r1=core.nc();core.tc(\"ngSwitch\",ctx_r1.state),core.Gb(1),core.tc(\"ngSwitchCase\",\"number\")}}function MatStepHeader_div_6_Template(rf,ctx){if(1&rf&&(core.Zb(0,\"div\",12),core.Vb(1,13),core.Yb()),2&rf){const ctx_r2=core.nc();core.Gb(1),core.tc(\"ngTemplateOutlet\",ctx_r2._templateLabel().template)}}function MatStepHeader_div_7_Template(rf,ctx){if(1&rf&&(core.Zb(0,\"div\",12),core.Uc(1),core.Yb()),2&rf){const ctx_r3=core.nc();core.Gb(1),core.Vc(ctx_r3.label)}}function MatStepHeader_div_8_Template(rf,ctx){if(1&rf&&(core.Zb(0,\"div\",14),core.Uc(1),core.Yb()),2&rf){const ctx_r4=core.nc();core.Gb(1),core.Vc(ctx_r4._intl.optionalLabel)}}function MatStepHeader_div_9_Template(rf,ctx){if(1&rf&&(core.Zb(0,\"div\",15),core.Uc(1),core.Yb()),2&rf){const ctx_r5=core.nc();core.Gb(1),core.Vc(ctx_r5.errorMessage)}}function MatStep_ng_template_0_Template(rf,ctx){1&rf&&core.rc(0)}const stepper_c0=[\"*\"];function MatHorizontalStepper_ng_container_1_div_2_Template(rf,ctx){1&rf&&core.Ub(0,\"div\",6)}function MatHorizontalStepper_ng_container_1_Template(rf,ctx){if(1&rf){const _r8=core.ac();core.Xb(0),core.Zb(1,\"mat-step-header\",4),core.jc(\"click\",function(){return ctx.$implicit.select()})(\"keydown\",function($event){return core.Ic(_r8),core.nc()._onKeydown($event)}),core.Yb(),core.Sc(2,MatHorizontalStepper_ng_container_1_div_2_Template,1,0,\"div\",5),core.Wb()}if(2&rf){const step_r2=ctx.$implicit,i_r3=ctx.index,isLast_r4=ctx.last,ctx_r0=core.nc();core.Gb(1),core.tc(\"tabIndex\",ctx_r0._getFocusIndex()===i_r3?0:-1)(\"id\",ctx_r0._getStepLabelId(i_r3))(\"index\",i_r3)(\"state\",ctx_r0._getIndicatorType(i_r3,step_r2.state))(\"label\",step_r2.stepLabel||step_r2.label)(\"selected\",ctx_r0.selectedIndex===i_r3)(\"active\",step_r2.completed||ctx_r0.selectedIndex===i_r3||!ctx_r0.linear)(\"optional\",step_r2.optional)(\"errorMessage\",step_r2.errorMessage)(\"iconOverrides\",ctx_r0._iconOverrides)(\"disableRipple\",ctx_r0.disableRipple)(\"color\",step_r2.color||ctx_r0.color),core.Hb(\"aria-posinset\",i_r3+1)(\"aria-setsize\",ctx_r0.steps.length)(\"aria-controls\",ctx_r0._getStepContentId(i_r3))(\"aria-selected\",ctx_r0.selectedIndex==i_r3)(\"aria-label\",step_r2.ariaLabel||null)(\"aria-labelledby\",!step_r2.ariaLabel&&step_r2.ariaLabelledby?step_r2.ariaLabelledby:null),core.Gb(1),core.tc(\"ngIf\",!isLast_r4)}}function MatHorizontalStepper_div_3_Template(rf,ctx){if(1&rf){const _r12=core.ac();core.Zb(0,\"div\",7),core.jc(\"@stepTransition.done\",function($event){return core.Ic(_r12),core.nc()._animationDone.next($event)}),core.Vb(1,8),core.Yb()}if(2&rf){const step_r9=ctx.$implicit,i_r10=ctx.index,ctx_r1=core.nc();core.tc(\"@stepTransition\",ctx_r1._getAnimationDirection(i_r10))(\"id\",ctx_r1._getStepContentId(i_r10)),core.Hb(\"aria-labelledby\",ctx_r1._getStepLabelId(i_r10))(\"aria-expanded\",ctx_r1.selectedIndex===i_r10),core.Gb(1),core.tc(\"ngTemplateOutlet\",step_r9.content)}}function MatVerticalStepper_div_0_Template(rf,ctx){if(1&rf){const _r6=core.ac();core.Zb(0,\"div\",1),core.Zb(1,\"mat-step-header\",2),core.jc(\"click\",function(){return ctx.$implicit.select()})(\"keydown\",function($event){return core.Ic(_r6),core.nc()._onKeydown($event)}),core.Yb(),core.Zb(2,\"div\",3),core.Zb(3,\"div\",4),core.jc(\"@stepTransition.done\",function($event){return core.Ic(_r6),core.nc()._animationDone.next($event)}),core.Zb(4,\"div\",5),core.Vb(5,6),core.Yb(),core.Yb(),core.Yb(),core.Yb()}if(2&rf){const step_r1=ctx.$implicit,i_r2=ctx.index,isLast_r3=ctx.last,ctx_r0=core.nc();core.Gb(1),core.tc(\"tabIndex\",ctx_r0._getFocusIndex()==i_r2?0:-1)(\"id\",ctx_r0._getStepLabelId(i_r2))(\"index\",i_r2)(\"state\",ctx_r0._getIndicatorType(i_r2,step_r1.state))(\"label\",step_r1.stepLabel||step_r1.label)(\"selected\",ctx_r0.selectedIndex===i_r2)(\"active\",step_r1.completed||ctx_r0.selectedIndex===i_r2||!ctx_r0.linear)(\"optional\",step_r1.optional)(\"errorMessage\",step_r1.errorMessage)(\"iconOverrides\",ctx_r0._iconOverrides)(\"disableRipple\",ctx_r0.disableRipple)(\"color\",step_r1.color||ctx_r0.color),core.Hb(\"aria-posinset\",i_r2+1)(\"aria-setsize\",ctx_r0.steps.length)(\"aria-controls\",ctx_r0._getStepContentId(i_r2))(\"aria-selected\",ctx_r0.selectedIndex===i_r2)(\"aria-label\",step_r1.ariaLabel||null)(\"aria-labelledby\",!step_r1.ariaLabel&&step_r1.ariaLabelledby?step_r1.ariaLabelledby:null),core.Gb(1),core.Lb(\"mat-stepper-vertical-line\",!isLast_r3),core.Gb(1),core.tc(\"@stepTransition\",ctx_r0._getAnimationDirection(i_r2))(\"id\",ctx_r0._getStepContentId(i_r2)),core.Hb(\"aria-labelledby\",ctx_r0._getStepLabelId(i_r2))(\"aria-expanded\",ctx_r0.selectedIndex===i_r2),core.Gb(2),core.tc(\"ngTemplateOutlet\",step_r1.content)}}const _c1='.mat-stepper-vertical,.mat-stepper-horizontal{display:block}.mat-horizontal-stepper-header-container{white-space:nowrap;display:flex;align-items:center}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header-container{align-items:flex-start}.mat-stepper-horizontal-line{border-top-width:1px;border-top-style:solid;flex:auto;height:0;margin:0 -16px;min-width:32px}.mat-stepper-label-position-bottom .mat-stepper-horizontal-line{margin:0;min-width:0;position:relative}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before,.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{border-top-width:1px;border-top-style:solid;content:\"\";display:inline-block;height:0;position:absolute;width:calc(50% - 20px)}.mat-horizontal-stepper-header{display:flex;height:72px;overflow:hidden;align-items:center;padding:0 24px}.mat-horizontal-stepper-header .mat-step-icon{margin-right:8px;flex:none}[dir=rtl] .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:8px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header{box-sizing:border-box;flex-direction:column;height:auto}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{right:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before{left:0}[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:last-child::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:first-child::after{display:none}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-label{padding:16px 0 0 0;text-align:center;width:100%}.mat-vertical-stepper-header{display:flex;align-items:center;height:24px}.mat-vertical-stepper-header .mat-step-icon{margin-right:12px}[dir=rtl] .mat-vertical-stepper-header .mat-step-icon{margin-right:0;margin-left:12px}.mat-horizontal-stepper-content{outline:0}.mat-horizontal-stepper-content[aria-expanded=false]{height:0;overflow:hidden}.mat-horizontal-content-container{overflow:hidden;padding:0 24px 24px 24px}.mat-vertical-content-container{margin-left:36px;border:0;position:relative}[dir=rtl] .mat-vertical-content-container{margin-left:0;margin-right:36px}.mat-stepper-vertical-line::before{content:\"\";position:absolute;left:0;border-left-width:1px;border-left-style:solid}[dir=rtl] .mat-stepper-vertical-line::before{left:auto;right:0}.mat-vertical-stepper-content{overflow:hidden;outline:0}.mat-vertical-content{padding:0 24px 24px 24px}.mat-step:last-child .mat-vertical-content-container{border:none}\\n';let stepper_MatStepLabel=(()=>{class MatStepLabel extends stepper_CdkStepLabel{}return MatStepLabel.ɵfac=function(t){return ɵMatStepLabel_BaseFactory(t||MatStepLabel)},MatStepLabel.ɵdir=core.Ob({type:MatStepLabel,selectors:[[\"\",\"matStepLabel\",\"\"]],features:[core.Db]}),MatStepLabel})();const ɵMatStepLabel_BaseFactory=core.bc(stepper_MatStepLabel);let stepper_MatStepperIntl=(()=>{class MatStepperIntl{constructor(){this.changes=new Subject.a,this.optionalLabel=\"Optional\"}}return MatStepperIntl.ɵfac=function(t){return new(t||MatStepperIntl)},MatStepperIntl.ɵprov=Object(core.Pb)({factory:function(){return new MatStepperIntl},token:MatStepperIntl,providedIn:\"root\"}),MatStepperIntl})();const MAT_STEPPER_INTL_PROVIDER={provide:stepper_MatStepperIntl,deps:[[new core.G,new core.P,stepper_MatStepperIntl]],useFactory:function(parentIntl){return parentIntl||new stepper_MatStepperIntl}};class stepper_MatStepHeaderBase extends stepper_CdkStepHeader{constructor(elementRef){super(elementRef)}}const _MatStepHeaderMixinBase=Object(fesm2015_core.y)(stepper_MatStepHeaderBase,\"primary\");let stepper_MatStepHeader=(()=>{class MatStepHeader extends _MatStepHeaderMixinBase{constructor(_intl,_focusMonitor,_elementRef,changeDetectorRef){super(_elementRef),this._intl=_intl,this._focusMonitor=_focusMonitor,this._intlSubscription=_intl.changes.subscribe(()=>changeDetectorRef.markForCheck())}ngAfterViewInit(){this._focusMonitor.monitor(this._elementRef,!0)}ngOnDestroy(){this._intlSubscription.unsubscribe(),this._focusMonitor.stopMonitoring(this._elementRef)}focus(origin,options){origin?this._focusMonitor.focusVia(this._elementRef,origin,options):this._elementRef.nativeElement.focus(options)}_stringLabel(){return this.label instanceof stepper_MatStepLabel?null:this.label}_templateLabel(){return this.label instanceof stepper_MatStepLabel?this.label:null}_getHostElement(){return this._elementRef.nativeElement}_getIconContext(){return{index:this.index,active:this.active,optional:this.optional}}_getDefaultTextForState(state){return\"number\"==state?\"\"+(this.index+1):\"edit\"==state?\"create\":\"error\"==state?\"warning\":state}}return MatStepHeader.ɵfac=function(t){return new(t||MatStepHeader)(core.Tb(stepper_MatStepperIntl),core.Tb(a11y.h),core.Tb(core.m),core.Tb(core.i))},MatStepHeader.ɵcmp=core.Nb({type:MatStepHeader,selectors:[[\"mat-step-header\"]],hostAttrs:[\"role\",\"tab\",1,\"mat-step-header\",\"mat-focus-indicator\"],inputs:{color:\"color\",state:\"state\",label:\"label\",errorMessage:\"errorMessage\",iconOverrides:\"iconOverrides\",index:\"index\",selected:\"selected\",active:\"active\",optional:\"optional\",disableRipple:\"disableRipple\"},features:[core.Db],decls:10,vars:19,consts:[[\"matRipple\",\"\",1,\"mat-step-header-ripple\",3,\"matRippleTrigger\",\"matRippleDisabled\"],[1,\"mat-step-icon-content\",3,\"ngSwitch\"],[3,\"ngTemplateOutlet\",\"ngTemplateOutletContext\",4,\"ngSwitchCase\"],[3,\"ngSwitch\",4,\"ngSwitchDefault\"],[1,\"mat-step-label\"],[\"class\",\"mat-step-text-label\",4,\"ngIf\"],[\"class\",\"mat-step-optional\",4,\"ngIf\"],[\"class\",\"mat-step-sub-label-error\",4,\"ngIf\"],[3,\"ngTemplateOutlet\",\"ngTemplateOutletContext\"],[3,\"ngSwitch\"],[4,\"ngSwitchCase\"],[4,\"ngSwitchDefault\"],[1,\"mat-step-text-label\"],[3,\"ngTemplateOutlet\"],[1,\"mat-step-optional\"],[1,\"mat-step-sub-label-error\"]],template:function(rf,ctx){1&rf&&(core.Ub(0,\"div\",0),core.Zb(1,\"div\"),core.Zb(2,\"div\",1),core.Sc(3,MatStepHeader_ng_container_3_Template,1,2,\"ng-container\",2),core.Sc(4,MatStepHeader_ng_container_4_Template,3,2,\"ng-container\",3),core.Yb(),core.Yb(),core.Zb(5,\"div\",4),core.Sc(6,MatStepHeader_div_6_Template,2,1,\"div\",5),core.Sc(7,MatStepHeader_div_7_Template,2,1,\"div\",5),core.Sc(8,MatStepHeader_div_8_Template,2,1,\"div\",6),core.Sc(9,MatStepHeader_div_9_Template,2,1,\"div\",7),core.Yb()),2&rf&&(core.tc(\"matRippleTrigger\",ctx._getHostElement())(\"matRippleDisabled\",ctx.disableRipple),core.Gb(1),core.Jb(\"mat-step-icon-state-\",ctx.state,\" mat-step-icon\"),core.Lb(\"mat-step-icon-selected\",ctx.selected),core.Gb(1),core.tc(\"ngSwitch\",!(!ctx.iconOverrides||!ctx.iconOverrides[ctx.state])),core.Gb(1),core.tc(\"ngSwitchCase\",!0),core.Gb(2),core.Lb(\"mat-step-label-active\",ctx.active)(\"mat-step-label-selected\",ctx.selected)(\"mat-step-label-error\",\"error\"==ctx.state),core.Gb(1),core.tc(\"ngIf\",ctx._templateLabel()),core.Gb(1),core.tc(\"ngIf\",ctx._stringLabel()),core.Gb(1),core.tc(\"ngIf\",ctx.optional&&\"error\"!=ctx.state),core.Gb(1),core.tc(\"ngIf\",\"error\"==ctx.state))},directives:[fesm2015_core.t,common.p,common.q,common.r,common.n,common.s,icon.a],styles:[\".mat-step-header{overflow:hidden;outline:none;cursor:pointer;position:relative;box-sizing:content-box;-webkit-tap-highlight-color:transparent}.mat-step-optional,.mat-step-sub-label-error{font-size:12px}.mat-step-icon{border-radius:50%;height:24px;width:24px;flex-shrink:0;position:relative}.mat-step-icon-content,.mat-step-icon .mat-icon{position:absolute;top:50%;left:50%;transform:translate(-50%, -50%)}.mat-step-icon .mat-icon{font-size:16px;height:16px;width:16px}.mat-step-icon-state-error .mat-icon{font-size:24px;height:24px;width:24px}.mat-step-label{display:inline-block;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;min-width:50px;vertical-align:middle}.mat-step-text-label{text-overflow:ellipsis;overflow:hidden}.mat-step-header .mat-step-header-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\\n\"],encapsulation:2,changeDetection:0}),MatStepHeader})();const matStepperAnimations={horizontalStepTransition:Object(animations.n)(\"stepTransition\",[Object(animations.k)(\"previous\",Object(animations.l)({transform:\"translate3d(-100%, 0, 0)\",visibility:\"hidden\"})),Object(animations.k)(\"current\",Object(animations.l)({transform:\"none\",visibility:\"inherit\"})),Object(animations.k)(\"next\",Object(animations.l)({transform:\"translate3d(100%, 0, 0)\",visibility:\"hidden\"})),Object(animations.m)(\"* => *\",Object(animations.e)(\"500ms cubic-bezier(0.35, 0, 0.25, 1)\"))]),verticalStepTransition:Object(animations.n)(\"stepTransition\",[Object(animations.k)(\"previous\",Object(animations.l)({height:\"0px\",visibility:\"hidden\"})),Object(animations.k)(\"next\",Object(animations.l)({height:\"0px\",visibility:\"hidden\"})),Object(animations.k)(\"current\",Object(animations.l)({height:\"*\",visibility:\"inherit\"})),Object(animations.m)(\"* <=> current\",Object(animations.e)(\"225ms cubic-bezier(0.4, 0.0, 0.2, 1)\"))])};let stepper_MatStepperIcon=(()=>{class MatStepperIcon{constructor(templateRef){this.templateRef=templateRef}}return MatStepperIcon.ɵfac=function(t){return new(t||MatStepperIcon)(core.Tb(core.R))},MatStepperIcon.ɵdir=core.Ob({type:MatStepperIcon,selectors:[[\"ng-template\",\"matStepperIcon\",\"\"]],inputs:{name:[\"matStepperIcon\",\"name\"]}}),MatStepperIcon})(),stepper_MatStep=(()=>{class MatStep extends stepper_CdkStep{constructor(stepper,_errorStateMatcher,stepperOptions){super(stepper,stepperOptions),this._errorStateMatcher=_errorStateMatcher}isErrorState(control,form){return this._errorStateMatcher.isErrorState(control,form)||!!(control&&control.invalid&&this.interacted)}}return MatStep.ɵfac=function(t){return new(t||MatStep)(core.Tb(Object(core.Z)(()=>stepper_MatStepper)),core.Tb(fesm2015_core.d,4),core.Tb(STEPPER_GLOBAL_OPTIONS,8))},MatStep.ɵcmp=core.Nb({type:MatStep,selectors:[[\"mat-step\"]],contentQueries:function(rf,ctx,dirIndex){if(1&rf&&core.Mb(dirIndex,stepper_MatStepLabel,!0),2&rf){let _t;core.Fc(_t=core.kc())&&(ctx.stepLabel=_t.first)}},inputs:{color:\"color\"},exportAs:[\"matStep\"],features:[core.Fb([{provide:fesm2015_core.d,useExisting:MatStep},{provide:stepper_CdkStep,useExisting:MatStep}]),core.Db],ngContentSelectors:stepper_c0,decls:1,vars:0,template:function(rf,ctx){1&rf&&(core.sc(),core.Sc(0,MatStep_ng_template_0_Template,1,0,\"ng-template\"))},encapsulation:2,changeDetection:0}),MatStep})(),stepper_MatStepper=(()=>{class MatStepper extends stepper_CdkStepper{constructor(){super(...arguments),this.steps=new core.J,this.animationDone=new core.p,this._iconOverrides={},this._animationDone=new Subject.a}ngAfterContentInit(){super.ngAfterContentInit(),this._icons.forEach(({name:name,templateRef:templateRef})=>this._iconOverrides[name]=templateRef),this.steps.changes.pipe(Object(takeUntil.a)(this._destroyed)).subscribe(()=>{this._stateChanged()}),this._animationDone.pipe(Object(distinctUntilChanged.a)((x,y)=>x.fromState===y.fromState&&x.toState===y.toState),Object(takeUntil.a)(this._destroyed)).subscribe(event=>{\"current\"===event.toState&&this.animationDone.emit()})}}return MatStepper.ɵfac=function(t){return ɵMatStepper_BaseFactory(t||MatStepper)},MatStepper.ɵdir=core.Ob({type:MatStepper,selectors:[[\"\",\"matStepper\",\"\"]],contentQueries:function(rf,ctx,dirIndex){if(1&rf&&(core.Mb(dirIndex,stepper_MatStep,!0),core.Mb(dirIndex,stepper_MatStepperIcon,!0)),2&rf){let _t;core.Fc(_t=core.kc())&&(ctx._steps=_t),core.Fc(_t=core.kc())&&(ctx._icons=_t)}},viewQuery:function(rf,ctx){if(1&rf&&core.Zc(stepper_MatStepHeader,!0),2&rf){let _t;core.Fc(_t=core.kc())&&(ctx._stepHeader=_t)}},inputs:{disableRipple:\"disableRipple\",color:\"color\"},outputs:{animationDone:\"animationDone\"},features:[core.Fb([{provide:stepper_CdkStepper,useExisting:MatStepper}]),core.Db]}),MatStepper})();const ɵMatStepper_BaseFactory=core.bc(stepper_MatStepper);let stepper_MatHorizontalStepper=(()=>{class MatHorizontalStepper extends stepper_MatStepper{constructor(){super(...arguments),this.labelPosition=\"end\"}}return MatHorizontalStepper.ɵfac=function(t){return ɵMatHorizontalStepper_BaseFactory(t||MatHorizontalStepper)},MatHorizontalStepper.ɵcmp=core.Nb({type:MatHorizontalStepper,selectors:[[\"mat-horizontal-stepper\"]],hostAttrs:[\"aria-orientation\",\"horizontal\",\"role\",\"tablist\",1,\"mat-stepper-horizontal\"],hostVars:4,hostBindings:function(rf,ctx){2&rf&&core.Lb(\"mat-stepper-label-position-end\",\"end\"==ctx.labelPosition)(\"mat-stepper-label-position-bottom\",\"bottom\"==ctx.labelPosition)},inputs:{selectedIndex:\"selectedIndex\",labelPosition:\"labelPosition\"},exportAs:[\"matHorizontalStepper\"],features:[core.Fb([{provide:stepper_MatStepper,useExisting:MatHorizontalStepper},{provide:stepper_CdkStepper,useExisting:MatHorizontalStepper}]),core.Db],decls:4,vars:2,consts:[[1,\"mat-horizontal-stepper-header-container\"],[4,\"ngFor\",\"ngForOf\"],[1,\"mat-horizontal-content-container\"],[\"class\",\"mat-horizontal-stepper-content\",\"role\",\"tabpanel\",3,\"id\",4,\"ngFor\",\"ngForOf\"],[1,\"mat-horizontal-stepper-header\",3,\"tabIndex\",\"id\",\"index\",\"state\",\"label\",\"selected\",\"active\",\"optional\",\"errorMessage\",\"iconOverrides\",\"disableRipple\",\"color\",\"click\",\"keydown\"],[\"class\",\"mat-stepper-horizontal-line\",4,\"ngIf\"],[1,\"mat-stepper-horizontal-line\"],[\"role\",\"tabpanel\",1,\"mat-horizontal-stepper-content\",3,\"id\"],[3,\"ngTemplateOutlet\"]],template:function(rf,ctx){1&rf&&(core.Zb(0,\"div\",0),core.Sc(1,MatHorizontalStepper_ng_container_1_Template,3,19,\"ng-container\",1),core.Yb(),core.Zb(2,\"div\",2),core.Sc(3,MatHorizontalStepper_div_3_Template,2,5,\"div\",3),core.Yb()),2&rf&&(core.Gb(1),core.tc(\"ngForOf\",ctx.steps),core.Gb(2),core.tc(\"ngForOf\",ctx.steps))},directives:[common.m,stepper_MatStepHeader,common.n,common.s],styles:[_c1],encapsulation:2,data:{animation:[matStepperAnimations.horizontalStepTransition]},changeDetection:0}),MatHorizontalStepper})();const ɵMatHorizontalStepper_BaseFactory=core.bc(stepper_MatHorizontalStepper);let stepper_MatVerticalStepper=(()=>{class MatVerticalStepper extends stepper_MatStepper{constructor(dir,changeDetectorRef,elementRef,_document){super(dir,changeDetectorRef,elementRef,_document),this._orientation=\"vertical\"}}return MatVerticalStepper.ɵfac=function(t){return new(t||MatVerticalStepper)(core.Tb(bidi.b,8),core.Tb(core.i),core.Tb(core.m),core.Tb(common.d))},MatVerticalStepper.ɵcmp=core.Nb({type:MatVerticalStepper,selectors:[[\"mat-vertical-stepper\"]],hostAttrs:[\"aria-orientation\",\"vertical\",\"role\",\"tablist\",1,\"mat-stepper-vertical\"],inputs:{selectedIndex:\"selectedIndex\"},exportAs:[\"matVerticalStepper\"],features:[core.Fb([{provide:stepper_MatStepper,useExisting:MatVerticalStepper},{provide:stepper_CdkStepper,useExisting:MatVerticalStepper}]),core.Db],decls:1,vars:1,consts:[[\"class\",\"mat-step\",4,\"ngFor\",\"ngForOf\"],[1,\"mat-step\"],[1,\"mat-vertical-stepper-header\",3,\"tabIndex\",\"id\",\"index\",\"state\",\"label\",\"selected\",\"active\",\"optional\",\"errorMessage\",\"iconOverrides\",\"disableRipple\",\"color\",\"click\",\"keydown\"],[1,\"mat-vertical-content-container\"],[\"role\",\"tabpanel\",1,\"mat-vertical-stepper-content\",3,\"id\"],[1,\"mat-vertical-content\"],[3,\"ngTemplateOutlet\"]],template:function(rf,ctx){1&rf&&core.Sc(0,MatVerticalStepper_div_0_Template,6,25,\"div\",0),2&rf&&core.tc(\"ngForOf\",ctx.steps)},directives:[common.m,stepper_MatStepHeader,common.s],styles:[_c1],encapsulation:2,data:{animation:[matStepperAnimations.verticalStepTransition]},changeDetection:0}),MatVerticalStepper})(),stepper_MatStepperNext=(()=>{class MatStepperNext extends stepper_CdkStepperNext{}return MatStepperNext.ɵfac=function(t){return ɵMatStepperNext_BaseFactory(t||MatStepperNext)},MatStepperNext.ɵdir=core.Ob({type:MatStepperNext,selectors:[[\"button\",\"matStepperNext\",\"\"]],hostAttrs:[1,\"mat-stepper-next\"],hostVars:1,hostBindings:function(rf,ctx){2&rf&&core.cc(\"type\",ctx.type)},inputs:{type:\"type\"},features:[core.Db]}),MatStepperNext})();const ɵMatStepperNext_BaseFactory=core.bc(stepper_MatStepperNext);let stepper_MatStepperPrevious=(()=>{class MatStepperPrevious extends stepper_CdkStepperPrevious{}return MatStepperPrevious.ɵfac=function(t){return ɵMatStepperPrevious_BaseFactory(t||MatStepperPrevious)},MatStepperPrevious.ɵdir=core.Ob({type:MatStepperPrevious,selectors:[[\"button\",\"matStepperPrevious\",\"\"]],hostAttrs:[1,\"mat-stepper-previous\"],hostVars:1,hostBindings:function(rf,ctx){2&rf&&core.cc(\"type\",ctx.type)},inputs:{type:\"type\"},features:[core.Db]}),MatStepperPrevious})();const ɵMatStepperPrevious_BaseFactory=core.bc(stepper_MatStepperPrevious);let stepper_MatStepperModule=(()=>{class MatStepperModule{}return MatStepperModule.ɵmod=core.Rb({type:MatStepperModule}),MatStepperModule.ɵinj=core.Qb({factory:function(t){return new(t||MatStepperModule)},providers:[MAT_STEPPER_INTL_PROVIDER,fesm2015_core.d],imports:[[fesm2015_core.j,common.c,portal.f,fesm2015_button.c,stepper_CdkStepperModule,icon.b,fesm2015_core.u],fesm2015_core.j]}),MatStepperModule})()}}]);","name":"3-es2015.d5f3e003be1fb3a28c8e.js","input":"(window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || []).push([[3],{\n\n/***/ \"NFeN\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export ICON_REGISTRY_PROVIDER */\n/* unused harmony export ICON_REGISTRY_PROVIDER_FACTORY */\n/* unused harmony export MAT_ICON_LOCATION */\n/* unused harmony export MAT_ICON_LOCATION_FACTORY */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return MatIcon; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return MatIconModule; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return MatIconRegistry; });\n/* unused harmony export getMatIconFailedToSanitizeLiteralError */\n/* unused harmony export getMatIconFailedToSanitizeUrlError */\n/* unused harmony export getMatIconNameNotFoundError */\n/* unused harmony export getMatIconNoHttpProviderError */\n/* unused harmony export ɵ0 */\n/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"fXoL\");\n/* harmony import */ var _angular_material_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"FKr1\");\n/* harmony import */ var _angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"8LU1\");\n/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"ofXK\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"LRne\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(\"z6cu\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(\"cp0P\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(\"quSY\");\n/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(\"vkgz\");\n/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(\"lJxs\");\n/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(\"JIr8\");\n/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(\"nYR2\");\n/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(\"w1tV\");\n/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(\"IzEk\");\n/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(\"tk/3\");\n/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(\"jhN1\");\n\n\n\n\n\n\n\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an exception to be thrown in the case when attempting to\n * load an icon with a name that cannot be found.\n * @docs-private\n */\n\n\n\nconst _c0 = [\"*\"];\nfunction getMatIconNameNotFoundError(iconName) {\n    return Error(`Unable to find icon with the name \"${iconName}\"`);\n}\n/**\n * Returns an exception to be thrown when the consumer attempts to use\n * `<mat-icon>` without including @angular/common/http.\n * @docs-private\n */\nfunction getMatIconNoHttpProviderError() {\n    return Error('Could not find HttpClient provider for use with Angular Material icons. ' +\n        'Please include the HttpClientModule from @angular/common/http in your ' +\n        'app imports.');\n}\n/**\n * Returns an exception to be thrown when a URL couldn't be sanitized.\n * @param url URL that was attempted to be sanitized.\n * @docs-private\n */\nfunction getMatIconFailedToSanitizeUrlError(url) {\n    return Error(`The URL provided to MatIconRegistry was not trusted as a resource URL ` +\n        `via Angular's DomSanitizer. Attempted URL was \"${url}\".`);\n}\n/**\n * Returns an exception to be thrown when a HTML string couldn't be sanitized.\n * @param literal HTML that was attempted to be sanitized.\n * @docs-private\n */\nfunction getMatIconFailedToSanitizeLiteralError(literal) {\n    return Error(`The literal provided to MatIconRegistry was not trusted as safe HTML by ` +\n        `Angular's DomSanitizer. Attempted literal was \"${literal}\".`);\n}\n/**\n * Configuration for an icon, including the URL and possibly the cached SVG element.\n * @docs-private\n */\nclass SvgIconConfig {\n    constructor(url, svgText, options) {\n        this.url = url;\n        this.svgText = svgText;\n        this.options = options;\n    }\n}\nlet MatIconRegistry = /*@__PURE__*/ (() => {\n    class MatIconRegistry {\n        constructor(_httpClient, _sanitizer, document, _errorHandler) {\n            this._httpClient = _httpClient;\n            this._sanitizer = _sanitizer;\n            this._errorHandler = _errorHandler;\n            /**\n             * URLs and cached SVG elements for individual icons. Keys are of the format \"[namespace]:[icon]\".\n             */\n            this._svgIconConfigs = new Map();\n            /**\n             * SvgIconConfig objects and cached SVG elements for icon sets, keyed by namespace.\n             * Multiple icon sets can be registered under the same namespace.\n             */\n            this._iconSetConfigs = new Map();\n            /** Cache for icons loaded by direct URLs. */\n            this._cachedIconsByUrl = new Map();\n            /** In-progress icon fetches. Used to coalesce multiple requests to the same URL. */\n            this._inProgressUrlFetches = new Map();\n            /** Map from font identifiers to their CSS class names. Used for icon fonts. */\n            this._fontCssClassesByAlias = new Map();\n            /** Registered icon resolver functions. */\n            this._resolvers = [];\n            /**\n             * The CSS class to apply when an `<mat-icon>` component has no icon name, url, or font specified.\n             * The default 'material-icons' value assumes that the material icon font has been loaded as\n             * described at http://google.github.io/material-design-icons/#icon-font-for-the-web\n             */\n            this._defaultFontSetClass = 'material-icons';\n            this._document = document;\n        }\n        /**\n         * Registers an icon by URL in the default namespace.\n         * @param iconName Name under which the icon should be registered.\n         * @param url\n         */\n        addSvgIcon(iconName, url, options) {\n            return this.addSvgIconInNamespace('', iconName, url, options);\n        }\n        /**\n         * Registers an icon using an HTML string in the default namespace.\n         * @param iconName Name under which the icon should be registered.\n         * @param literal SVG source of the icon.\n         */\n        addSvgIconLiteral(iconName, literal, options) {\n            return this.addSvgIconLiteralInNamespace('', iconName, literal, options);\n        }\n        /**\n         * Registers an icon by URL in the specified namespace.\n         * @param namespace Namespace in which the icon should be registered.\n         * @param iconName Name under which the icon should be registered.\n         * @param url\n         */\n        addSvgIconInNamespace(namespace, iconName, url, options) {\n            return this._addSvgIconConfig(namespace, iconName, new SvgIconConfig(url, null, options));\n        }\n        /**\n         * Registers an icon resolver function with the registry. The function will be invoked with the\n         * name and namespace of an icon when the registry tries to resolve the URL from which to fetch\n         * the icon. The resolver is expected to return a `SafeResourceUrl` that points to the icon,\n         * an object with the icon URL and icon options, or `null` if the icon is not supported. Resolvers\n         * will be invoked in the order in which they have been registered.\n         * @param resolver Resolver function to be registered.\n         */\n        addSvgIconResolver(resolver) {\n            this._resolvers.push(resolver);\n            return this;\n        }\n        /**\n         * Registers an icon using an HTML string in the specified namespace.\n         * @param namespace Namespace in which the icon should be registered.\n         * @param iconName Name under which the icon should be registered.\n         * @param literal SVG source of the icon.\n         */\n        addSvgIconLiteralInNamespace(namespace, iconName, literal, options) {\n            const cleanLiteral = this._sanitizer.sanitize(_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* SecurityContext */ \"O\"].HTML, literal);\n            // TODO: add an ngDevMode check\n            if (!cleanLiteral) {\n                throw getMatIconFailedToSanitizeLiteralError(literal);\n            }\n            return this._addSvgIconConfig(namespace, iconName, new SvgIconConfig('', cleanLiteral, options));\n        }\n        /**\n         * Registers an icon set by URL in the default namespace.\n         * @param url\n         */\n        addSvgIconSet(url, options) {\n            return this.addSvgIconSetInNamespace('', url, options);\n        }\n        /**\n         * Registers an icon set using an HTML string in the default namespace.\n         * @param literal SVG source of the icon set.\n         */\n        addSvgIconSetLiteral(literal, options) {\n            return this.addSvgIconSetLiteralInNamespace('', literal, options);\n        }\n        /**\n         * Registers an icon set by URL in the specified namespace.\n         * @param namespace Namespace in which to register the icon set.\n         * @param url\n         */\n        addSvgIconSetInNamespace(namespace, url, options) {\n            return this._addSvgIconSetConfig(namespace, new SvgIconConfig(url, null, options));\n        }\n        /**\n         * Registers an icon set using an HTML string in the specified namespace.\n         * @param namespace Namespace in which to register the icon set.\n         * @param literal SVG source of the icon set.\n         */\n        addSvgIconSetLiteralInNamespace(namespace, literal, options) {\n            const cleanLiteral = this._sanitizer.sanitize(_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* SecurityContext */ \"O\"].HTML, literal);\n            if (!cleanLiteral) {\n                throw getMatIconFailedToSanitizeLiteralError(literal);\n            }\n            return this._addSvgIconSetConfig(namespace, new SvgIconConfig('', cleanLiteral, options));\n        }\n        /**\n         * Defines an alias for a CSS class name to be used for icon fonts. Creating an matIcon\n         * component with the alias as the fontSet input will cause the class name to be applied\n         * to the `<mat-icon>` element.\n         *\n         * @param alias Alias for the font.\n         * @param className Class name override to be used instead of the alias.\n         */\n        registerFontClassAlias(alias, className = alias) {\n            this._fontCssClassesByAlias.set(alias, className);\n            return this;\n        }\n        /**\n         * Returns the CSS class name associated with the alias by a previous call to\n         * registerFontClassAlias. If no CSS class has been associated, returns the alias unmodified.\n         */\n        classNameForFontAlias(alias) {\n            return this._fontCssClassesByAlias.get(alias) || alias;\n        }\n        /**\n         * Sets the CSS class name to be used for icon fonts when an `<mat-icon>` component does not\n         * have a fontSet input value, and is not loading an icon by name or URL.\n         *\n         * @param className\n         */\n        setDefaultFontSetClass(className) {\n            this._defaultFontSetClass = className;\n            return this;\n        }\n        /**\n         * Returns the CSS class name to be used for icon fonts when an `<mat-icon>` component does not\n         * have a fontSet input value, and is not loading an icon by name or URL.\n         */\n        getDefaultFontSetClass() {\n            return this._defaultFontSetClass;\n        }\n        /**\n         * Returns an Observable that produces the icon (as an `<svg>` DOM element) from the given URL.\n         * The response from the URL may be cached so this will not always cause an HTTP request, but\n         * the produced element will always be a new copy of the originally fetched icon. (That is,\n         * it will not contain any modifications made to elements previously returned).\n         *\n         * @param safeUrl URL from which to fetch the SVG icon.\n         */\n        getSvgIconFromUrl(safeUrl) {\n            const url = this._sanitizer.sanitize(_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* SecurityContext */ \"O\"].RESOURCE_URL, safeUrl);\n            if (!url) {\n                throw getMatIconFailedToSanitizeUrlError(safeUrl);\n            }\n            const cachedIcon = this._cachedIconsByUrl.get(url);\n            if (cachedIcon) {\n                return Object(rxjs__WEBPACK_IMPORTED_MODULE_4__[/* of */ \"a\"])(cloneSvg(cachedIcon));\n            }\n            return this._loadSvgIconFromConfig(new SvgIconConfig(safeUrl, null)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_8__[/* tap */ \"a\"])(svg => this._cachedIconsByUrl.set(url, svg)), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_9__[/* map */ \"a\"])(svg => cloneSvg(svg)));\n        }\n        /**\n         * Returns an Observable that produces the icon (as an `<svg>` DOM element) with the given name\n         * and namespace. The icon must have been previously registered with addIcon or addIconSet;\n         * if not, the Observable will throw an error.\n         *\n         * @param name Name of the icon to be retrieved.\n         * @param namespace Namespace in which to look for the icon.\n         */\n        getNamedSvgIcon(name, namespace = '') {\n            const key = iconKey(namespace, name);\n            let config = this._svgIconConfigs.get(key);\n            // Return (copy of) cached icon if possible.\n            if (config) {\n                return this._getSvgFromConfig(config);\n            }\n            // Otherwise try to resolve the config from one of the resolver functions.\n            config = this._getIconConfigFromResolvers(namespace, name);\n            if (config) {\n                this._svgIconConfigs.set(key, config);\n                return this._getSvgFromConfig(config);\n            }\n            // See if we have any icon sets registered for the namespace.\n            const iconSetConfigs = this._iconSetConfigs.get(namespace);\n            if (iconSetConfigs) {\n                return this._getSvgFromIconSetConfigs(name, iconSetConfigs);\n            }\n            return Object(rxjs__WEBPACK_IMPORTED_MODULE_5__[/* throwError */ \"a\"])(getMatIconNameNotFoundError(key));\n        }\n        ngOnDestroy() {\n            this._resolvers = [];\n            this._svgIconConfigs.clear();\n            this._iconSetConfigs.clear();\n            this._cachedIconsByUrl.clear();\n        }\n        /**\n         * Returns the cached icon for a SvgIconConfig if available, or fetches it from its URL if not.\n         */\n        _getSvgFromConfig(config) {\n            if (config.svgText) {\n                // We already have the SVG element for this icon, return a copy.\n                return Object(rxjs__WEBPACK_IMPORTED_MODULE_4__[/* of */ \"a\"])(cloneSvg(this._svgElementFromConfig(config)));\n            }\n            else {\n                // Fetch the icon from the config's URL, cache it, and return a copy.\n                return this._loadSvgIconFromConfig(config).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_9__[/* map */ \"a\"])(svg => cloneSvg(svg)));\n            }\n        }\n        /**\n         * Attempts to find an icon with the specified name in any of the SVG icon sets.\n         * First searches the available cached icons for a nested element with a matching name, and\n         * if found copies the element to a new `<svg>` element. If not found, fetches all icon sets\n         * that have not been cached, and searches again after all fetches are completed.\n         * The returned Observable produces the SVG element if possible, and throws\n         * an error if no icon with the specified name can be found.\n         */\n        _getSvgFromIconSetConfigs(name, iconSetConfigs) {\n            // For all the icon set SVG elements we've fetched, see if any contain an icon with the\n            // requested name.\n            const namedIcon = this._extractIconWithNameFromAnySet(name, iconSetConfigs);\n            if (namedIcon) {\n                // We could cache namedIcon in _svgIconConfigs, but since we have to make a copy every\n                // time anyway, there's probably not much advantage compared to just always extracting\n                // it from the icon set.\n                return Object(rxjs__WEBPACK_IMPORTED_MODULE_4__[/* of */ \"a\"])(namedIcon);\n            }\n            // Not found in any cached icon sets. If there are icon sets with URLs that we haven't\n            // fetched, fetch them now and look for iconName in the results.\n            const iconSetFetchRequests = iconSetConfigs\n                .filter(iconSetConfig => !iconSetConfig.svgText)\n                .map(iconSetConfig => {\n                return this._loadSvgIconSetFromConfig(iconSetConfig).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_10__[/* catchError */ \"a\"])((err) => {\n                    const url = this._sanitizer.sanitize(_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* SecurityContext */ \"O\"].RESOURCE_URL, iconSetConfig.url);\n                    // Swallow errors fetching individual URLs so the\n                    // combined Observable won't necessarily fail.\n                    const errorMessage = `Loading icon set URL: ${url} failed: ${err.message}`;\n                    this._errorHandler.handleError(new Error(errorMessage));\n                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_4__[/* of */ \"a\"])(null);\n                }));\n            });\n            // Fetch all the icon set URLs. When the requests complete, every IconSet should have a\n            // cached SVG element (unless the request failed), and we can check again for the icon.\n            return Object(rxjs__WEBPACK_IMPORTED_MODULE_6__[/* forkJoin */ \"a\"])(iconSetFetchRequests).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_9__[/* map */ \"a\"])(() => {\n                const foundIcon = this._extractIconWithNameFromAnySet(name, iconSetConfigs);\n                // TODO: add an ngDevMode check\n                if (!foundIcon) {\n                    throw getMatIconNameNotFoundError(name);\n                }\n                return foundIcon;\n            }));\n        }\n        /**\n         * Searches the cached SVG elements for the given icon sets for a nested icon element whose \"id\"\n         * tag matches the specified name. If found, copies the nested element to a new SVG element and\n         * returns it. Returns null if no matching element is found.\n         */\n        _extractIconWithNameFromAnySet(iconName, iconSetConfigs) {\n            // Iterate backwards, so icon sets added later have precedence.\n            for (let i = iconSetConfigs.length - 1; i >= 0; i--) {\n                const config = iconSetConfigs[i];\n                // Parsing the icon set's text into an SVG element can be expensive. We can avoid some of\n                // the parsing by doing a quick check using `indexOf` to see if there's any chance for the\n                // icon to be in the set. This won't be 100% accurate, but it should help us avoid at least\n                // some of the parsing.\n                if (config.svgText && config.svgText.indexOf(iconName) > -1) {\n                    const svg = this._svgElementFromConfig(config);\n                    const foundIcon = this._extractSvgIconFromSet(svg, iconName, config.options);\n                    if (foundIcon) {\n                        return foundIcon;\n                    }\n                }\n            }\n            return null;\n        }\n        /**\n         * Loads the content of the icon URL specified in the SvgIconConfig and creates an SVG element\n         * from it.\n         */\n        _loadSvgIconFromConfig(config) {\n            return this._fetchIcon(config).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_8__[/* tap */ \"a\"])(svgText => config.svgText = svgText), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_9__[/* map */ \"a\"])(() => this._svgElementFromConfig(config)));\n        }\n        /**\n         * Loads the content of the icon set URL specified in the\n         * SvgIconConfig and attaches it to the config.\n         */\n        _loadSvgIconSetFromConfig(config) {\n            if (config.svgText) {\n                return Object(rxjs__WEBPACK_IMPORTED_MODULE_4__[/* of */ \"a\"])(null);\n            }\n            return this._fetchIcon(config).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_8__[/* tap */ \"a\"])(svgText => config.svgText = svgText));\n        }\n        /**\n         * Searches the cached element of the given SvgIconConfig for a nested icon element whose \"id\"\n         * tag matches the specified name. If found, copies the nested element to a new SVG element and\n         * returns it. Returns null if no matching element is found.\n         */\n        _extractSvgIconFromSet(iconSet, iconName, options) {\n            // Use the `id=\"iconName\"` syntax in order to escape special\n            // characters in the ID (versus using the #iconName syntax).\n            const iconSource = iconSet.querySelector(`[id=\"${iconName}\"]`);\n            if (!iconSource) {\n                return null;\n            }\n            // Clone the element and remove the ID to prevent multiple elements from being added\n            // to the page with the same ID.\n            const iconElement = iconSource.cloneNode(true);\n            iconElement.removeAttribute('id');\n            // If the icon node is itself an <svg> node, clone and return it directly. If not, set it as\n            // the content of a new <svg> node.\n            if (iconElement.nodeName.toLowerCase() === 'svg') {\n                return this._setSvgAttributes(iconElement, options);\n            }\n            // If the node is a <symbol>, it won't be rendered so we have to convert it into <svg>. Note\n            // that the same could be achieved by referring to it via <use href=\"#id\">, however the <use>\n            // tag is problematic on Firefox, because it needs to include the current page path.\n            if (iconElement.nodeName.toLowerCase() === 'symbol') {\n                return this._setSvgAttributes(this._toSvgElement(iconElement), options);\n            }\n            // createElement('SVG') doesn't work as expected; the DOM ends up with\n            // the correct nodes, but the SVG content doesn't render. Instead we\n            // have to create an empty SVG node using innerHTML and append its content.\n            // Elements created using DOMParser.parseFromString have the same problem.\n            // http://stackoverflow.com/questions/23003278/svg-innerhtml-in-firefox-can-not-display\n            const svg = this._svgElementFromString('<svg></svg>');\n            // Clone the node so we don't remove it from the parent icon set element.\n            svg.appendChild(iconElement);\n            return this._setSvgAttributes(svg, options);\n        }\n        /**\n         * Creates a DOM element from the given SVG string.\n         */\n        _svgElementFromString(str) {\n            const div = this._document.createElement('DIV');\n            div.innerHTML = str;\n            const svg = div.querySelector('svg');\n            // TODO: add an ngDevMode check\n            if (!svg) {\n                throw Error('<svg> tag not found');\n            }\n            return svg;\n        }\n        /**\n         * Converts an element into an SVG node by cloning all of its children.\n         */\n        _toSvgElement(element) {\n            const svg = this._svgElementFromString('<svg></svg>');\n            const attributes = element.attributes;\n            // Copy over all the attributes from the `symbol` to the new SVG, except the id.\n            for (let i = 0; i < attributes.length; i++) {\n                const { name, value } = attributes[i];\n                if (name !== 'id') {\n                    svg.setAttribute(name, value);\n                }\n            }\n            for (let i = 0; i < element.childNodes.length; i++) {\n                if (element.childNodes[i].nodeType === this._document.ELEMENT_NODE) {\n                    svg.appendChild(element.childNodes[i].cloneNode(true));\n                }\n            }\n            return svg;\n        }\n        /**\n         * Sets the default attributes for an SVG element to be used as an icon.\n         */\n        _setSvgAttributes(svg, options) {\n            svg.setAttribute('fit', '');\n            svg.setAttribute('height', '100%');\n            svg.setAttribute('width', '100%');\n            svg.setAttribute('preserveAspectRatio', 'xMidYMid meet');\n            svg.setAttribute('focusable', 'false'); // Disable IE11 default behavior to make SVGs focusable.\n            if (options && options.viewBox) {\n                svg.setAttribute('viewBox', options.viewBox);\n            }\n            return svg;\n        }\n        /**\n         * Returns an Observable which produces the string contents of the given icon. Results may be\n         * cached, so future calls with the same URL may not cause another HTTP request.\n         */\n        _fetchIcon(iconConfig) {\n            var _a;\n            const { url: safeUrl, options } = iconConfig;\n            const withCredentials = (_a = options === null || options === void 0 ? void 0 : options.withCredentials) !== null && _a !== void 0 ? _a : false;\n            if (!this._httpClient) {\n                throw getMatIconNoHttpProviderError();\n            }\n            // TODO: add an ngDevMode check\n            if (safeUrl == null) {\n                throw Error(`Cannot fetch icon from URL \"${safeUrl}\".`);\n            }\n            const url = this._sanitizer.sanitize(_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* SecurityContext */ \"O\"].RESOURCE_URL, safeUrl);\n            // TODO: add an ngDevMode check\n            if (!url) {\n                throw getMatIconFailedToSanitizeUrlError(safeUrl);\n            }\n            // Store in-progress fetches to avoid sending a duplicate request for a URL when there is\n            // already a request in progress for that URL. It's necessary to call share() on the\n            // Observable returned by http.get() so that multiple subscribers don't cause multiple XHRs.\n            const inProgressFetch = this._inProgressUrlFetches.get(url);\n            if (inProgressFetch) {\n                return inProgressFetch;\n            }\n            const req = this._httpClient.get(url, { responseType: 'text', withCredentials }).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_11__[/* finalize */ \"a\"])(() => this._inProgressUrlFetches.delete(url)), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__[/* share */ \"a\"])());\n            this._inProgressUrlFetches.set(url, req);\n            return req;\n        }\n        /**\n         * Registers an icon config by name in the specified namespace.\n         * @param namespace Namespace in which to register the icon config.\n         * @param iconName Name under which to register the config.\n         * @param config Config to be registered.\n         */\n        _addSvgIconConfig(namespace, iconName, config) {\n            this._svgIconConfigs.set(iconKey(namespace, iconName), config);\n            return this;\n        }\n        /**\n         * Registers an icon set config in the specified namespace.\n         * @param namespace Namespace in which to register the icon config.\n         * @param config Config to be registered.\n         */\n        _addSvgIconSetConfig(namespace, config) {\n            const configNamespace = this._iconSetConfigs.get(namespace);\n            if (configNamespace) {\n                configNamespace.push(config);\n            }\n            else {\n                this._iconSetConfigs.set(namespace, [config]);\n            }\n            return this;\n        }\n        /** Parses a config's text into an SVG element. */\n        _svgElementFromConfig(config) {\n            if (!config.svgElement) {\n                const svg = this._svgElementFromString(config.svgText);\n                this._setSvgAttributes(svg, config.options);\n                config.svgElement = svg;\n            }\n            return config.svgElement;\n        }\n        /** Tries to create an icon config through the registered resolver functions. */\n        _getIconConfigFromResolvers(namespace, name) {\n            for (let i = 0; i < this._resolvers.length; i++) {\n                const result = this._resolvers[i](name, namespace);\n                if (result) {\n                    return isSafeUrlWithOptions(result) ?\n                        new SvgIconConfig(result.url, null, result.options) :\n                        new SvgIconConfig(result, null);\n                }\n            }\n            return undefined;\n        }\n    }\n    MatIconRegistry.ɵfac = function MatIconRegistry_Factory(t) { return new (t || MatIconRegistry)(_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵinject */ \"gc\"](_angular_common_http__WEBPACK_IMPORTED_MODULE_14__[/* HttpClient */ \"b\"], 8), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵinject */ \"gc\"](_angular_platform_browser__WEBPACK_IMPORTED_MODULE_15__[/* DomSanitizer */ \"b\"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵinject */ \"gc\"](_angular_common__WEBPACK_IMPORTED_MODULE_3__[/* DOCUMENT */ \"d\"], 8), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵinject */ \"gc\"](_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ErrorHandler */ \"o\"])); };\n    MatIconRegistry.ɵprov = /*@__PURE__*/ Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdefineInjectable */ \"Pb\"])({ factory: function MatIconRegistry_Factory() { return new MatIconRegistry(Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵinject */ \"gc\"])(_angular_common_http__WEBPACK_IMPORTED_MODULE_14__[/* HttpClient */ \"b\"], 8), Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵinject */ \"gc\"])(_angular_platform_browser__WEBPACK_IMPORTED_MODULE_15__[/* DomSanitizer */ \"b\"]), Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵinject */ \"gc\"])(_angular_common__WEBPACK_IMPORTED_MODULE_3__[/* DOCUMENT */ \"d\"], 8), Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵinject */ \"gc\"])(_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ErrorHandler */ \"o\"])); }, token: MatIconRegistry, providedIn: \"root\" });\n    return MatIconRegistry;\n})();\n/** @docs-private */\nfunction ICON_REGISTRY_PROVIDER_FACTORY(parentRegistry, httpClient, sanitizer, errorHandler, document) {\n    return parentRegistry || new MatIconRegistry(httpClient, sanitizer, document, errorHandler);\n}\n/** @docs-private */\nconst ICON_REGISTRY_PROVIDER = {\n    // If there is already an MatIconRegistry available, use that. Otherwise, provide a new one.\n    provide: MatIconRegistry,\n    deps: [\n        [/*@__PURE__*/ new _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* Optional */ \"G\"](), /*@__PURE__*/ new _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* SkipSelf */ \"P\"](), MatIconRegistry],\n        [/*@__PURE__*/ new _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* Optional */ \"G\"](), _angular_common_http__WEBPACK_IMPORTED_MODULE_14__[/* HttpClient */ \"b\"]],\n        _angular_platform_browser__WEBPACK_IMPORTED_MODULE_15__[/* DomSanitizer */ \"b\"],\n        _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ErrorHandler */ \"o\"],\n        [/*@__PURE__*/ new _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* Optional */ \"G\"](), _angular_common__WEBPACK_IMPORTED_MODULE_3__[/* DOCUMENT */ \"d\"]],\n    ],\n    useFactory: ICON_REGISTRY_PROVIDER_FACTORY,\n};\n/** Clones an SVGElement while preserving type information. */\nfunction cloneSvg(svg) {\n    return svg.cloneNode(true);\n}\n/** Returns the cache key to use for an icon namespace and name. */\nfunction iconKey(namespace, name) {\n    return namespace + ':' + name;\n}\nfunction isSafeUrlWithOptions(value) {\n    return !!(value.url && value.options);\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatIcon.\n/** @docs-private */\nclass MatIconBase {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nconst _MatIconMixinBase = /*@__PURE__*/ Object(_angular_material_core__WEBPACK_IMPORTED_MODULE_1__[/* mixinColor */ \"y\"])(MatIconBase);\n/**\n * Injection token used to provide the current location to `MatIcon`.\n * Used to handle server-side rendering and to stub out during unit tests.\n * @docs-private\n */\nconst MAT_ICON_LOCATION = /*@__PURE__*/ new _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* InjectionToken */ \"u\"]('mat-icon-location', {\n    providedIn: 'root',\n    factory: MAT_ICON_LOCATION_FACTORY\n});\n/** @docs-private */\nfunction MAT_ICON_LOCATION_FACTORY() {\n    const _document = Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* inject */ \"ab\"])(_angular_common__WEBPACK_IMPORTED_MODULE_3__[/* DOCUMENT */ \"d\"]);\n    const _location = _document ? _document.location : null;\n    return {\n        // Note that this needs to be a function, rather than a property, because Angular\n        // will only resolve it once, but we want the current path on each call.\n        getPathname: () => _location ? (_location.pathname + _location.search) : ''\n    };\n}\n/** SVG attributes that accept a FuncIRI (e.g. `url(<something>)`). */\nconst funcIriAttributes = [\n    'clip-path',\n    'color-profile',\n    'src',\n    'cursor',\n    'fill',\n    'filter',\n    'marker',\n    'marker-start',\n    'marker-mid',\n    'marker-end',\n    'mask',\n    'stroke'\n];\nconst ɵ0 = attr => `[${attr}]`;\n/** Selector that can be used to find all elements that are using a `FuncIRI`. */\nconst funcIriAttributeSelector = /*@__PURE__*/ /*@__PURE__*/ funcIriAttributes.map(ɵ0).join(', ');\n/** Regex that can be used to extract the id out of a FuncIRI. */\nconst funcIriPattern = /^url\\(['\"]?#(.*?)['\"]?\\)$/;\nlet MatIcon = /*@__PURE__*/ (() => {\n    class MatIcon extends _MatIconMixinBase {\n        constructor(elementRef, _iconRegistry, ariaHidden, _location, _errorHandler) {\n            super(elementRef);\n            this._iconRegistry = _iconRegistry;\n            this._location = _location;\n            this._errorHandler = _errorHandler;\n            this._inline = false;\n            /** Subscription to the current in-progress SVG icon request. */\n            this._currentIconFetch = rxjs__WEBPACK_IMPORTED_MODULE_7__[/* Subscription */ \"a\"].EMPTY;\n            // If the user has not explicitly set aria-hidden, mark the icon as hidden, as this is\n            // the right thing to do for the majority of icon use-cases.\n            if (!ariaHidden) {\n                elementRef.nativeElement.setAttribute('aria-hidden', 'true');\n            }\n        }\n        /**\n         * Whether the icon should be inlined, automatically sizing the icon to match the font size of\n         * the element the icon is contained in.\n         */\n        get inline() {\n            return this._inline;\n        }\n        set inline(inline) {\n            this._inline = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_2__[/* coerceBooleanProperty */ \"c\"])(inline);\n        }\n        /** Name of the icon in the SVG icon set. */\n        get svgIcon() { return this._svgIcon; }\n        set svgIcon(value) {\n            if (value !== this._svgIcon) {\n                if (value) {\n                    this._updateSvgIcon(value);\n                }\n                else if (this._svgIcon) {\n                    this._clearSvgElement();\n                }\n                this._svgIcon = value;\n            }\n        }\n        /** Font set that the icon is a part of. */\n        get fontSet() { return this._fontSet; }\n        set fontSet(value) {\n            const newValue = this._cleanupFontValue(value);\n            if (newValue !== this._fontSet) {\n                this._fontSet = newValue;\n                this._updateFontIconClasses();\n            }\n        }\n        /** Name of an icon within a font set. */\n        get fontIcon() { return this._fontIcon; }\n        set fontIcon(value) {\n            const newValue = this._cleanupFontValue(value);\n            if (newValue !== this._fontIcon) {\n                this._fontIcon = newValue;\n                this._updateFontIconClasses();\n            }\n        }\n        /**\n         * Splits an svgIcon binding value into its icon set and icon name components.\n         * Returns a 2-element array of [(icon set), (icon name)].\n         * The separator for the two fields is ':'. If there is no separator, an empty\n         * string is returned for the icon set and the entire value is returned for\n         * the icon name. If the argument is falsy, returns an array of two empty strings.\n         * Throws an error if the name contains two or more ':' separators.\n         * Examples:\n         *   `'social:cake' -> ['social', 'cake']\n         *   'penguin' -> ['', 'penguin']\n         *   null -> ['', '']\n         *   'a:b:c' -> (throws Error)`\n         */\n        _splitIconName(iconName) {\n            if (!iconName) {\n                return ['', ''];\n            }\n            const parts = iconName.split(':');\n            switch (parts.length) {\n                case 1: return ['', parts[0]]; // Use default namespace.\n                case 2: return parts;\n                default: throw Error(`Invalid icon name: \"${iconName}\"`); // TODO: add an ngDevMode check\n            }\n        }\n        ngOnInit() {\n            // Update font classes because ngOnChanges won't be called if none of the inputs are present,\n            // e.g. <mat-icon>arrow</mat-icon> In this case we need to add a CSS class for the default font.\n            this._updateFontIconClasses();\n        }\n        ngAfterViewChecked() {\n            const cachedElements = this._elementsWithExternalReferences;\n            if (cachedElements && cachedElements.size) {\n                const newPath = this._location.getPathname();\n                // We need to check whether the URL has changed on each change detection since\n                // the browser doesn't have an API that will let us react on link clicks and\n                // we can't depend on the Angular router. The references need to be updated,\n                // because while most browsers don't care whether the URL is correct after\n                // the first render, Safari will break if the user navigates to a different\n                // page and the SVG isn't re-rendered.\n                if (newPath !== this._previousPath) {\n                    this._previousPath = newPath;\n                    this._prependPathToReferences(newPath);\n                }\n            }\n        }\n        ngOnDestroy() {\n            this._currentIconFetch.unsubscribe();\n            if (this._elementsWithExternalReferences) {\n                this._elementsWithExternalReferences.clear();\n            }\n        }\n        _usingFontIcon() {\n            return !this.svgIcon;\n        }\n        _setSvgElement(svg) {\n            this._clearSvgElement();\n            // Workaround for IE11 and Edge ignoring `style` tags inside dynamically-created SVGs.\n            // See: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/10898469/\n            // Do this before inserting the element into the DOM, in order to avoid a style recalculation.\n            const styleTags = svg.querySelectorAll('style');\n            for (let i = 0; i < styleTags.length; i++) {\n                styleTags[i].textContent += ' ';\n            }\n            // Note: we do this fix here, rather than the icon registry, because the\n            // references have to point to the URL at the time that the icon was created.\n            const path = this._location.getPathname();\n            this._previousPath = path;\n            this._cacheChildrenWithExternalReferences(svg);\n            this._prependPathToReferences(path);\n            this._elementRef.nativeElement.appendChild(svg);\n        }\n        _clearSvgElement() {\n            const layoutElement = this._elementRef.nativeElement;\n            let childCount = layoutElement.childNodes.length;\n            if (this._elementsWithExternalReferences) {\n                this._elementsWithExternalReferences.clear();\n            }\n            // Remove existing non-element child nodes and SVGs, and add the new SVG element. Note that\n            // we can't use innerHTML, because IE will throw if the element has a data binding.\n            while (childCount--) {\n                const child = layoutElement.childNodes[childCount];\n                // 1 corresponds to Node.ELEMENT_NODE. We remove all non-element nodes in order to get rid\n                // of any loose text nodes, as well as any SVG elements in order to remove any old icons.\n                if (child.nodeType !== 1 || child.nodeName.toLowerCase() === 'svg') {\n                    layoutElement.removeChild(child);\n                }\n            }\n        }\n        _updateFontIconClasses() {\n            if (!this._usingFontIcon()) {\n                return;\n            }\n            const elem = this._elementRef.nativeElement;\n            const fontSetClass = this.fontSet ?\n                this._iconRegistry.classNameForFontAlias(this.fontSet) :\n                this._iconRegistry.getDefaultFontSetClass();\n            if (fontSetClass != this._previousFontSetClass) {\n                if (this._previousFontSetClass) {\n                    elem.classList.remove(this._previousFontSetClass);\n                }\n                if (fontSetClass) {\n                    elem.classList.add(fontSetClass);\n                }\n                this._previousFontSetClass = fontSetClass;\n            }\n            if (this.fontIcon != this._previousFontIconClass) {\n                if (this._previousFontIconClass) {\n                    elem.classList.remove(this._previousFontIconClass);\n                }\n                if (this.fontIcon) {\n                    elem.classList.add(this.fontIcon);\n                }\n                this._previousFontIconClass = this.fontIcon;\n            }\n        }\n        /**\n         * Cleans up a value to be used as a fontIcon or fontSet.\n         * Since the value ends up being assigned as a CSS class, we\n         * have to trim the value and omit space-separated values.\n         */\n        _cleanupFontValue(value) {\n            return typeof value === 'string' ? value.trim().split(' ')[0] : value;\n        }\n        /**\n         * Prepends the current path to all elements that have an attribute pointing to a `FuncIRI`\n         * reference. This is required because WebKit browsers require references to be prefixed with\n         * the current path, if the page has a `base` tag.\n         */\n        _prependPathToReferences(path) {\n            const elements = this._elementsWithExternalReferences;\n            if (elements) {\n                elements.forEach((attrs, element) => {\n                    attrs.forEach(attr => {\n                        element.setAttribute(attr.name, `url('${path}#${attr.value}')`);\n                    });\n                });\n            }\n        }\n        /**\n         * Caches the children of an SVG element that have `url()`\n         * references that we need to prefix with the current path.\n         */\n        _cacheChildrenWithExternalReferences(element) {\n            const elementsWithFuncIri = element.querySelectorAll(funcIriAttributeSelector);\n            const elements = this._elementsWithExternalReferences =\n                this._elementsWithExternalReferences || new Map();\n            for (let i = 0; i < elementsWithFuncIri.length; i++) {\n                funcIriAttributes.forEach(attr => {\n                    const elementWithReference = elementsWithFuncIri[i];\n                    const value = elementWithReference.getAttribute(attr);\n                    const match = value ? value.match(funcIriPattern) : null;\n                    if (match) {\n                        let attributes = elements.get(elementWithReference);\n                        if (!attributes) {\n                            attributes = [];\n                            elements.set(elementWithReference, attributes);\n                        }\n                        attributes.push({ name: attr, value: match[1] });\n                    }\n                });\n            }\n        }\n        /** Sets a new SVG icon with a particular name. */\n        _updateSvgIcon(rawName) {\n            this._svgNamespace = null;\n            this._svgName = null;\n            this._currentIconFetch.unsubscribe();\n            if (rawName) {\n                const [namespace, iconName] = this._splitIconName(rawName);\n                if (namespace) {\n                    this._svgNamespace = namespace;\n                }\n                if (iconName) {\n                    this._svgName = iconName;\n                }\n                this._currentIconFetch = this._iconRegistry.getNamedSvgIcon(iconName, namespace)\n                    .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_13__[/* take */ \"a\"])(1))\n                    .subscribe(svg => this._setSvgElement(svg), (err) => {\n                    const errorMessage = `Error retrieving icon ${namespace}:${iconName}! ${err.message}`;\n                    this._errorHandler.handleError(new Error(errorMessage));\n                });\n            }\n        }\n    }\n    MatIcon.ɵfac = function MatIcon_Factory(t) { return new (t || MatIcon)(_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdirectiveInject */ \"Tb\"](_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ElementRef */ \"m\"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdirectiveInject */ \"Tb\"](MatIconRegistry), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵinjectAttribute */ \"hc\"]('aria-hidden'), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdirectiveInject */ \"Tb\"](MAT_ICON_LOCATION), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdirectiveInject */ \"Tb\"](_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ErrorHandler */ \"o\"])); };\n    MatIcon.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdefineComponent */ \"Nb\"]({ type: MatIcon, selectors: [[\"mat-icon\"]], hostAttrs: [\"role\", \"img\", 1, \"mat-icon\", \"notranslate\"], hostVars: 7, hostBindings: function MatIcon_HostBindings(rf, ctx) {\n            if (rf & 2) {\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵattribute */ \"Hb\"](\"data-mat-icon-type\", ctx._usingFontIcon() ? \"font\" : \"svg\")(\"data-mat-icon-name\", ctx._svgName || ctx.fontIcon)(\"data-mat-icon-namespace\", ctx._svgNamespace || ctx.fontSet);\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵclassProp */ \"Lb\"](\"mat-icon-inline\", ctx.inline)(\"mat-icon-no-color\", ctx.color !== \"primary\" && ctx.color !== \"accent\" && ctx.color !== \"warn\");\n            }\n        }, inputs: { color: \"color\", inline: \"inline\", svgIcon: \"svgIcon\", fontSet: \"fontSet\", fontIcon: \"fontIcon\" }, exportAs: [\"matIcon\"], features: [_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵInheritDefinitionFeature */ \"Db\"]], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatIcon_Template(rf, ctx) {\n            if (rf & 1) {\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵprojectionDef */ \"sc\"]();\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵprojection */ \"rc\"](0);\n            }\n        }, styles: [\".mat-icon{background-repeat:no-repeat;display:inline-block;fill:currentColor;height:24px;width:24px}.mat-icon.mat-icon-inline{font-size:inherit;height:inherit;line-height:inherit;width:inherit}[dir=rtl] .mat-icon-rtl-mirror{transform:scale(-1, 1)}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon{display:block}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-icon{margin:auto}\\n\"], encapsulation: 2, changeDetection: 0 });\n    return MatIcon;\n})();\nlet MatIconModule = /*@__PURE__*/ (() => {\n    class MatIconModule {\n    }\n    MatIconModule.ɵmod = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdefineNgModule */ \"Rb\"]({ type: MatIconModule });\n    MatIconModule.ɵinj = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdefineInjector */ \"Qb\"]({ factory: function MatIconModule_Factory(t) { return new (t || MatIconModule)(); }, imports: [[_angular_material_core__WEBPACK_IMPORTED_MODULE_1__[/* MatCommonModule */ \"j\"]], _angular_material_core__WEBPACK_IMPORTED_MODULE_1__[/* MatCommonModule */ \"j\"]] });\n    return MatIconModule;\n})();\n/*@__PURE__*/ (function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵsetNgModuleScope */ \"Lc\"](MatIconModule, { declarations: function () { return [MatIcon]; }, imports: function () { return [_angular_material_core__WEBPACK_IMPORTED_MODULE_1__[/* MatCommonModule */ \"j\"]]; }, exports: function () { return [MatIcon, _angular_material_core__WEBPACK_IMPORTED_MODULE_1__[/* MatCommonModule */ \"j\"]]; } }); })();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Generated bundle index. Do not edit.\n */\n\n//# sourceMappingURL=icon.js.map\n\n\n/***/ }),\n\n/***/ \"bTqV\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return MatAnchor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return MatButton; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return MatButtonModule; });\n/* harmony import */ var _angular_material_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"FKr1\");\n/* harmony import */ var _angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"R1ws\");\n/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"fXoL\");\n/* harmony import */ var _angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"u47x\");\n\n\n\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Default color palette for round buttons (mat-fab and mat-mini-fab) */\n\n\n\nconst _c0 = [\"mat-button\", \"\"];\nconst _c1 = [\"*\"];\nconst _c2 = \".mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{opacity:0}.mat-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay,.mat-stroked-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay{opacity:.04}@media(hover: none){.mat-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay,.mat-stroked-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay{opacity:0}}.mat-button,.mat-icon-button,.mat-stroked-button,.mat-flat-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-button.mat-button-disabled,.mat-icon-button.mat-button-disabled,.mat-stroked-button.mat-button-disabled,.mat-flat-button.mat-button-disabled{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button.mat-button-disabled{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-raised-button::-moz-focus-inner{border:0}._mat-animation-noopable.mat-raised-button{transition:none;animation:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button .mat-button-ripple.mat-ripple,.mat-stroked-button .mat-button-focus-overlay{top:-1px;left:-1px;right:-1px;bottom:-1px}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab::-moz-focus-inner{border:0}.mat-fab.mat-button-disabled{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-fab{transition:none;animation:none}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab.mat-button-disabled{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-mini-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-mini-fab{transition:none;animation:none}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button i,.mat-icon-button .mat-icon{line-height:24px}.mat-button-ripple.mat-ripple,.mat-button-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-button-ripple.mat-ripple:not(:empty){transform:translateZ(0)}.mat-button-focus-overlay{opacity:0;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1),background-color 200ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-button-focus-overlay{transition:none}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:inline-flex;justify-content:center;align-items:center;font-size:inherit;width:2.5em;height:2.5em}.cdk-high-contrast-active .mat-button,.cdk-high-contrast-active .mat-flat-button,.cdk-high-contrast-active .mat-raised-button,.cdk-high-contrast-active .mat-icon-button,.cdk-high-contrast-active .mat-fab,.cdk-high-contrast-active .mat-mini-fab{outline:solid 1px}.cdk-high-contrast-active .mat-button-base.cdk-keyboard-focused,.cdk-high-contrast-active .mat-button-base.cdk-program-focused{outline:solid 3px}\\n\";\nconst DEFAULT_ROUND_BUTTON_COLOR = 'accent';\n/**\n * List of classes to add to MatButton instances based on host attributes to\n * style as different variants.\n */\nconst BUTTON_HOST_ATTRIBUTES = [\n    'mat-button',\n    'mat-flat-button',\n    'mat-icon-button',\n    'mat-raised-button',\n    'mat-stroked-button',\n    'mat-mini-fab',\n    'mat-fab',\n];\n// Boilerplate for applying mixins to MatButton.\n/** @docs-private */\nclass MatButtonBase {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nconst _MatButtonMixinBase = /*@__PURE__*/ Object(_angular_material_core__WEBPACK_IMPORTED_MODULE_0__[/* mixinColor */ \"y\"])(/*@__PURE__*/ Object(_angular_material_core__WEBPACK_IMPORTED_MODULE_0__[/* mixinDisabled */ \"A\"])(/*@__PURE__*/ Object(_angular_material_core__WEBPACK_IMPORTED_MODULE_0__[/* mixinDisableRipple */ \"z\"])(MatButtonBase)));\nlet MatButton = /*@__PURE__*/ (() => {\n    class MatButton extends _MatButtonMixinBase {\n        constructor(elementRef, _focusMonitor, _animationMode) {\n            super(elementRef);\n            this._focusMonitor = _focusMonitor;\n            this._animationMode = _animationMode;\n            /** Whether the button is round. */\n            this.isRoundButton = this._hasHostAttributes('mat-fab', 'mat-mini-fab');\n            /** Whether the button is icon button. */\n            this.isIconButton = this._hasHostAttributes('mat-icon-button');\n            // For each of the variant selectors that is present in the button's host\n            // attributes, add the correct corresponding class.\n            for (const attr of BUTTON_HOST_ATTRIBUTES) {\n                if (this._hasHostAttributes(attr)) {\n                    this._getHostElement().classList.add(attr);\n                }\n            }\n            // Add a class that applies to all buttons. This makes it easier to target if somebody\n            // wants to target all Material buttons. We do it here rather than `host` to ensure that\n            // the class is applied to derived classes.\n            elementRef.nativeElement.classList.add('mat-button-base');\n            if (this.isRoundButton) {\n                this.color = DEFAULT_ROUND_BUTTON_COLOR;\n            }\n        }\n        ngAfterViewInit() {\n            this._focusMonitor.monitor(this._elementRef, true);\n        }\n        ngOnDestroy() {\n            this._focusMonitor.stopMonitoring(this._elementRef);\n        }\n        /** Focuses the button. */\n        focus(origin, options) {\n            if (origin) {\n                this._focusMonitor.focusVia(this._getHostElement(), origin, options);\n            }\n            else {\n                this._getHostElement().focus(options);\n            }\n        }\n        _getHostElement() {\n            return this._elementRef.nativeElement;\n        }\n        _isRippleDisabled() {\n            return this.disableRipple || this.disabled;\n        }\n        /** Gets whether the button has one of the given attributes. */\n        _hasHostAttributes(...attributes) {\n            return attributes.some(attribute => this._getHostElement().hasAttribute(attribute));\n        }\n    }\n    MatButton.ɵfac = function MatButton_Factory(t) { return new (t || MatButton)(_angular_core__WEBPACK_IMPORTED_MODULE_2__[/* ɵɵdirectiveInject */ \"Tb\"](_angular_core__WEBPACK_IMPORTED_MODULE_2__[/* ElementRef */ \"m\"]), _angular_core__WEBPACK_IMPORTED_MODULE_2__[/* ɵɵdirectiveInject */ \"Tb\"](_angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_3__[/* FocusMonitor */ \"h\"]), _angular_core__WEBPACK_IMPORTED_MODULE_2__[/* ɵɵdirectiveInject */ \"Tb\"](_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_1__[/* ANIMATION_MODULE_TYPE */ \"a\"], 8)); };\n    MatButton.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_2__[/* ɵɵdefineComponent */ \"Nb\"]({ type: MatButton, selectors: [[\"button\", \"mat-button\", \"\"], [\"button\", \"mat-raised-button\", \"\"], [\"button\", \"mat-icon-button\", \"\"], [\"button\", \"mat-fab\", \"\"], [\"button\", \"mat-mini-fab\", \"\"], [\"button\", \"mat-stroked-button\", \"\"], [\"button\", \"mat-flat-button\", \"\"]], viewQuery: function MatButton_Query(rf, ctx) {\n            if (rf & 1) {\n                _angular_core__WEBPACK_IMPORTED_MODULE_2__[/* ɵɵviewQuery */ \"Zc\"](_angular_material_core__WEBPACK_IMPORTED_MODULE_0__[/* MatRipple */ \"t\"], true);\n            }\n            if (rf & 2) {\n                let _t;\n                _angular_core__WEBPACK_IMPORTED_MODULE_2__[/* ɵɵqueryRefresh */ \"Fc\"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_2__[/* ɵɵloadQuery */ \"kc\"]()) && (ctx.ripple = _t.first);\n            }\n        }, hostAttrs: [1, \"mat-focus-indicator\"], hostVars: 5, hostBindings: function MatButton_HostBindings(rf, ctx) {\n            if (rf & 2) {\n                _angular_core__WEBPACK_IMPORTED_MODULE_2__[/* ɵɵattribute */ \"Hb\"](\"disabled\", ctx.disabled || null);\n                _angular_core__WEBPACK_IMPORTED_MODULE_2__[/* ɵɵclassProp */ \"Lb\"](\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\")(\"mat-button-disabled\", ctx.disabled);\n            }\n        }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", color: \"color\" }, exportAs: [\"matButton\"], features: [_angular_core__WEBPACK_IMPORTED_MODULE_2__[/* ɵɵInheritDefinitionFeature */ \"Db\"]], attrs: _c0, ngContentSelectors: _c1, decls: 4, vars: 5, consts: [[1, \"mat-button-wrapper\"], [\"matRipple\", \"\", 1, \"mat-button-ripple\", 3, \"matRippleDisabled\", \"matRippleCentered\", \"matRippleTrigger\"], [1, \"mat-button-focus-overlay\"]], template: function MatButton_Template(rf, ctx) {\n            if (rf & 1) {\n                _angular_core__WEBPACK_IMPORTED_MODULE_2__[/* ɵɵprojectionDef */ \"sc\"]();\n                _angular_core__WEBPACK_IMPORTED_MODULE_2__[/* ɵɵelementStart */ \"Zb\"](0, \"span\", 0);\n                _angular_core__WEBPACK_IMPORTED_MODULE_2__[/* ɵɵprojection */ \"rc\"](1);\n                _angular_core__WEBPACK_IMPORTED_MODULE_2__[/* ɵɵelementEnd */ \"Yb\"]();\n                _angular_core__WEBPACK_IMPORTED_MODULE_2__[/* ɵɵelement */ \"Ub\"](2, \"span\", 1);\n                _angular_core__WEBPACK_IMPORTED_MODULE_2__[/* ɵɵelement */ \"Ub\"](3, \"span\", 2);\n            }\n            if (rf & 2) {\n                _angular_core__WEBPACK_IMPORTED_MODULE_2__[/* ɵɵadvance */ \"Gb\"](2);\n                _angular_core__WEBPACK_IMPORTED_MODULE_2__[/* ɵɵclassProp */ \"Lb\"](\"mat-button-ripple-round\", ctx.isRoundButton || ctx.isIconButton);\n                _angular_core__WEBPACK_IMPORTED_MODULE_2__[/* ɵɵproperty */ \"tc\"](\"matRippleDisabled\", ctx._isRippleDisabled())(\"matRippleCentered\", ctx.isIconButton)(\"matRippleTrigger\", ctx._getHostElement());\n            }\n        }, directives: [_angular_material_core__WEBPACK_IMPORTED_MODULE_0__[/* MatRipple */ \"t\"]], styles: [_c2], encapsulation: 2, changeDetection: 0 });\n    return MatButton;\n})();\nlet MatAnchor = /*@__PURE__*/ (() => {\n    class MatAnchor extends MatButton {\n        constructor(focusMonitor, elementRef, animationMode) {\n            super(elementRef, focusMonitor, animationMode);\n        }\n        _haltDisabledEvents(event) {\n            // A disabled button shouldn't apply any actions\n            if (this.disabled) {\n                event.preventDefault();\n                event.stopImmediatePropagation();\n            }\n        }\n    }\n    MatAnchor.ɵfac = function MatAnchor_Factory(t) { return new (t || MatAnchor)(_angular_core__WEBPACK_IMPORTED_MODULE_2__[/* ɵɵdirectiveInject */ \"Tb\"](_angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_3__[/* FocusMonitor */ \"h\"]), _angular_core__WEBPACK_IMPORTED_MODULE_2__[/* ɵɵdirectiveInject */ \"Tb\"](_angular_core__WEBPACK_IMPORTED_MODULE_2__[/* ElementRef */ \"m\"]), _angular_core__WEBPACK_IMPORTED_MODULE_2__[/* ɵɵdirectiveInject */ \"Tb\"](_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_1__[/* ANIMATION_MODULE_TYPE */ \"a\"], 8)); };\n    MatAnchor.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_2__[/* ɵɵdefineComponent */ \"Nb\"]({ type: MatAnchor, selectors: [[\"a\", \"mat-button\", \"\"], [\"a\", \"mat-raised-button\", \"\"], [\"a\", \"mat-icon-button\", \"\"], [\"a\", \"mat-fab\", \"\"], [\"a\", \"mat-mini-fab\", \"\"], [\"a\", \"mat-stroked-button\", \"\"], [\"a\", \"mat-flat-button\", \"\"]], hostAttrs: [1, \"mat-focus-indicator\"], hostVars: 7, hostBindings: function MatAnchor_HostBindings(rf, ctx) {\n            if (rf & 1) {\n                _angular_core__WEBPACK_IMPORTED_MODULE_2__[/* ɵɵlistener */ \"jc\"](\"click\", function MatAnchor_click_HostBindingHandler($event) { return ctx._haltDisabledEvents($event); });\n            }\n            if (rf & 2) {\n                _angular_core__WEBPACK_IMPORTED_MODULE_2__[/* ɵɵattribute */ \"Hb\"](\"tabindex\", ctx.disabled ? -1 : ctx.tabIndex || 0)(\"disabled\", ctx.disabled || null)(\"aria-disabled\", ctx.disabled.toString());\n                _angular_core__WEBPACK_IMPORTED_MODULE_2__[/* ɵɵclassProp */ \"Lb\"](\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\")(\"mat-button-disabled\", ctx.disabled);\n            }\n        }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", color: \"color\", tabIndex: \"tabIndex\" }, exportAs: [\"matButton\", \"matAnchor\"], features: [_angular_core__WEBPACK_IMPORTED_MODULE_2__[/* ɵɵInheritDefinitionFeature */ \"Db\"]], attrs: _c0, ngContentSelectors: _c1, decls: 4, vars: 5, consts: [[1, \"mat-button-wrapper\"], [\"matRipple\", \"\", 1, \"mat-button-ripple\", 3, \"matRippleDisabled\", \"matRippleCentered\", \"matRippleTrigger\"], [1, \"mat-button-focus-overlay\"]], template: function MatAnchor_Template(rf, ctx) {\n            if (rf & 1) {\n                _angular_core__WEBPACK_IMPORTED_MODULE_2__[/* ɵɵprojectionDef */ \"sc\"]();\n                _angular_core__WEBPACK_IMPORTED_MODULE_2__[/* ɵɵelementStart */ \"Zb\"](0, \"span\", 0);\n                _angular_core__WEBPACK_IMPORTED_MODULE_2__[/* ɵɵprojection */ \"rc\"](1);\n                _angular_core__WEBPACK_IMPORTED_MODULE_2__[/* ɵɵelementEnd */ \"Yb\"]();\n                _angular_core__WEBPACK_IMPORTED_MODULE_2__[/* ɵɵelement */ \"Ub\"](2, \"span\", 1);\n                _angular_core__WEBPACK_IMPORTED_MODULE_2__[/* ɵɵelement */ \"Ub\"](3, \"span\", 2);\n            }\n            if (rf & 2) {\n                _angular_core__WEBPACK_IMPORTED_MODULE_2__[/* ɵɵadvance */ \"Gb\"](2);\n                _angular_core__WEBPACK_IMPORTED_MODULE_2__[/* ɵɵclassProp */ \"Lb\"](\"mat-button-ripple-round\", ctx.isRoundButton || ctx.isIconButton);\n                _angular_core__WEBPACK_IMPORTED_MODULE_2__[/* ɵɵproperty */ \"tc\"](\"matRippleDisabled\", ctx._isRippleDisabled())(\"matRippleCentered\", ctx.isIconButton)(\"matRippleTrigger\", ctx._getHostElement());\n            }\n        }, directives: [_angular_material_core__WEBPACK_IMPORTED_MODULE_0__[/* MatRipple */ \"t\"]], styles: [_c2], encapsulation: 2, changeDetection: 0 });\n    return MatAnchor;\n})();\nlet MatButtonModule = /*@__PURE__*/ (() => {\n    class MatButtonModule {\n    }\n    MatButtonModule.ɵmod = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_2__[/* ɵɵdefineNgModule */ \"Rb\"]({ type: MatButtonModule });\n    MatButtonModule.ɵinj = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_2__[/* ɵɵdefineInjector */ \"Qb\"]({ factory: function MatButtonModule_Factory(t) { return new (t || MatButtonModule)(); }, imports: [[\n                _angular_material_core__WEBPACK_IMPORTED_MODULE_0__[/* MatRippleModule */ \"u\"],\n                _angular_material_core__WEBPACK_IMPORTED_MODULE_0__[/* MatCommonModule */ \"j\"],\n            ], _angular_material_core__WEBPACK_IMPORTED_MODULE_0__[/* MatCommonModule */ \"j\"]] });\n    return MatButtonModule;\n})();\n/*@__PURE__*/ (function () {\n    (typeof ngJitMode === \"undefined\" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_2__[/* ɵɵsetNgModuleScope */ \"Lc\"](MatButtonModule, { declarations: function () { return [MatButton, MatAnchor]; }, imports: function () {\n            return [_angular_material_core__WEBPACK_IMPORTED_MODULE_0__[/* MatRippleModule */ \"u\"],\n                _angular_material_core__WEBPACK_IMPORTED_MODULE_0__[/* MatCommonModule */ \"j\"]];\n        }, exports: function () { return [MatButton, MatAnchor, _angular_material_core__WEBPACK_IMPORTED_MODULE_0__[/* MatCommonModule */ \"j\"]]; } });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Generated bundle index. Do not edit.\n */\n\n//# sourceMappingURL=button.js.map\n\n\n/***/ }),\n\n/***/ \"xHqg\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, \"a\", function() { return /* binding */ stepper_MatHorizontalStepper; });\n__webpack_require__.d(__webpack_exports__, \"b\", function() { return /* binding */ stepper_MatStep; });\n__webpack_require__.d(__webpack_exports__, \"c\", function() { return /* binding */ stepper_MatStepLabel; });\n__webpack_require__.d(__webpack_exports__, \"d\", function() { return /* binding */ stepper_MatStepperModule; });\n__webpack_require__.d(__webpack_exports__, \"e\", function() { return /* binding */ stepper_MatStepperNext; });\n__webpack_require__.d(__webpack_exports__, \"f\", function() { return /* binding */ stepper_MatStepperPrevious; });\n__webpack_require__.d(__webpack_exports__, \"g\", function() { return /* binding */ stepper_MatVerticalStepper; });\n\n// UNUSED EXPORTS: MAT_STEPPER_INTL_PROVIDER, MAT_STEPPER_INTL_PROVIDER_FACTORY, MatStepHeader, MatStepper, MatStepperIcon, MatStepperIntl, matStepperAnimations\n\n// EXTERNAL MODULE: ./node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/portal.js\nvar portal = __webpack_require__(\"+rOU\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/a11y.js\nvar a11y = __webpack_require__(\"u47x\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/bidi.js\nvar bidi = __webpack_require__(\"cH1L\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/cdk/fesm2015/coercion.js\nvar coercion = __webpack_require__(\"8LU1\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/keycodes.js\nvar keycodes = __webpack_require__(\"FtGj\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js\nvar common = __webpack_require__(\"ofXK\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js\nvar core = __webpack_require__(\"fXoL\");\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/Subject.js\nvar Subject = __webpack_require__(\"XNiG\");\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/observable/of.js\nvar of = __webpack_require__(\"LRne\");\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/operators/startWith.js\nvar startWith = __webpack_require__(\"JX91\");\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/operators/takeUntil.js\nvar takeUntil = __webpack_require__(\"1G5W\");\n\n// CONCATENATED MODULE: ./node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/stepper.js\n\n\n\n\n\n\n\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nfunction CdkStep_ng_template_0_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"rc\" /* ɵɵprojection */](0);\n    }\n}\nconst _c0 = [\"*\"];\nlet stepper_CdkStepHeader = /*@__PURE__*/ (() => {\n    class CdkStepHeader {\n        constructor(_elementRef) {\n            this._elementRef = _elementRef;\n        }\n        /** Focuses the step header. */\n        focus() {\n            this._elementRef.nativeElement.focus();\n        }\n    }\n    CdkStepHeader.ɵfac = function CdkStepHeader_Factory(t) { return new (t || CdkStepHeader)(core[\"Tb\" /* ɵɵdirectiveInject */](core[\"m\" /* ElementRef */])); };\n    CdkStepHeader.ɵdir = /*@__PURE__*/ core[\"Ob\" /* ɵɵdefineDirective */]({ type: CdkStepHeader, selectors: [[\"\", \"cdkStepHeader\", \"\"]], hostAttrs: [\"role\", \"tab\"] });\n    return CdkStepHeader;\n})();\nlet stepper_CdkStepLabel = /*@__PURE__*/ (() => {\n    class CdkStepLabel {\n        constructor(/** @docs-private */ template) {\n            this.template = template;\n        }\n    }\n    CdkStepLabel.ɵfac = function CdkStepLabel_Factory(t) { return new (t || CdkStepLabel)(core[\"Tb\" /* ɵɵdirectiveInject */](core[\"R\" /* TemplateRef */])); };\n    CdkStepLabel.ɵdir = /*@__PURE__*/ core[\"Ob\" /* ɵɵdefineDirective */]({ type: CdkStepLabel, selectors: [[\"\", \"cdkStepLabel\", \"\"]] });\n    return CdkStepLabel;\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Used to generate unique ID for each stepper component. */\nlet nextId = 0;\n/** Change event emitted on selection changes. */\nclass StepperSelectionEvent {\n}\n/** Enum to represent the different states of the steps. */\nconst STEP_STATE = {\n    NUMBER: 'number',\n    EDIT: 'edit',\n    DONE: 'done',\n    ERROR: 'error'\n};\n/** InjectionToken that can be used to specify the global stepper options. */\nconst STEPPER_GLOBAL_OPTIONS = /*@__PURE__*/ new core[\"u\" /* InjectionToken */]('STEPPER_GLOBAL_OPTIONS');\n/**\n * InjectionToken that can be used to specify the global stepper options.\n * @deprecated Use `STEPPER_GLOBAL_OPTIONS` instead.\n * @breaking-change 8.0.0.\n */\nconst MAT_STEPPER_GLOBAL_OPTIONS = STEPPER_GLOBAL_OPTIONS;\nlet stepper_CdkStep = /*@__PURE__*/ (() => {\n    class CdkStep {\n        /** @breaking-change 8.0.0 remove the `?` after `stepperOptions` */\n        constructor(_stepper, stepperOptions) {\n            this._stepper = _stepper;\n            /** Whether user has seen the expanded step content or not. */\n            this.interacted = false;\n            this._editable = true;\n            this._optional = false;\n            this._completedOverride = null;\n            this._customError = null;\n            this._stepperOptions = stepperOptions ? stepperOptions : {};\n            this._displayDefaultIndicatorType = this._stepperOptions.displayDefaultIndicatorType !== false;\n            this._showError = !!this._stepperOptions.showError;\n        }\n        /** Whether the user can return to this step once it has been marked as completed. */\n        get editable() {\n            return this._editable;\n        }\n        set editable(value) {\n            this._editable = Object(coercion[\"c\" /* coerceBooleanProperty */])(value);\n        }\n        /** Whether the completion of step is optional. */\n        get optional() {\n            return this._optional;\n        }\n        set optional(value) {\n            this._optional = Object(coercion[\"c\" /* coerceBooleanProperty */])(value);\n        }\n        /** Whether step is marked as completed. */\n        get completed() {\n            return this._completedOverride == null ? this._getDefaultCompleted() : this._completedOverride;\n        }\n        set completed(value) {\n            this._completedOverride = Object(coercion[\"c\" /* coerceBooleanProperty */])(value);\n        }\n        _getDefaultCompleted() {\n            return this.stepControl ? this.stepControl.valid && this.interacted : this.interacted;\n        }\n        /** Whether step has an error. */\n        get hasError() {\n            return this._customError == null ? this._getDefaultError() : this._customError;\n        }\n        set hasError(value) {\n            this._customError = Object(coercion[\"c\" /* coerceBooleanProperty */])(value);\n        }\n        _getDefaultError() {\n            return this.stepControl && this.stepControl.invalid && this.interacted;\n        }\n        /** Selects this step component. */\n        select() {\n            this._stepper.selected = this;\n        }\n        /** Resets the step to its initial state. Note that this includes resetting form data. */\n        reset() {\n            this.interacted = false;\n            if (this._completedOverride != null) {\n                this._completedOverride = false;\n            }\n            if (this._customError != null) {\n                this._customError = false;\n            }\n            if (this.stepControl) {\n                this.stepControl.reset();\n            }\n        }\n        ngOnChanges() {\n            // Since basically all inputs of the MatStep get proxied through the view down to the\n            // underlying MatStepHeader, we have to make sure that change detection runs correctly.\n            this._stepper._stateChanged();\n        }\n    }\n    CdkStep.ɵfac = function CdkStep_Factory(t) { return new (t || CdkStep)(core[\"Tb\" /* ɵɵdirectiveInject */](Object(core[\"Z\" /* forwardRef */])(() => stepper_CdkStepper)), core[\"Tb\" /* ɵɵdirectiveInject */](STEPPER_GLOBAL_OPTIONS, 8)); };\n    CdkStep.ɵcmp = /*@__PURE__*/ core[\"Nb\" /* ɵɵdefineComponent */]({ type: CdkStep, selectors: [[\"cdk-step\"]], contentQueries: function CdkStep_ContentQueries(rf, ctx, dirIndex) {\n            if (rf & 1) {\n                core[\"Mb\" /* ɵɵcontentQuery */](dirIndex, stepper_CdkStepLabel, true);\n            }\n            if (rf & 2) {\n                let _t;\n                core[\"Fc\" /* ɵɵqueryRefresh */](_t = core[\"kc\" /* ɵɵloadQuery */]()) && (ctx.stepLabel = _t.first);\n            }\n        }, viewQuery: function CdkStep_Query(rf, ctx) {\n            if (rf & 1) {\n                core[\"Nc\" /* ɵɵstaticViewQuery */](core[\"R\" /* TemplateRef */], true);\n            }\n            if (rf & 2) {\n                let _t;\n                core[\"Fc\" /* ɵɵqueryRefresh */](_t = core[\"kc\" /* ɵɵloadQuery */]()) && (ctx.content = _t.first);\n            }\n        }, inputs: { editable: \"editable\", optional: \"optional\", completed: \"completed\", hasError: \"hasError\", stepControl: \"stepControl\", label: \"label\", errorMessage: \"errorMessage\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], state: \"state\" }, exportAs: [\"cdkStep\"], features: [core[\"Eb\" /* ɵɵNgOnChangesFeature */]], ngContentSelectors: _c0, decls: 1, vars: 0, template: function CdkStep_Template(rf, ctx) {\n            if (rf & 1) {\n                core[\"sc\" /* ɵɵprojectionDef */]();\n                core[\"Sc\" /* ɵɵtemplate */](0, CdkStep_ng_template_0_Template, 1, 0, \"ng-template\");\n            }\n        }, encapsulation: 2, changeDetection: 0 });\n    return CdkStep;\n})();\nlet stepper_CdkStepper = /*@__PURE__*/ (() => {\n    class CdkStepper {\n        constructor(_dir, _changeDetectorRef, \n        // @breaking-change 8.0.0 `_elementRef` and `_document` parameters to become required.\n        _elementRef, _document) {\n            this._dir = _dir;\n            this._changeDetectorRef = _changeDetectorRef;\n            this._elementRef = _elementRef;\n            /** Emits when the component is destroyed. */\n            this._destroyed = new Subject[\"a\" /* Subject */]();\n            /** Steps that belong to the current stepper, excluding ones from nested steppers. */\n            this.steps = new core[\"J\" /* QueryList */]();\n            this._linear = false;\n            this._selectedIndex = 0;\n            /** Event emitted when the selected step has changed. */\n            this.selectionChange = new core[\"p\" /* EventEmitter */]();\n            this._orientation = 'horizontal';\n            this._groupId = nextId++;\n            this._document = _document;\n        }\n        /** Whether the validity of previous steps should be checked or not. */\n        get linear() {\n            return this._linear;\n        }\n        set linear(value) {\n            this._linear = Object(coercion[\"c\" /* coerceBooleanProperty */])(value);\n        }\n        /** The index of the selected step. */\n        get selectedIndex() {\n            return this._selectedIndex;\n        }\n        set selectedIndex(index) {\n            const newIndex = Object(coercion[\"f\" /* coerceNumberProperty */])(index);\n            if (this.steps && this._steps) {\n                // Ensure that the index can't be out of bounds.\n                if (!this._isValidIndex(index) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                    throw Error('cdkStepper: Cannot assign out-of-bounds value to `selectedIndex`.');\n                }\n                const selectedStep = this.selected;\n                if (selectedStep) {\n                    // TODO: this should really be called something like `visited` instead. Just because\n                    // the user has seen the step doesn't guarantee that they've interacted with it.\n                    selectedStep.interacted = true;\n                }\n                if (this._selectedIndex !== newIndex && !this._anyControlsInvalidOrPending(newIndex) &&\n                    (newIndex >= this._selectedIndex || this.steps.toArray()[newIndex].editable)) {\n                    this._updateSelectedItemIndex(index);\n                }\n            }\n            else {\n                this._selectedIndex = newIndex;\n            }\n        }\n        /** The step that is selected. */\n        get selected() {\n            // @breaking-change 8.0.0 Change return type to `CdkStep | undefined`.\n            return this.steps ? this.steps.toArray()[this.selectedIndex] : undefined;\n        }\n        set selected(step) {\n            this.selectedIndex = this.steps ? this.steps.toArray().indexOf(step) : -1;\n        }\n        ngAfterContentInit() {\n            this._steps.changes\n                .pipe(Object(startWith[\"a\" /* startWith */])(this._steps), Object(takeUntil[\"a\" /* takeUntil */])(this._destroyed))\n                .subscribe((steps) => {\n                this.steps.reset(steps.filter(step => step._stepper === this));\n                this.steps.notifyOnChanges();\n            });\n        }\n        ngAfterViewInit() {\n            // Note that while the step headers are content children by default, any components that\n            // extend this one might have them as view children. We initialize the keyboard handling in\n            // AfterViewInit so we're guaranteed for both view and content children to be defined.\n            this._keyManager = new a11y[\"g\" /* FocusKeyManager */](this._stepHeader)\n                .withWrap()\n                .withHomeAndEnd()\n                .withVerticalOrientation(this._orientation === 'vertical');\n            (this._dir ? this._dir.change : Object(of[\"a\" /* of */])())\n                .pipe(Object(startWith[\"a\" /* startWith */])(this._layoutDirection()), Object(takeUntil[\"a\" /* takeUntil */])(this._destroyed))\n                .subscribe(direction => this._keyManager.withHorizontalOrientation(direction));\n            this._keyManager.updateActiveItem(this._selectedIndex);\n            // No need to `takeUntil` here, because we're the ones destroying `steps`.\n            this.steps.changes.subscribe(() => {\n                if (!this.selected) {\n                    this._selectedIndex = Math.max(this._selectedIndex - 1, 0);\n                }\n            });\n            // The logic which asserts that the selected index is within bounds doesn't run before the\n            // steps are initialized, because we don't how many steps there are yet so we may have an\n            // invalid index on init. If that's the case, auto-correct to the default so we don't throw.\n            if (!this._isValidIndex(this._selectedIndex)) {\n                this._selectedIndex = 0;\n            }\n        }\n        ngOnDestroy() {\n            this.steps.destroy();\n            this._destroyed.next();\n            this._destroyed.complete();\n        }\n        /** Selects and focuses the next step in list. */\n        next() {\n            this.selectedIndex = Math.min(this._selectedIndex + 1, this.steps.length - 1);\n        }\n        /** Selects and focuses the previous step in list. */\n        previous() {\n            this.selectedIndex = Math.max(this._selectedIndex - 1, 0);\n        }\n        /** Resets the stepper to its initial state. Note that this includes clearing form data. */\n        reset() {\n            this._updateSelectedItemIndex(0);\n            this.steps.forEach(step => step.reset());\n            this._stateChanged();\n        }\n        /** Returns a unique id for each step label element. */\n        _getStepLabelId(i) {\n            return `cdk-step-label-${this._groupId}-${i}`;\n        }\n        /** Returns unique id for each step content element. */\n        _getStepContentId(i) {\n            return `cdk-step-content-${this._groupId}-${i}`;\n        }\n        /** Marks the component to be change detected. */\n        _stateChanged() {\n            this._changeDetectorRef.markForCheck();\n        }\n        /** Returns position state of the step with the given index. */\n        _getAnimationDirection(index) {\n            const position = index - this._selectedIndex;\n            if (position < 0) {\n                return this._layoutDirection() === 'rtl' ? 'next' : 'previous';\n            }\n            else if (position > 0) {\n                return this._layoutDirection() === 'rtl' ? 'previous' : 'next';\n            }\n            return 'current';\n        }\n        /** Returns the type of icon to be displayed. */\n        _getIndicatorType(index, state = STEP_STATE.NUMBER) {\n            const step = this.steps.toArray()[index];\n            const isCurrentStep = this._isCurrentStep(index);\n            return step._displayDefaultIndicatorType ? this._getDefaultIndicatorLogic(step, isCurrentStep) :\n                this._getGuidelineLogic(step, isCurrentStep, state);\n        }\n        _getDefaultIndicatorLogic(step, isCurrentStep) {\n            if (step._showError && step.hasError && !isCurrentStep) {\n                return STEP_STATE.ERROR;\n            }\n            else if (!step.completed || isCurrentStep) {\n                return STEP_STATE.NUMBER;\n            }\n            else {\n                return step.editable ? STEP_STATE.EDIT : STEP_STATE.DONE;\n            }\n        }\n        _getGuidelineLogic(step, isCurrentStep, state = STEP_STATE.NUMBER) {\n            if (step._showError && step.hasError && !isCurrentStep) {\n                return STEP_STATE.ERROR;\n            }\n            else if (step.completed && !isCurrentStep) {\n                return STEP_STATE.DONE;\n            }\n            else if (step.completed && isCurrentStep) {\n                return state;\n            }\n            else if (step.editable && isCurrentStep) {\n                return STEP_STATE.EDIT;\n            }\n            else {\n                return state;\n            }\n        }\n        _isCurrentStep(index) {\n            return this._selectedIndex === index;\n        }\n        /** Returns the index of the currently-focused step header. */\n        _getFocusIndex() {\n            return this._keyManager ? this._keyManager.activeItemIndex : this._selectedIndex;\n        }\n        _updateSelectedItemIndex(newIndex) {\n            const stepsArray = this.steps.toArray();\n            this.selectionChange.emit({\n                selectedIndex: newIndex,\n                previouslySelectedIndex: this._selectedIndex,\n                selectedStep: stepsArray[newIndex],\n                previouslySelectedStep: stepsArray[this._selectedIndex],\n            });\n            // If focus is inside the stepper, move it to the next header, otherwise it may become\n            // lost when the active step content is hidden. We can't be more granular with the check\n            // (e.g. checking whether focus is inside the active step), because we don't have a\n            // reference to the elements that are rendering out the content.\n            this._containsFocus() ? this._keyManager.setActiveItem(newIndex) :\n                this._keyManager.updateActiveItem(newIndex);\n            this._selectedIndex = newIndex;\n            this._stateChanged();\n        }\n        _onKeydown(event) {\n            const hasModifier = Object(keycodes[\"t\" /* hasModifierKey */])(event);\n            const keyCode = event.keyCode;\n            const manager = this._keyManager;\n            if (manager.activeItemIndex != null && !hasModifier &&\n                (keyCode === keycodes[\"o\" /* SPACE */] || keyCode === keycodes[\"g\" /* ENTER */])) {\n                this.selectedIndex = manager.activeItemIndex;\n                event.preventDefault();\n            }\n            else {\n                manager.onKeydown(event);\n            }\n        }\n        _anyControlsInvalidOrPending(index) {\n            if (this._linear && index >= 0) {\n                return this.steps.toArray().slice(0, index).some(step => {\n                    const control = step.stepControl;\n                    const isIncomplete = control ? (control.invalid || control.pending || !step.interacted) : !step.completed;\n                    return isIncomplete && !step.optional && !step._completedOverride;\n                });\n            }\n            return false;\n        }\n        _layoutDirection() {\n            return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n        }\n        /** Checks whether the stepper contains the focused element. */\n        _containsFocus() {\n            if (!this._document || !this._elementRef) {\n                return false;\n            }\n            const stepperElement = this._elementRef.nativeElement;\n            const focusedElement = this._document.activeElement;\n            return stepperElement === focusedElement || stepperElement.contains(focusedElement);\n        }\n        /** Checks whether the passed-in index is a valid step index. */\n        _isValidIndex(index) {\n            return index > -1 && (!this.steps || index < this.steps.length);\n        }\n    }\n    CdkStepper.ɵfac = function CdkStepper_Factory(t) { return new (t || CdkStepper)(core[\"Tb\" /* ɵɵdirectiveInject */](bidi[\"b\" /* Directionality */], 8), core[\"Tb\" /* ɵɵdirectiveInject */](core[\"i\" /* ChangeDetectorRef */]), core[\"Tb\" /* ɵɵdirectiveInject */](core[\"m\" /* ElementRef */]), core[\"Tb\" /* ɵɵdirectiveInject */](common[\"d\" /* DOCUMENT */])); };\n    CdkStepper.ɵdir = /*@__PURE__*/ core[\"Ob\" /* ɵɵdefineDirective */]({ type: CdkStepper, selectors: [[\"\", \"cdkStepper\", \"\"]], contentQueries: function CdkStepper_ContentQueries(rf, ctx, dirIndex) {\n            if (rf & 1) {\n                core[\"Mb\" /* ɵɵcontentQuery */](dirIndex, stepper_CdkStep, true);\n                core[\"Mb\" /* ɵɵcontentQuery */](dirIndex, stepper_CdkStepHeader, true);\n            }\n            if (rf & 2) {\n                let _t;\n                core[\"Fc\" /* ɵɵqueryRefresh */](_t = core[\"kc\" /* ɵɵloadQuery */]()) && (ctx._steps = _t);\n                core[\"Fc\" /* ɵɵqueryRefresh */](_t = core[\"kc\" /* ɵɵloadQuery */]()) && (ctx._stepHeader = _t);\n            }\n        }, inputs: { linear: \"linear\", selectedIndex: \"selectedIndex\", selected: \"selected\" }, outputs: { selectionChange: \"selectionChange\" }, exportAs: [\"cdkStepper\"] });\n    return CdkStepper;\n})();\nlet stepper_CdkStepperNext = /*@__PURE__*/ (() => {\n    class CdkStepperNext {\n        constructor(_stepper) {\n            this._stepper = _stepper;\n            /** Type of the next button. Defaults to \"submit\" if not specified. */\n            this.type = 'submit';\n        }\n        // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n        // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n        // ViewEngine they're overwritten.\n        // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n        // tslint:disable-next-line:no-host-decorator-in-concrete\n        _handleClick() {\n            this._stepper.next();\n        }\n    }\n    CdkStepperNext.ɵfac = function CdkStepperNext_Factory(t) { return new (t || CdkStepperNext)(core[\"Tb\" /* ɵɵdirectiveInject */](stepper_CdkStepper)); };\n    CdkStepperNext.ɵdir = /*@__PURE__*/ core[\"Ob\" /* ɵɵdefineDirective */]({ type: CdkStepperNext, selectors: [[\"button\", \"cdkStepperNext\", \"\"]], hostVars: 1, hostBindings: function CdkStepperNext_HostBindings(rf, ctx) {\n            if (rf & 1) {\n                core[\"jc\" /* ɵɵlistener */](\"click\", function CdkStepperNext_click_HostBindingHandler() { return ctx._handleClick(); });\n            }\n            if (rf & 2) {\n                core[\"cc\" /* ɵɵhostProperty */](\"type\", ctx.type);\n            }\n        }, inputs: { type: \"type\" } });\n    return CdkStepperNext;\n})();\nlet stepper_CdkStepperPrevious = /*@__PURE__*/ (() => {\n    class CdkStepperPrevious {\n        constructor(_stepper) {\n            this._stepper = _stepper;\n            /** Type of the previous button. Defaults to \"button\" if not specified. */\n            this.type = 'button';\n        }\n        // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n        // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n        // ViewEngine they're overwritten.\n        // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n        // tslint:disable-next-line:no-host-decorator-in-concrete\n        _handleClick() {\n            this._stepper.previous();\n        }\n    }\n    CdkStepperPrevious.ɵfac = function CdkStepperPrevious_Factory(t) { return new (t || CdkStepperPrevious)(core[\"Tb\" /* ɵɵdirectiveInject */](stepper_CdkStepper)); };\n    CdkStepperPrevious.ɵdir = /*@__PURE__*/ core[\"Ob\" /* ɵɵdefineDirective */]({ type: CdkStepperPrevious, selectors: [[\"button\", \"cdkStepperPrevious\", \"\"]], hostVars: 1, hostBindings: function CdkStepperPrevious_HostBindings(rf, ctx) {\n            if (rf & 1) {\n                core[\"jc\" /* ɵɵlistener */](\"click\", function CdkStepperPrevious_click_HostBindingHandler() { return ctx._handleClick(); });\n            }\n            if (rf & 2) {\n                core[\"cc\" /* ɵɵhostProperty */](\"type\", ctx.type);\n            }\n        }, inputs: { type: \"type\" } });\n    return CdkStepperPrevious;\n})();\nlet stepper_CdkStepperModule = /*@__PURE__*/ (() => {\n    class CdkStepperModule {\n    }\n    CdkStepperModule.ɵmod = /*@__PURE__*/ core[\"Rb\" /* ɵɵdefineNgModule */]({ type: CdkStepperModule });\n    CdkStepperModule.ɵinj = /*@__PURE__*/ core[\"Qb\" /* ɵɵdefineInjector */]({ factory: function CdkStepperModule_Factory(t) { return new (t || CdkStepperModule)(); }, imports: [[bidi[\"a\" /* BidiModule */]]] });\n    return CdkStepperModule;\n})();\n/*@__PURE__*/ (function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && core[\"Lc\" /* ɵɵsetNgModuleScope */](stepper_CdkStepperModule, { declarations: function () { return [stepper_CdkStep, stepper_CdkStepper, stepper_CdkStepHeader, stepper_CdkStepLabel, stepper_CdkStepperNext, stepper_CdkStepperPrevious]; }, imports: function () { return [bidi[\"a\" /* BidiModule */]]; }, exports: function () { return [stepper_CdkStep, stepper_CdkStepper, stepper_CdkStepHeader, stepper_CdkStepLabel, stepper_CdkStepperNext, stepper_CdkStepperPrevious]; } }); })();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Generated bundle index. Do not edit.\n */\n\n//# sourceMappingURL=stepper.js.map\n\n// EXTERNAL MODULE: ./node_modules/@angular/material/__ivy_ngcc__/fesm2015/button.js\nvar fesm2015_button = __webpack_require__(\"bTqV\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/material/__ivy_ngcc__/fesm2015/core.js + 1 modules\nvar fesm2015_core = __webpack_require__(\"FKr1\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/material/__ivy_ngcc__/fesm2015/icon.js\nvar icon = __webpack_require__(\"NFeN\");\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/operators/distinctUntilChanged.js\nvar distinctUntilChanged = __webpack_require__(\"/uUt\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/animations/__ivy_ngcc__/fesm2015/animations.js\nvar animations = __webpack_require__(\"R0Ic\");\n\n// CONCATENATED MODULE: ./node_modules/@angular/material/__ivy_ngcc__/fesm2015/stepper.js\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\n\n\n\n\nfunction MatStepHeader_ng_container_3_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Vb\" /* ɵɵelementContainer */](0, 8);\n    }\n    if (rf & 2) {\n        const ctx_r0 = core[\"nc\" /* ɵɵnextContext */]();\n        core[\"tc\" /* ɵɵproperty */](\"ngTemplateOutlet\", ctx_r0.iconOverrides[ctx_r0.state])(\"ngTemplateOutletContext\", ctx_r0._getIconContext());\n    }\n}\nfunction MatStepHeader_ng_container_4_span_1_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Zb\" /* ɵɵelementStart */](0, \"span\");\n        core[\"Uc\" /* ɵɵtext */](1);\n        core[\"Yb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const ctx_r6 = core[\"nc\" /* ɵɵnextContext */](2);\n        core[\"Gb\" /* ɵɵadvance */](1);\n        core[\"Vc\" /* ɵɵtextInterpolate */](ctx_r6._getDefaultTextForState(ctx_r6.state));\n    }\n}\nfunction MatStepHeader_ng_container_4_mat_icon_2_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Zb\" /* ɵɵelementStart */](0, \"mat-icon\");\n        core[\"Uc\" /* ɵɵtext */](1);\n        core[\"Yb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const ctx_r7 = core[\"nc\" /* ɵɵnextContext */](2);\n        core[\"Gb\" /* ɵɵadvance */](1);\n        core[\"Vc\" /* ɵɵtextInterpolate */](ctx_r7._getDefaultTextForState(ctx_r7.state));\n    }\n}\nfunction MatStepHeader_ng_container_4_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Xb\" /* ɵɵelementContainerStart */](0, 9);\n        core[\"Sc\" /* ɵɵtemplate */](1, MatStepHeader_ng_container_4_span_1_Template, 2, 1, \"span\", 10);\n        core[\"Sc\" /* ɵɵtemplate */](2, MatStepHeader_ng_container_4_mat_icon_2_Template, 2, 1, \"mat-icon\", 11);\n        core[\"Wb\" /* ɵɵelementContainerEnd */]();\n    }\n    if (rf & 2) {\n        const ctx_r1 = core[\"nc\" /* ɵɵnextContext */]();\n        core[\"tc\" /* ɵɵproperty */](\"ngSwitch\", ctx_r1.state);\n        core[\"Gb\" /* ɵɵadvance */](1);\n        core[\"tc\" /* ɵɵproperty */](\"ngSwitchCase\", \"number\");\n    }\n}\nfunction MatStepHeader_div_6_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Zb\" /* ɵɵelementStart */](0, \"div\", 12);\n        core[\"Vb\" /* ɵɵelementContainer */](1, 13);\n        core[\"Yb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const ctx_r2 = core[\"nc\" /* ɵɵnextContext */]();\n        core[\"Gb\" /* ɵɵadvance */](1);\n        core[\"tc\" /* ɵɵproperty */](\"ngTemplateOutlet\", ctx_r2._templateLabel().template);\n    }\n}\nfunction MatStepHeader_div_7_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Zb\" /* ɵɵelementStart */](0, \"div\", 12);\n        core[\"Uc\" /* ɵɵtext */](1);\n        core[\"Yb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const ctx_r3 = core[\"nc\" /* ɵɵnextContext */]();\n        core[\"Gb\" /* ɵɵadvance */](1);\n        core[\"Vc\" /* ɵɵtextInterpolate */](ctx_r3.label);\n    }\n}\nfunction MatStepHeader_div_8_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Zb\" /* ɵɵelementStart */](0, \"div\", 14);\n        core[\"Uc\" /* ɵɵtext */](1);\n        core[\"Yb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const ctx_r4 = core[\"nc\" /* ɵɵnextContext */]();\n        core[\"Gb\" /* ɵɵadvance */](1);\n        core[\"Vc\" /* ɵɵtextInterpolate */](ctx_r4._intl.optionalLabel);\n    }\n}\nfunction MatStepHeader_div_9_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Zb\" /* ɵɵelementStart */](0, \"div\", 15);\n        core[\"Uc\" /* ɵɵtext */](1);\n        core[\"Yb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const ctx_r5 = core[\"nc\" /* ɵɵnextContext */]();\n        core[\"Gb\" /* ɵɵadvance */](1);\n        core[\"Vc\" /* ɵɵtextInterpolate */](ctx_r5.errorMessage);\n    }\n}\nfunction MatStep_ng_template_0_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"rc\" /* ɵɵprojection */](0);\n    }\n}\nconst stepper_c0 = [\"*\"];\nfunction MatHorizontalStepper_ng_container_1_div_2_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Ub\" /* ɵɵelement */](0, \"div\", 6);\n    }\n}\nfunction MatHorizontalStepper_ng_container_1_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r8 = core[\"ac\" /* ɵɵgetCurrentView */]();\n        core[\"Xb\" /* ɵɵelementContainerStart */](0);\n        core[\"Zb\" /* ɵɵelementStart */](1, \"mat-step-header\", 4);\n        core[\"jc\" /* ɵɵlistener */](\"click\", function MatHorizontalStepper_ng_container_1_Template_mat_step_header_click_1_listener() { const step_r2 = ctx.$implicit; return step_r2.select(); })(\"keydown\", function MatHorizontalStepper_ng_container_1_Template_mat_step_header_keydown_1_listener($event) { core[\"Ic\" /* ɵɵrestoreView */](_r8); const ctx_r7 = core[\"nc\" /* ɵɵnextContext */](); return ctx_r7._onKeydown($event); });\n        core[\"Yb\" /* ɵɵelementEnd */]();\n        core[\"Sc\" /* ɵɵtemplate */](2, MatHorizontalStepper_ng_container_1_div_2_Template, 1, 0, \"div\", 5);\n        core[\"Wb\" /* ɵɵelementContainerEnd */]();\n    }\n    if (rf & 2) {\n        const step_r2 = ctx.$implicit;\n        const i_r3 = ctx.index;\n        const isLast_r4 = ctx.last;\n        const ctx_r0 = core[\"nc\" /* ɵɵnextContext */]();\n        core[\"Gb\" /* ɵɵadvance */](1);\n        core[\"tc\" /* ɵɵproperty */](\"tabIndex\", ctx_r0._getFocusIndex() === i_r3 ? 0 : -1)(\"id\", ctx_r0._getStepLabelId(i_r3))(\"index\", i_r3)(\"state\", ctx_r0._getIndicatorType(i_r3, step_r2.state))(\"label\", step_r2.stepLabel || step_r2.label)(\"selected\", ctx_r0.selectedIndex === i_r3)(\"active\", step_r2.completed || ctx_r0.selectedIndex === i_r3 || !ctx_r0.linear)(\"optional\", step_r2.optional)(\"errorMessage\", step_r2.errorMessage)(\"iconOverrides\", ctx_r0._iconOverrides)(\"disableRipple\", ctx_r0.disableRipple)(\"color\", step_r2.color || ctx_r0.color);\n        core[\"Hb\" /* ɵɵattribute */](\"aria-posinset\", i_r3 + 1)(\"aria-setsize\", ctx_r0.steps.length)(\"aria-controls\", ctx_r0._getStepContentId(i_r3))(\"aria-selected\", ctx_r0.selectedIndex == i_r3)(\"aria-label\", step_r2.ariaLabel || null)(\"aria-labelledby\", !step_r2.ariaLabel && step_r2.ariaLabelledby ? step_r2.ariaLabelledby : null);\n        core[\"Gb\" /* ɵɵadvance */](1);\n        core[\"tc\" /* ɵɵproperty */](\"ngIf\", !isLast_r4);\n    }\n}\nfunction MatHorizontalStepper_div_3_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r12 = core[\"ac\" /* ɵɵgetCurrentView */]();\n        core[\"Zb\" /* ɵɵelementStart */](0, \"div\", 7);\n        core[\"jc\" /* ɵɵlistener */](\"@stepTransition.done\", function MatHorizontalStepper_div_3_Template_div_animation_stepTransition_done_0_listener($event) { core[\"Ic\" /* ɵɵrestoreView */](_r12); const ctx_r11 = core[\"nc\" /* ɵɵnextContext */](); return ctx_r11._animationDone.next($event); });\n        core[\"Vb\" /* ɵɵelementContainer */](1, 8);\n        core[\"Yb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const step_r9 = ctx.$implicit;\n        const i_r10 = ctx.index;\n        const ctx_r1 = core[\"nc\" /* ɵɵnextContext */]();\n        core[\"tc\" /* ɵɵproperty */](\"@stepTransition\", ctx_r1._getAnimationDirection(i_r10))(\"id\", ctx_r1._getStepContentId(i_r10));\n        core[\"Hb\" /* ɵɵattribute */](\"aria-labelledby\", ctx_r1._getStepLabelId(i_r10))(\"aria-expanded\", ctx_r1.selectedIndex === i_r10);\n        core[\"Gb\" /* ɵɵadvance */](1);\n        core[\"tc\" /* ɵɵproperty */](\"ngTemplateOutlet\", step_r9.content);\n    }\n}\nfunction MatVerticalStepper_div_0_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r6 = core[\"ac\" /* ɵɵgetCurrentView */]();\n        core[\"Zb\" /* ɵɵelementStart */](0, \"div\", 1);\n        core[\"Zb\" /* ɵɵelementStart */](1, \"mat-step-header\", 2);\n        core[\"jc\" /* ɵɵlistener */](\"click\", function MatVerticalStepper_div_0_Template_mat_step_header_click_1_listener() { const step_r1 = ctx.$implicit; return step_r1.select(); })(\"keydown\", function MatVerticalStepper_div_0_Template_mat_step_header_keydown_1_listener($event) { core[\"Ic\" /* ɵɵrestoreView */](_r6); const ctx_r5 = core[\"nc\" /* ɵɵnextContext */](); return ctx_r5._onKeydown($event); });\n        core[\"Yb\" /* ɵɵelementEnd */]();\n        core[\"Zb\" /* ɵɵelementStart */](2, \"div\", 3);\n        core[\"Zb\" /* ɵɵelementStart */](3, \"div\", 4);\n        core[\"jc\" /* ɵɵlistener */](\"@stepTransition.done\", function MatVerticalStepper_div_0_Template_div_animation_stepTransition_done_3_listener($event) { core[\"Ic\" /* ɵɵrestoreView */](_r6); const ctx_r7 = core[\"nc\" /* ɵɵnextContext */](); return ctx_r7._animationDone.next($event); });\n        core[\"Zb\" /* ɵɵelementStart */](4, \"div\", 5);\n        core[\"Vb\" /* ɵɵelementContainer */](5, 6);\n        core[\"Yb\" /* ɵɵelementEnd */]();\n        core[\"Yb\" /* ɵɵelementEnd */]();\n        core[\"Yb\" /* ɵɵelementEnd */]();\n        core[\"Yb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const step_r1 = ctx.$implicit;\n        const i_r2 = ctx.index;\n        const isLast_r3 = ctx.last;\n        const ctx_r0 = core[\"nc\" /* ɵɵnextContext */]();\n        core[\"Gb\" /* ɵɵadvance */](1);\n        core[\"tc\" /* ɵɵproperty */](\"tabIndex\", ctx_r0._getFocusIndex() == i_r2 ? 0 : -1)(\"id\", ctx_r0._getStepLabelId(i_r2))(\"index\", i_r2)(\"state\", ctx_r0._getIndicatorType(i_r2, step_r1.state))(\"label\", step_r1.stepLabel || step_r1.label)(\"selected\", ctx_r0.selectedIndex === i_r2)(\"active\", step_r1.completed || ctx_r0.selectedIndex === i_r2 || !ctx_r0.linear)(\"optional\", step_r1.optional)(\"errorMessage\", step_r1.errorMessage)(\"iconOverrides\", ctx_r0._iconOverrides)(\"disableRipple\", ctx_r0.disableRipple)(\"color\", step_r1.color || ctx_r0.color);\n        core[\"Hb\" /* ɵɵattribute */](\"aria-posinset\", i_r2 + 1)(\"aria-setsize\", ctx_r0.steps.length)(\"aria-controls\", ctx_r0._getStepContentId(i_r2))(\"aria-selected\", ctx_r0.selectedIndex === i_r2)(\"aria-label\", step_r1.ariaLabel || null)(\"aria-labelledby\", !step_r1.ariaLabel && step_r1.ariaLabelledby ? step_r1.ariaLabelledby : null);\n        core[\"Gb\" /* ɵɵadvance */](1);\n        core[\"Lb\" /* ɵɵclassProp */](\"mat-stepper-vertical-line\", !isLast_r3);\n        core[\"Gb\" /* ɵɵadvance */](1);\n        core[\"tc\" /* ɵɵproperty */](\"@stepTransition\", ctx_r0._getAnimationDirection(i_r2))(\"id\", ctx_r0._getStepContentId(i_r2));\n        core[\"Hb\" /* ɵɵattribute */](\"aria-labelledby\", ctx_r0._getStepLabelId(i_r2))(\"aria-expanded\", ctx_r0.selectedIndex === i_r2);\n        core[\"Gb\" /* ɵɵadvance */](2);\n        core[\"tc\" /* ɵɵproperty */](\"ngTemplateOutlet\", step_r1.content);\n    }\n}\nconst _c1 = \".mat-stepper-vertical,.mat-stepper-horizontal{display:block}.mat-horizontal-stepper-header-container{white-space:nowrap;display:flex;align-items:center}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header-container{align-items:flex-start}.mat-stepper-horizontal-line{border-top-width:1px;border-top-style:solid;flex:auto;height:0;margin:0 -16px;min-width:32px}.mat-stepper-label-position-bottom .mat-stepper-horizontal-line{margin:0;min-width:0;position:relative}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before,.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{border-top-width:1px;border-top-style:solid;content:\\\"\\\";display:inline-block;height:0;position:absolute;width:calc(50% - 20px)}.mat-horizontal-stepper-header{display:flex;height:72px;overflow:hidden;align-items:center;padding:0 24px}.mat-horizontal-stepper-header .mat-step-icon{margin-right:8px;flex:none}[dir=rtl] .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:8px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header{box-sizing:border-box;flex-direction:column;height:auto}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{right:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before{left:0}[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:last-child::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:first-child::after{display:none}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-label{padding:16px 0 0 0;text-align:center;width:100%}.mat-vertical-stepper-header{display:flex;align-items:center;height:24px}.mat-vertical-stepper-header .mat-step-icon{margin-right:12px}[dir=rtl] .mat-vertical-stepper-header .mat-step-icon{margin-right:0;margin-left:12px}.mat-horizontal-stepper-content{outline:0}.mat-horizontal-stepper-content[aria-expanded=false]{height:0;overflow:hidden}.mat-horizontal-content-container{overflow:hidden;padding:0 24px 24px 24px}.mat-vertical-content-container{margin-left:36px;border:0;position:relative}[dir=rtl] .mat-vertical-content-container{margin-left:0;margin-right:36px}.mat-stepper-vertical-line::before{content:\\\"\\\";position:absolute;left:0;border-left-width:1px;border-left-style:solid}[dir=rtl] .mat-stepper-vertical-line::before{left:auto;right:0}.mat-vertical-stepper-content{overflow:hidden;outline:0}.mat-vertical-content{padding:0 24px 24px 24px}.mat-step:last-child .mat-vertical-content-container{border:none}\\n\";\nlet stepper_MatStepLabel = /*@__PURE__*/ (() => {\n    class MatStepLabel extends stepper_CdkStepLabel {\n    }\n    MatStepLabel.ɵfac = function MatStepLabel_Factory(t) { return ɵMatStepLabel_BaseFactory(t || MatStepLabel); };\n    MatStepLabel.ɵdir = /*@__PURE__*/ core[\"Ob\" /* ɵɵdefineDirective */]({ type: MatStepLabel, selectors: [[\"\", \"matStepLabel\", \"\"]], features: [core[\"Db\" /* ɵɵInheritDefinitionFeature */]] });\n    return MatStepLabel;\n})();\nconst ɵMatStepLabel_BaseFactory = /*@__PURE__*/ /*@__PURE__*/ core[\"bc\" /* ɵɵgetInheritedFactory */](stepper_MatStepLabel);\nlet stepper_MatStepperIntl = /*@__PURE__*/ (() => {\n    class MatStepperIntl {\n        constructor() {\n            /**\n             * Stream that emits whenever the labels here are changed. Use this to notify\n             * components if the labels have changed after initialization.\n             */\n            this.changes = new Subject[\"a\" /* Subject */]();\n            /** Label that is rendered below optional steps. */\n            this.optionalLabel = 'Optional';\n        }\n    }\n    MatStepperIntl.ɵfac = function MatStepperIntl_Factory(t) { return new (t || MatStepperIntl)(); };\n    MatStepperIntl.ɵprov = /*@__PURE__*/ Object(core[\"Pb\" /* ɵɵdefineInjectable */])({ factory: function MatStepperIntl_Factory() { return new MatStepperIntl(); }, token: MatStepperIntl, providedIn: \"root\" });\n    return MatStepperIntl;\n})();\n/** @docs-private */\nfunction MAT_STEPPER_INTL_PROVIDER_FACTORY(parentIntl) {\n    return parentIntl || new stepper_MatStepperIntl();\n}\n/** @docs-private */\nconst MAT_STEPPER_INTL_PROVIDER = {\n    provide: stepper_MatStepperIntl,\n    deps: [[/*@__PURE__*/ new core[\"G\" /* Optional */](), /*@__PURE__*/ new core[\"P\" /* SkipSelf */](), stepper_MatStepperIntl]],\n    useFactory: MAT_STEPPER_INTL_PROVIDER_FACTORY\n};\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatStepHeader.\n/** @docs-private */\nclass stepper_MatStepHeaderBase extends stepper_CdkStepHeader {\n    constructor(elementRef) {\n        super(elementRef);\n    }\n}\nconst _MatStepHeaderMixinBase = /*@__PURE__*/ Object(fesm2015_core[\"y\" /* mixinColor */])(stepper_MatStepHeaderBase, 'primary');\nlet stepper_MatStepHeader = /*@__PURE__*/ (() => {\n    class MatStepHeader extends _MatStepHeaderMixinBase {\n        constructor(_intl, _focusMonitor, _elementRef, changeDetectorRef) {\n            super(_elementRef);\n            this._intl = _intl;\n            this._focusMonitor = _focusMonitor;\n            this._intlSubscription = _intl.changes.subscribe(() => changeDetectorRef.markForCheck());\n        }\n        ngAfterViewInit() {\n            this._focusMonitor.monitor(this._elementRef, true);\n        }\n        ngOnDestroy() {\n            this._intlSubscription.unsubscribe();\n            this._focusMonitor.stopMonitoring(this._elementRef);\n        }\n        /** Focuses the step header. */\n        focus(origin, options) {\n            if (origin) {\n                this._focusMonitor.focusVia(this._elementRef, origin, options);\n            }\n            else {\n                this._elementRef.nativeElement.focus(options);\n            }\n        }\n        /** Returns string label of given step if it is a text label. */\n        _stringLabel() {\n            return this.label instanceof stepper_MatStepLabel ? null : this.label;\n        }\n        /** Returns MatStepLabel if the label of given step is a template label. */\n        _templateLabel() {\n            return this.label instanceof stepper_MatStepLabel ? this.label : null;\n        }\n        /** Returns the host HTML element. */\n        _getHostElement() {\n            return this._elementRef.nativeElement;\n        }\n        /** Template context variables that are exposed to the `matStepperIcon` instances. */\n        _getIconContext() {\n            return {\n                index: this.index,\n                active: this.active,\n                optional: this.optional\n            };\n        }\n        _getDefaultTextForState(state) {\n            if (state == 'number') {\n                return `${this.index + 1}`;\n            }\n            if (state == 'edit') {\n                return 'create';\n            }\n            if (state == 'error') {\n                return 'warning';\n            }\n            return state;\n        }\n    }\n    MatStepHeader.ɵfac = function MatStepHeader_Factory(t) { return new (t || MatStepHeader)(core[\"Tb\" /* ɵɵdirectiveInject */](stepper_MatStepperIntl), core[\"Tb\" /* ɵɵdirectiveInject */](a11y[\"h\" /* FocusMonitor */]), core[\"Tb\" /* ɵɵdirectiveInject */](core[\"m\" /* ElementRef */]), core[\"Tb\" /* ɵɵdirectiveInject */](core[\"i\" /* ChangeDetectorRef */])); };\n    MatStepHeader.ɵcmp = /*@__PURE__*/ core[\"Nb\" /* ɵɵdefineComponent */]({ type: MatStepHeader, selectors: [[\"mat-step-header\"]], hostAttrs: [\"role\", \"tab\", 1, \"mat-step-header\", \"mat-focus-indicator\"], inputs: { color: \"color\", state: \"state\", label: \"label\", errorMessage: \"errorMessage\", iconOverrides: \"iconOverrides\", index: \"index\", selected: \"selected\", active: \"active\", optional: \"optional\", disableRipple: \"disableRipple\" }, features: [core[\"Db\" /* ɵɵInheritDefinitionFeature */]], decls: 10, vars: 19, consts: [[\"matRipple\", \"\", 1, \"mat-step-header-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"], [1, \"mat-step-icon-content\", 3, \"ngSwitch\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\", 4, \"ngSwitchCase\"], [3, \"ngSwitch\", 4, \"ngSwitchDefault\"], [1, \"mat-step-label\"], [\"class\", \"mat-step-text-label\", 4, \"ngIf\"], [\"class\", \"mat-step-optional\", 4, \"ngIf\"], [\"class\", \"mat-step-sub-label-error\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [3, \"ngSwitch\"], [4, \"ngSwitchCase\"], [4, \"ngSwitchDefault\"], [1, \"mat-step-text-label\"], [3, \"ngTemplateOutlet\"], [1, \"mat-step-optional\"], [1, \"mat-step-sub-label-error\"]], template: function MatStepHeader_Template(rf, ctx) {\n            if (rf & 1) {\n                core[\"Ub\" /* ɵɵelement */](0, \"div\", 0);\n                core[\"Zb\" /* ɵɵelementStart */](1, \"div\");\n                core[\"Zb\" /* ɵɵelementStart */](2, \"div\", 1);\n                core[\"Sc\" /* ɵɵtemplate */](3, MatStepHeader_ng_container_3_Template, 1, 2, \"ng-container\", 2);\n                core[\"Sc\" /* ɵɵtemplate */](4, MatStepHeader_ng_container_4_Template, 3, 2, \"ng-container\", 3);\n                core[\"Yb\" /* ɵɵelementEnd */]();\n                core[\"Yb\" /* ɵɵelementEnd */]();\n                core[\"Zb\" /* ɵɵelementStart */](5, \"div\", 4);\n                core[\"Sc\" /* ɵɵtemplate */](6, MatStepHeader_div_6_Template, 2, 1, \"div\", 5);\n                core[\"Sc\" /* ɵɵtemplate */](7, MatStepHeader_div_7_Template, 2, 1, \"div\", 5);\n                core[\"Sc\" /* ɵɵtemplate */](8, MatStepHeader_div_8_Template, 2, 1, \"div\", 6);\n                core[\"Sc\" /* ɵɵtemplate */](9, MatStepHeader_div_9_Template, 2, 1, \"div\", 7);\n                core[\"Yb\" /* ɵɵelementEnd */]();\n            }\n            if (rf & 2) {\n                core[\"tc\" /* ɵɵproperty */](\"matRippleTrigger\", ctx._getHostElement())(\"matRippleDisabled\", ctx.disableRipple);\n                core[\"Gb\" /* ɵɵadvance */](1);\n                core[\"Jb\" /* ɵɵclassMapInterpolate1 */](\"mat-step-icon-state-\", ctx.state, \" mat-step-icon\");\n                core[\"Lb\" /* ɵɵclassProp */](\"mat-step-icon-selected\", ctx.selected);\n                core[\"Gb\" /* ɵɵadvance */](1);\n                core[\"tc\" /* ɵɵproperty */](\"ngSwitch\", !!(ctx.iconOverrides && ctx.iconOverrides[ctx.state]));\n                core[\"Gb\" /* ɵɵadvance */](1);\n                core[\"tc\" /* ɵɵproperty */](\"ngSwitchCase\", true);\n                core[\"Gb\" /* ɵɵadvance */](2);\n                core[\"Lb\" /* ɵɵclassProp */](\"mat-step-label-active\", ctx.active)(\"mat-step-label-selected\", ctx.selected)(\"mat-step-label-error\", ctx.state == \"error\");\n                core[\"Gb\" /* ɵɵadvance */](1);\n                core[\"tc\" /* ɵɵproperty */](\"ngIf\", ctx._templateLabel());\n                core[\"Gb\" /* ɵɵadvance */](1);\n                core[\"tc\" /* ɵɵproperty */](\"ngIf\", ctx._stringLabel());\n                core[\"Gb\" /* ɵɵadvance */](1);\n                core[\"tc\" /* ɵɵproperty */](\"ngIf\", ctx.optional && ctx.state != \"error\");\n                core[\"Gb\" /* ɵɵadvance */](1);\n                core[\"tc\" /* ɵɵproperty */](\"ngIf\", ctx.state == \"error\");\n            }\n        }, directives: [fesm2015_core[\"t\" /* MatRipple */], common[\"p\" /* NgSwitch */], common[\"q\" /* NgSwitchCase */], common[\"r\" /* NgSwitchDefault */], common[\"n\" /* NgIf */], common[\"s\" /* NgTemplateOutlet */], icon[\"a\" /* MatIcon */]], styles: [\".mat-step-header{overflow:hidden;outline:none;cursor:pointer;position:relative;box-sizing:content-box;-webkit-tap-highlight-color:transparent}.mat-step-optional,.mat-step-sub-label-error{font-size:12px}.mat-step-icon{border-radius:50%;height:24px;width:24px;flex-shrink:0;position:relative}.mat-step-icon-content,.mat-step-icon .mat-icon{position:absolute;top:50%;left:50%;transform:translate(-50%, -50%)}.mat-step-icon .mat-icon{font-size:16px;height:16px;width:16px}.mat-step-icon-state-error .mat-icon{font-size:24px;height:24px;width:24px}.mat-step-label{display:inline-block;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;min-width:50px;vertical-align:middle}.mat-step-text-label{text-overflow:ellipsis;overflow:hidden}.mat-step-header .mat-step-header-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\\n\"], encapsulation: 2, changeDetection: 0 });\n    return MatStepHeader;\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the Material steppers.\n * @docs-private\n */\nconst matStepperAnimations = {\n    /** Animation that transitions the step along the X axis in a horizontal stepper. */\n    horizontalStepTransition: /*@__PURE__*/ Object(animations[\"n\" /* trigger */])('stepTransition', [\n        /*@__PURE__*/ Object(animations[\"k\" /* state */])('previous', /*@__PURE__*/ Object(animations[\"l\" /* style */])({ transform: 'translate3d(-100%, 0, 0)', visibility: 'hidden' })),\n        // Transition to `inherit`, rather than `visible`,\n        // because visibility on a child element the one from the parent,\n        // making this element focusable inside of a `hidden` element.\n        /*@__PURE__*/ Object(animations[\"k\" /* state */])('current', /*@__PURE__*/ Object(animations[\"l\" /* style */])({ transform: 'none', visibility: 'inherit' })),\n        /*@__PURE__*/ Object(animations[\"k\" /* state */])('next', /*@__PURE__*/ Object(animations[\"l\" /* style */])({ transform: 'translate3d(100%, 0, 0)', visibility: 'hidden' })),\n        /*@__PURE__*/ Object(animations[\"m\" /* transition */])('* => *', /*@__PURE__*/ Object(animations[\"e\" /* animate */])('500ms cubic-bezier(0.35, 0, 0.25, 1)'))\n    ]),\n    /** Animation that transitions the step along the Y axis in a vertical stepper. */\n    verticalStepTransition: /*@__PURE__*/ Object(animations[\"n\" /* trigger */])('stepTransition', [\n        /*@__PURE__*/ Object(animations[\"k\" /* state */])('previous', /*@__PURE__*/ Object(animations[\"l\" /* style */])({ height: '0px', visibility: 'hidden' })),\n        /*@__PURE__*/ Object(animations[\"k\" /* state */])('next', /*@__PURE__*/ Object(animations[\"l\" /* style */])({ height: '0px', visibility: 'hidden' })),\n        // Transition to `inherit`, rather than `visible`,\n        // because visibility on a child element the one from the parent,\n        // making this element focusable inside of a `hidden` element.\n        /*@__PURE__*/ Object(animations[\"k\" /* state */])('current', /*@__PURE__*/ Object(animations[\"l\" /* style */])({ height: '*', visibility: 'inherit' })),\n        /*@__PURE__*/ Object(animations[\"m\" /* transition */])('* <=> current', /*@__PURE__*/ Object(animations[\"e\" /* animate */])('225ms cubic-bezier(0.4, 0.0, 0.2, 1)'))\n    ])\n};\nlet stepper_MatStepperIcon = /*@__PURE__*/ (() => {\n    class MatStepperIcon {\n        constructor(templateRef) {\n            this.templateRef = templateRef;\n        }\n    }\n    MatStepperIcon.ɵfac = function MatStepperIcon_Factory(t) { return new (t || MatStepperIcon)(core[\"Tb\" /* ɵɵdirectiveInject */](core[\"R\" /* TemplateRef */])); };\n    MatStepperIcon.ɵdir = /*@__PURE__*/ core[\"Ob\" /* ɵɵdefineDirective */]({ type: MatStepperIcon, selectors: [[\"ng-template\", \"matStepperIcon\", \"\"]], inputs: { name: [\"matStepperIcon\", \"name\"] } });\n    return MatStepperIcon;\n})();\nlet stepper_MatStep = /*@__PURE__*/ (() => {\n    class MatStep extends stepper_CdkStep {\n        /** @breaking-change 8.0.0 remove the `?` after `stepperOptions` */\n        constructor(stepper, _errorStateMatcher, stepperOptions) {\n            super(stepper, stepperOptions);\n            this._errorStateMatcher = _errorStateMatcher;\n        }\n        /** Custom error state matcher that additionally checks for validity of interacted form. */\n        isErrorState(control, form) {\n            const originalErrorState = this._errorStateMatcher.isErrorState(control, form);\n            // Custom error state checks for the validity of form that is not submitted or touched\n            // since user can trigger a form change by calling for another step without directly\n            // interacting with the current form.\n            const customErrorState = !!(control && control.invalid && this.interacted);\n            return originalErrorState || customErrorState;\n        }\n    }\n    MatStep.ɵfac = function MatStep_Factory(t) { return new (t || MatStep)(core[\"Tb\" /* ɵɵdirectiveInject */](Object(core[\"Z\" /* forwardRef */])(() => stepper_MatStepper)), core[\"Tb\" /* ɵɵdirectiveInject */](fesm2015_core[\"d\" /* ErrorStateMatcher */], 4), core[\"Tb\" /* ɵɵdirectiveInject */](STEPPER_GLOBAL_OPTIONS, 8)); };\n    MatStep.ɵcmp = /*@__PURE__*/ core[\"Nb\" /* ɵɵdefineComponent */]({ type: MatStep, selectors: [[\"mat-step\"]], contentQueries: function MatStep_ContentQueries(rf, ctx, dirIndex) {\n            if (rf & 1) {\n                core[\"Mb\" /* ɵɵcontentQuery */](dirIndex, stepper_MatStepLabel, true);\n            }\n            if (rf & 2) {\n                let _t;\n                core[\"Fc\" /* ɵɵqueryRefresh */](_t = core[\"kc\" /* ɵɵloadQuery */]()) && (ctx.stepLabel = _t.first);\n            }\n        }, inputs: { color: \"color\" }, exportAs: [\"matStep\"], features: [/*@__PURE__*/ core[\"Fb\" /* ɵɵProvidersFeature */]([\n                { provide: fesm2015_core[\"d\" /* ErrorStateMatcher */], useExisting: MatStep },\n                { provide: stepper_CdkStep, useExisting: MatStep },\n            ]), core[\"Db\" /* ɵɵInheritDefinitionFeature */]], ngContentSelectors: stepper_c0, decls: 1, vars: 0, template: function MatStep_Template(rf, ctx) {\n            if (rf & 1) {\n                core[\"sc\" /* ɵɵprojectionDef */]();\n                core[\"Sc\" /* ɵɵtemplate */](0, MatStep_ng_template_0_Template, 1, 0, \"ng-template\");\n            }\n        }, encapsulation: 2, changeDetection: 0 });\n    return MatStep;\n})();\nlet stepper_MatStepper = /*@__PURE__*/ (() => {\n    class MatStepper extends stepper_CdkStepper {\n        constructor() {\n            super(...arguments);\n            /** Steps that belong to the current stepper, excluding ones from nested steppers. */\n            this.steps = new core[\"J\" /* QueryList */]();\n            /** Event emitted when the current step is done transitioning in. */\n            this.animationDone = new core[\"p\" /* EventEmitter */]();\n            /** Consumer-specified template-refs to be used to override the header icons. */\n            this._iconOverrides = {};\n            /** Stream of animation `done` events when the body expands/collapses. */\n            this._animationDone = new Subject[\"a\" /* Subject */]();\n        }\n        ngAfterContentInit() {\n            super.ngAfterContentInit();\n            this._icons.forEach(({ name, templateRef }) => this._iconOverrides[name] = templateRef);\n            // Mark the component for change detection whenever the content children query changes\n            this.steps.changes.pipe(Object(takeUntil[\"a\" /* takeUntil */])(this._destroyed)).subscribe(() => {\n                this._stateChanged();\n            });\n            this._animationDone.pipe(\n            // This needs a `distinctUntilChanged` in order to avoid emitting the same event twice due\n            // to a bug in animations where the `.done` callback gets invoked twice on some browsers.\n            // See https://github.com/angular/angular/issues/24084\n            Object(distinctUntilChanged[\"a\" /* distinctUntilChanged */])((x, y) => x.fromState === y.fromState && x.toState === y.toState), Object(takeUntil[\"a\" /* takeUntil */])(this._destroyed)).subscribe(event => {\n                if (event.toState === 'current') {\n                    this.animationDone.emit();\n                }\n            });\n        }\n    }\n    MatStepper.ɵfac = function MatStepper_Factory(t) { return ɵMatStepper_BaseFactory(t || MatStepper); };\n    MatStepper.ɵdir = /*@__PURE__*/ core[\"Ob\" /* ɵɵdefineDirective */]({ type: MatStepper, selectors: [[\"\", \"matStepper\", \"\"]], contentQueries: function MatStepper_ContentQueries(rf, ctx, dirIndex) {\n            if (rf & 1) {\n                core[\"Mb\" /* ɵɵcontentQuery */](dirIndex, stepper_MatStep, true);\n                core[\"Mb\" /* ɵɵcontentQuery */](dirIndex, stepper_MatStepperIcon, true);\n            }\n            if (rf & 2) {\n                let _t;\n                core[\"Fc\" /* ɵɵqueryRefresh */](_t = core[\"kc\" /* ɵɵloadQuery */]()) && (ctx._steps = _t);\n                core[\"Fc\" /* ɵɵqueryRefresh */](_t = core[\"kc\" /* ɵɵloadQuery */]()) && (ctx._icons = _t);\n            }\n        }, viewQuery: function MatStepper_Query(rf, ctx) {\n            if (rf & 1) {\n                core[\"Zc\" /* ɵɵviewQuery */](stepper_MatStepHeader, true);\n            }\n            if (rf & 2) {\n                let _t;\n                core[\"Fc\" /* ɵɵqueryRefresh */](_t = core[\"kc\" /* ɵɵloadQuery */]()) && (ctx._stepHeader = _t);\n            }\n        }, inputs: { disableRipple: \"disableRipple\", color: \"color\" }, outputs: { animationDone: \"animationDone\" }, features: [/*@__PURE__*/ core[\"Fb\" /* ɵɵProvidersFeature */]([{ provide: stepper_CdkStepper, useExisting: MatStepper }]), core[\"Db\" /* ɵɵInheritDefinitionFeature */]] });\n    return MatStepper;\n})();\nconst ɵMatStepper_BaseFactory = /*@__PURE__*/ /*@__PURE__*/ core[\"bc\" /* ɵɵgetInheritedFactory */](stepper_MatStepper);\nlet stepper_MatHorizontalStepper = /*@__PURE__*/ (() => {\n    class MatHorizontalStepper extends stepper_MatStepper {\n        constructor() {\n            super(...arguments);\n            /** Whether the label should display in bottom or end position. */\n            this.labelPosition = 'end';\n        }\n    }\n    MatHorizontalStepper.ɵfac = function MatHorizontalStepper_Factory(t) { return ɵMatHorizontalStepper_BaseFactory(t || MatHorizontalStepper); };\n    MatHorizontalStepper.ɵcmp = /*@__PURE__*/ core[\"Nb\" /* ɵɵdefineComponent */]({ type: MatHorizontalStepper, selectors: [[\"mat-horizontal-stepper\"]], hostAttrs: [\"aria-orientation\", \"horizontal\", \"role\", \"tablist\", 1, \"mat-stepper-horizontal\"], hostVars: 4, hostBindings: function MatHorizontalStepper_HostBindings(rf, ctx) {\n            if (rf & 2) {\n                core[\"Lb\" /* ɵɵclassProp */](\"mat-stepper-label-position-end\", ctx.labelPosition == \"end\")(\"mat-stepper-label-position-bottom\", ctx.labelPosition == \"bottom\");\n            }\n        }, inputs: { selectedIndex: \"selectedIndex\", labelPosition: \"labelPosition\" }, exportAs: [\"matHorizontalStepper\"], features: [/*@__PURE__*/ core[\"Fb\" /* ɵɵProvidersFeature */]([\n                { provide: stepper_MatStepper, useExisting: MatHorizontalStepper },\n                { provide: stepper_CdkStepper, useExisting: MatHorizontalStepper }\n            ]), core[\"Db\" /* ɵɵInheritDefinitionFeature */]], decls: 4, vars: 2, consts: [[1, \"mat-horizontal-stepper-header-container\"], [4, \"ngFor\", \"ngForOf\"], [1, \"mat-horizontal-content-container\"], [\"class\", \"mat-horizontal-stepper-content\", \"role\", \"tabpanel\", 3, \"id\", 4, \"ngFor\", \"ngForOf\"], [1, \"mat-horizontal-stepper-header\", 3, \"tabIndex\", \"id\", \"index\", \"state\", \"label\", \"selected\", \"active\", \"optional\", \"errorMessage\", \"iconOverrides\", \"disableRipple\", \"color\", \"click\", \"keydown\"], [\"class\", \"mat-stepper-horizontal-line\", 4, \"ngIf\"], [1, \"mat-stepper-horizontal-line\"], [\"role\", \"tabpanel\", 1, \"mat-horizontal-stepper-content\", 3, \"id\"], [3, \"ngTemplateOutlet\"]], template: function MatHorizontalStepper_Template(rf, ctx) {\n            if (rf & 1) {\n                core[\"Zb\" /* ɵɵelementStart */](0, \"div\", 0);\n                core[\"Sc\" /* ɵɵtemplate */](1, MatHorizontalStepper_ng_container_1_Template, 3, 19, \"ng-container\", 1);\n                core[\"Yb\" /* ɵɵelementEnd */]();\n                core[\"Zb\" /* ɵɵelementStart */](2, \"div\", 2);\n                core[\"Sc\" /* ɵɵtemplate */](3, MatHorizontalStepper_div_3_Template, 2, 5, \"div\", 3);\n                core[\"Yb\" /* ɵɵelementEnd */]();\n            }\n            if (rf & 2) {\n                core[\"Gb\" /* ɵɵadvance */](1);\n                core[\"tc\" /* ɵɵproperty */](\"ngForOf\", ctx.steps);\n                core[\"Gb\" /* ɵɵadvance */](2);\n                core[\"tc\" /* ɵɵproperty */](\"ngForOf\", ctx.steps);\n            }\n        }, directives: [common[\"m\" /* NgForOf */], stepper_MatStepHeader, common[\"n\" /* NgIf */], common[\"s\" /* NgTemplateOutlet */]], styles: [_c1], encapsulation: 2, data: { animation: [matStepperAnimations.horizontalStepTransition] }, changeDetection: 0 });\n    return MatHorizontalStepper;\n})();\nconst ɵMatHorizontalStepper_BaseFactory = /*@__PURE__*/ /*@__PURE__*/ core[\"bc\" /* ɵɵgetInheritedFactory */](stepper_MatHorizontalStepper);\nlet stepper_MatVerticalStepper = /*@__PURE__*/ (() => {\n    class MatVerticalStepper extends stepper_MatStepper {\n        constructor(dir, changeDetectorRef, \n        // @breaking-change 8.0.0 `elementRef` and `_document` parameters to become required.\n        elementRef, _document) {\n            super(dir, changeDetectorRef, elementRef, _document);\n            this._orientation = 'vertical';\n        }\n    }\n    MatVerticalStepper.ɵfac = function MatVerticalStepper_Factory(t) { return new (t || MatVerticalStepper)(core[\"Tb\" /* ɵɵdirectiveInject */](bidi[\"b\" /* Directionality */], 8), core[\"Tb\" /* ɵɵdirectiveInject */](core[\"i\" /* ChangeDetectorRef */]), core[\"Tb\" /* ɵɵdirectiveInject */](core[\"m\" /* ElementRef */]), core[\"Tb\" /* ɵɵdirectiveInject */](common[\"d\" /* DOCUMENT */])); };\n    MatVerticalStepper.ɵcmp = /*@__PURE__*/ core[\"Nb\" /* ɵɵdefineComponent */]({ type: MatVerticalStepper, selectors: [[\"mat-vertical-stepper\"]], hostAttrs: [\"aria-orientation\", \"vertical\", \"role\", \"tablist\", 1, \"mat-stepper-vertical\"], inputs: { selectedIndex: \"selectedIndex\" }, exportAs: [\"matVerticalStepper\"], features: [/*@__PURE__*/ core[\"Fb\" /* ɵɵProvidersFeature */]([\n                { provide: stepper_MatStepper, useExisting: MatVerticalStepper },\n                { provide: stepper_CdkStepper, useExisting: MatVerticalStepper }\n            ]), core[\"Db\" /* ɵɵInheritDefinitionFeature */]], decls: 1, vars: 1, consts: [[\"class\", \"mat-step\", 4, \"ngFor\", \"ngForOf\"], [1, \"mat-step\"], [1, \"mat-vertical-stepper-header\", 3, \"tabIndex\", \"id\", \"index\", \"state\", \"label\", \"selected\", \"active\", \"optional\", \"errorMessage\", \"iconOverrides\", \"disableRipple\", \"color\", \"click\", \"keydown\"], [1, \"mat-vertical-content-container\"], [\"role\", \"tabpanel\", 1, \"mat-vertical-stepper-content\", 3, \"id\"], [1, \"mat-vertical-content\"], [3, \"ngTemplateOutlet\"]], template: function MatVerticalStepper_Template(rf, ctx) {\n            if (rf & 1) {\n                core[\"Sc\" /* ɵɵtemplate */](0, MatVerticalStepper_div_0_Template, 6, 25, \"div\", 0);\n            }\n            if (rf & 2) {\n                core[\"tc\" /* ɵɵproperty */](\"ngForOf\", ctx.steps);\n            }\n        }, directives: [common[\"m\" /* NgForOf */], stepper_MatStepHeader, common[\"s\" /* NgTemplateOutlet */]], styles: [_c1], encapsulation: 2, data: { animation: [matStepperAnimations.verticalStepTransition] }, changeDetection: 0 });\n    return MatVerticalStepper;\n})();\nlet stepper_MatStepperNext = /*@__PURE__*/ (() => {\n    class MatStepperNext extends stepper_CdkStepperNext {\n    }\n    MatStepperNext.ɵfac = function MatStepperNext_Factory(t) { return ɵMatStepperNext_BaseFactory(t || MatStepperNext); };\n    MatStepperNext.ɵdir = /*@__PURE__*/ core[\"Ob\" /* ɵɵdefineDirective */]({ type: MatStepperNext, selectors: [[\"button\", \"matStepperNext\", \"\"]], hostAttrs: [1, \"mat-stepper-next\"], hostVars: 1, hostBindings: function MatStepperNext_HostBindings(rf, ctx) {\n            if (rf & 2) {\n                core[\"cc\" /* ɵɵhostProperty */](\"type\", ctx.type);\n            }\n        }, inputs: { type: \"type\" }, features: [core[\"Db\" /* ɵɵInheritDefinitionFeature */]] });\n    return MatStepperNext;\n})();\nconst ɵMatStepperNext_BaseFactory = /*@__PURE__*/ /*@__PURE__*/ core[\"bc\" /* ɵɵgetInheritedFactory */](stepper_MatStepperNext);\nlet stepper_MatStepperPrevious = /*@__PURE__*/ (() => {\n    class MatStepperPrevious extends stepper_CdkStepperPrevious {\n    }\n    MatStepperPrevious.ɵfac = function MatStepperPrevious_Factory(t) { return ɵMatStepperPrevious_BaseFactory(t || MatStepperPrevious); };\n    MatStepperPrevious.ɵdir = /*@__PURE__*/ core[\"Ob\" /* ɵɵdefineDirective */]({ type: MatStepperPrevious, selectors: [[\"button\", \"matStepperPrevious\", \"\"]], hostAttrs: [1, \"mat-stepper-previous\"], hostVars: 1, hostBindings: function MatStepperPrevious_HostBindings(rf, ctx) {\n            if (rf & 2) {\n                core[\"cc\" /* ɵɵhostProperty */](\"type\", ctx.type);\n            }\n        }, inputs: { type: \"type\" }, features: [core[\"Db\" /* ɵɵInheritDefinitionFeature */]] });\n    return MatStepperPrevious;\n})();\nconst ɵMatStepperPrevious_BaseFactory = /*@__PURE__*/ /*@__PURE__*/ core[\"bc\" /* ɵɵgetInheritedFactory */](stepper_MatStepperPrevious);\nlet stepper_MatStepperModule = /*@__PURE__*/ (() => {\n    class MatStepperModule {\n    }\n    MatStepperModule.ɵmod = /*@__PURE__*/ core[\"Rb\" /* ɵɵdefineNgModule */]({ type: MatStepperModule });\n    MatStepperModule.ɵinj = /*@__PURE__*/ core[\"Qb\" /* ɵɵdefineInjector */]({ factory: function MatStepperModule_Factory(t) { return new (t || MatStepperModule)(); }, providers: [MAT_STEPPER_INTL_PROVIDER, fesm2015_core[\"d\" /* ErrorStateMatcher */]], imports: [[\n                fesm2015_core[\"j\" /* MatCommonModule */],\n                common[\"c\" /* CommonModule */],\n                portal[\"f\" /* PortalModule */],\n                fesm2015_button[\"c\" /* MatButtonModule */],\n                stepper_CdkStepperModule,\n                icon[\"b\" /* MatIconModule */],\n                fesm2015_core[\"u\" /* MatRippleModule */],\n            ], fesm2015_core[\"j\" /* MatCommonModule */]] });\n    return MatStepperModule;\n})();\n/*@__PURE__*/ (function () {\n    (typeof ngJitMode === \"undefined\" || ngJitMode) && core[\"Lc\" /* ɵɵsetNgModuleScope */](stepper_MatStepperModule, { declarations: function () { return [stepper_MatHorizontalStepper, stepper_MatVerticalStepper, stepper_MatStep, stepper_MatStepLabel, stepper_MatStepper, stepper_MatStepperNext, stepper_MatStepperPrevious, stepper_MatStepHeader, stepper_MatStepperIcon]; }, imports: function () {\n            return [fesm2015_core[\"j\" /* MatCommonModule */],\n                common[\"c\" /* CommonModule */],\n                portal[\"f\" /* PortalModule */],\n                fesm2015_button[\"c\" /* MatButtonModule */],\n                stepper_CdkStepperModule,\n                icon[\"b\" /* MatIconModule */],\n                fesm2015_core[\"u\" /* MatRippleModule */]];\n        }, exports: function () { return [fesm2015_core[\"j\" /* MatCommonModule */], stepper_MatHorizontalStepper, stepper_MatVerticalStepper, stepper_MatStep, stepper_MatStepLabel, stepper_MatStepper, stepper_MatStepperNext, stepper_MatStepperPrevious, stepper_MatStepHeader, stepper_MatStepperIcon]; } });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Generated bundle index. Do not edit.\n */\n\n//# sourceMappingURL=stepper.js.map\n\n\n/***/ })\n\n}]);","inputSourceMap":null}