import { EventEmitter, ElementRef } from '@angular/core';
import { BlockableUI } from 'primeng-lts/api';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from 'primeng-lts/api';
export declare class Fieldset implements BlockableUI {
    private el;
    legend: string;
    toggleable: boolean;
    collapsed: boolean;
    collapsedChange: EventEmitter<any>;
    onBeforeToggle: EventEmitter<any>;
    onAfterToggle: EventEmitter<any>;
    style: any;
    styleClass: string;
    transitionOptions: string;
    animating: boolean;
    constructor(el: ElementRef);
    id: string;
    toggle(event: any): boolean;
    expand(event: any): void;
    collapse(event: any): void;
    getBlockableElement(): HTMLElement;
    onToggleDone(event: Event): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<Fieldset, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<Fieldset, "p-fieldset", never, { "collapsed": "collapsed"; "transitionOptions": "transitionOptions"; "legend": "legend"; "toggleable": "toggleable"; "style": "style"; "styleClass": "styleClass"; }, { "collapsedChange": "collapsedChange"; "onBeforeToggle": "onBeforeToggle"; "onAfterToggle": "onAfterToggle"; }, never, ["p-header", "*"]>;
}
export declare class FieldsetModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<FieldsetModule, [typeof Fieldset], [typeof ɵngcc1.CommonModule], [typeof Fieldset, typeof ɵngcc2.SharedModule]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<FieldsetModule>;
}

//# sourceMappingURL=fieldset.d.ts.map