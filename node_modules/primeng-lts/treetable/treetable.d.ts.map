{"version":3,"file":"treetable.d.ts","sources":["treetable.d.ts"],"names":[],"mappingssourcesContent":["import { AfterContentInit, OnInit, OnDestroy, EventEmitter, TemplateRef, QueryList, ElementRef, NgZone, AfterViewInit, AfterViewChecked, OnChanges, SimpleChanges, ChangeDetectorRef } from '@angular/core';\r\nimport { TreeNode } from 'primeng-lts/api';\r\nimport { Subscription } from 'rxjs';\r\nimport { PrimeTemplate } from 'primeng-lts/api';\r\nimport { SortMeta } from 'primeng-lts/api';\r\nimport { BlockableUI } from 'primeng-lts/api';\r\nimport { FilterMetadata } from 'primeng-lts/api';\r\nimport { CdkVirtualScrollViewport } from '@angular/cdk/scrolling';\r\nexport declare class TreeTableService {\r\n    private sortSource;\r\n    private selectionSource;\r\n    private contextMenuSource;\r\n    private uiUpdateSource;\r\n    private totalRecordsSource;\r\n    sortSource$: import(\"rxjs\").Observable<SortMeta | SortMeta[]>;\r\n    selectionSource$: import(\"rxjs\").Observable<unknown>;\r\n    contextMenuSource$: import(\"rxjs\").Observable<any>;\r\n    uiUpdateSource$: import(\"rxjs\").Observable<any>;\r\n    totalRecordsSource$: import(\"rxjs\").Observable<any>;\r\n    onSort(sortMeta: SortMeta | SortMeta[]): void;\r\n    onSelectionChange(): void;\r\n    onContextMenu(node: any): void;\r\n    onUIUpdate(value: any): void;\r\n    onTotalRecordsChange(value: number): void;\r\n}\r\nexport declare class TreeTable implements AfterContentInit, OnInit, OnDestroy, BlockableUI, OnChanges {\r\n    el: ElementRef;\r\n    zone: NgZone;\r\n    tableService: TreeTableService;\r\n    columns: any[];\r\n    style: any;\r\n    styleClass: string;\r\n    tableStyle: any;\r\n    tableStyleClass: string;\r\n    autoLayout: boolean;\r\n    lazy: boolean;\r\n    lazyLoadOnInit: boolean;\r\n    paginator: boolean;\r\n    rows: number;\r\n    first: number;\r\n    pageLinks: number;\r\n    rowsPerPageOptions: any[];\r\n    alwaysShowPaginator: boolean;\r\n    paginatorPosition: string;\r\n    paginatorDropdownAppendTo: any;\r\n    currentPageReportTemplate: string;\r\n    showCurrentPageReport: boolean;\r\n    showFirstLastIcon: boolean;\r\n    defaultSortOrder: number;\r\n    sortMode: string;\r\n    resetPageOnSort: boolean;\r\n    customSort: boolean;\r\n    selectionMode: string;\r\n    selectionChange: EventEmitter<any>;\r\n    contextMenuSelection: any;\r\n    contextMenuSelectionChange: EventEmitter<any>;\r\n    contextMenuSelectionMode: string;\r\n    dataKey: string;\r\n    metaKeySelection: boolean;\r\n    compareSelectionBy: string;\r\n    rowHover: boolean;\r\n    loading: boolean;\r\n    loadingIcon: string;\r\n    showLoader: boolean;\r\n    scrollable: boolean;\r\n    scrollHeight: string;\r\n    virtualScroll: boolean;\r\n    virtualScrollDelay: number;\r\n    virtualRowHeight: number;\r\n    minBufferPx: number;\r\n    maxBufferPx: number;\r\n    frozenWidth: string;\r\n    frozenColumns: any[];\r\n    resizableColumns: boolean;\r\n    columnResizeMode: string;\r\n    reorderableColumns: boolean;\r\n    contextMenu: any;\r\n    rowTrackBy: Function;\r\n    filters: {\r\n        [s: string]: FilterMetadata;\r\n    };\r\n    globalFilterFields: string[];\r\n    filterDelay: number;\r\n    filterMode: string;\r\n    filterLocale: string;\r\n    onFilter: EventEmitter<any>;\r\n    onNodeExpand: EventEmitter<any>;\r\n    onNodeCollapse: EventEmitter<any>;\r\n    onPage: EventEmitter<any>;\r\n    onSort: EventEmitter<any>;\r\n    onLazyLoad: EventEmitter<any>;\r\n    sortFunction: EventEmitter<any>;\r\n    onColResize: EventEmitter<any>;\r\n    onColReorder: EventEmitter<any>;\r\n    onNodeSelect: EventEmitter<any>;\r\n    onNodeUnselect: EventEmitter<any>;\r\n    onContextMenuSelect: EventEmitter<any>;\r\n    onHeaderCheckboxToggle: EventEmitter<any>;\r\n    onEditInit: EventEmitter<any>;\r\n    onEditComplete: EventEmitter<any>;\r\n    onEditCancel: EventEmitter<any>;\r\n    containerViewChild: ElementRef;\r\n    resizeHelperViewChild: ElementRef;\r\n    reorderIndicatorUpViewChild: ElementRef;\r\n    reorderIndicatorDownViewChild: ElementRef;\r\n    tableViewChild: ElementRef;\r\n    scrollableViewChild: any;\r\n    scrollableFrozenViewChild: any;\r\n    templates: QueryList<PrimeTemplate>;\r\n    _value: TreeNode[];\r\n    serializedValue: any[];\r\n    _totalRecords: number;\r\n    _multiSortMeta: SortMeta[];\r\n    _sortField: string;\r\n    _sortOrder: number;\r\n    filteredNodes: any[];\r\n    filterTimeout: any;\r\n    colGroupTemplate: TemplateRef<any>;\r\n    captionTemplate: TemplateRef<any>;\r\n    headerTemplate: TemplateRef<any>;\r\n    bodyTemplate: TemplateRef<any>;\r\n    loadingBodyTemplate: TemplateRef<any>;\r\n    footerTemplate: TemplateRef<any>;\r\n    summaryTemplate: TemplateRef<any>;\r\n    emptyMessageTemplate: TemplateRef<any>;\r\n    paginatorLeftTemplate: TemplateRef<any>;\r\n    paginatorRightTemplate: TemplateRef<any>;\r\n    paginatorDropdownItemTemplate: TemplateRef<any>;\r\n    frozenHeaderTemplate: TemplateRef<any>;\r\n    frozenBodyTemplate: TemplateRef<any>;\r\n    frozenFooterTemplate: TemplateRef<any>;\r\n    frozenColGroupTemplate: TemplateRef<any>;\r\n    lastResizerHelperX: number;\r\n    reorderIconWidth: number;\r\n    reorderIconHeight: number;\r\n    draggedColumn: any;\r\n    dropPosition: number;\r\n    preventSelectionSetterPropagation: boolean;\r\n    _selection: any;\r\n    selectionKeys: any;\r\n    rowTouched: boolean;\r\n    editingCell: Element;\r\n    editingCellData: any;\r\n    editingCellField: any;\r\n    editingCellClick: boolean;\r\n    documentEditListener: any;\r\n    initialized: boolean;\r\n    toggleRowIndex: number;\r\n    ngOnInit(): void;\r\n    ngAfterContentInit(): void;\r\n    constructor(el: ElementRef, zone: NgZone, tableService: TreeTableService);\r\n    ngOnChanges(simpleChange: SimpleChanges): void;\r\n    value: any[];\r\n    updateSerializedValue(): void;\r\n    serializeNodes(parent: any, nodes: any, level: any, visible: any): void;\r\n    serializePageNodes(): void;\r\n    totalRecords: number;\r\n    sortField: string;\r\n    sortOrder: number;\r\n    multiSortMeta: SortMeta[];\r\n    selection: any;\r\n    updateSelectionKeys(): void;\r\n    onPageChange(event: any): void;\r\n    sort(event: any): void;\r\n    sortSingle(): void;\r\n    sortNodes(nodes: any): void;\r\n    sortMultiple(): void;\r\n    sortMultipleNodes(nodes: any): void;\r\n    multisortField(node1: any, node2: any, multiSortMeta: any, index: any): any;\r\n    getSortMeta(field: string): SortMeta;\r\n    isSorted(field: string): boolean;\r\n    createLazyLoadMetadata(): any;\r\n    resetScrollTop(): void;\r\n    scrollToVirtualIndex(index: number): void;\r\n    scrollTo(options: any): void;\r\n    isEmpty(): boolean;\r\n    getBlockableElement(): HTMLElement;\r\n    onColumnResizeBegin(event: any): void;\r\n    onColumnResize(event: any): void;\r\n    onColumnResizeEnd(event: any, column: any): void;\r\n    findParentScrollableView(column: any): any;\r\n    resizeColGroup(table: any, resizeColumnIndex: any, newColumnWidth: any, nextColumnWidth: any): void;\r\n    onColumnDragStart(event: any, columnElement: any): void;\r\n    onColumnDragEnter(event: any, dropHeader: any): void;\r\n    onColumnDragLeave(event: any): void;\r\n    onColumnDrop(event: any, dropColumn: any): void;\r\n    handleRowClick(event: any): void;\r\n    handleRowTouchEnd(event: any): void;\r\n    handleRowRightClick(event: any): void;\r\n    toggleNodeWithCheckbox(event: any): void;\r\n    toggleNodesWithCheckbox(event: Event, check: boolean): void;\r\n    propagateSelectionUp(node: TreeNode, select: boolean): void;\r\n    propagateSelectionDown(node: TreeNode, select: boolean): void;\r\n    isSelected(node: any): boolean;\r\n    findIndexInSelection(node: any): number;\r\n    isSingleSelectionMode(): boolean;\r\n    isMultipleSelectionMode(): boolean;\r\n    equals(node1: any, node2: any): boolean;\r\n    filter(value: any, field: any, matchMode: any): void;\r\n    filterGlobal(value: any, matchMode: any): void;\r\n    isFilterBlank(filter: any): boolean;\r\n    _filter(): void;\r\n    findFilteredNodes(node: any, paramsWithoutNode: any): boolean;\r\n    isFilterMatched(node: any, { filterField, filterValue, filterConstraint, isStrictMode }: {\r\n        filterField: any;\r\n        filterValue: any;\r\n        filterConstraint: any;\r\n        isStrictMode: any;\r\n    }): boolean;\r\n    isNodeLeaf(node: any): boolean;\r\n    hasFilter(): boolean;\r\n    reset(): void;\r\n    updateEditingCell(cell: any, data: any, field: any): void;\r\n    isEditingCellValid(): boolean;\r\n    bindDocumentEditListener(): void;\r\n    unbindDocumentEditListener(): void;\r\n    ngOnDestroy(): void;\r\n}\r\nexport declare class TTBody {\r\n    tt: TreeTable;\r\n    treeTableService: TreeTableService;\r\n    cd: ChangeDetectorRef;\r\n    columns: any[];\r\n    template: TemplateRef<any>;\r\n    frozen: boolean;\r\n    subscription: Subscription;\r\n    constructor(tt: TreeTable, treeTableService: TreeTableService, cd: ChangeDetectorRef);\r\n    ngOnDestroy(): void;\r\n}\r\nexport declare class TTScrollableView implements AfterViewInit, OnDestroy, AfterViewChecked {\r\n    tt: TreeTable;\r\n    el: ElementRef;\r\n    zone: NgZone;\r\n    columns: any[];\r\n    frozen: boolean;\r\n    scrollHeaderViewChild: ElementRef;\r\n    scrollHeaderBoxViewChild: ElementRef;\r\n    scrollBodyViewChild: ElementRef;\r\n    scrollTableViewChild: ElementRef;\r\n    scrollLoadingTableViewChild: ElementRef;\r\n    scrollFooterViewChild: ElementRef;\r\n    scrollFooterBoxViewChild: ElementRef;\r\n    scrollableAlignerViewChild: ElementRef;\r\n    virtualScrollBody: CdkVirtualScrollViewport;\r\n    headerScrollListener: any;\r\n    bodyScrollListener: any;\r\n    footerScrollListener: any;\r\n    frozenSiblingBody: Element;\r\n    subscription: Subscription;\r\n    totalRecordsSubscription: Subscription;\r\n    initialized: boolean;\r\n    _scrollHeight: string;\r\n    preventBodyScrollPropagation: boolean;\r\n    scrollHeight: string;\r\n    constructor(tt: TreeTable, el: ElementRef, zone: NgZone);\r\n    ngAfterViewChecked(): void;\r\n    ngAfterViewInit(): void;\r\n    bindEvents(): void;\r\n    unbindEvents(): void;\r\n    onHeaderScroll(): void;\r\n    onFooterScroll(): void;\r\n    onBodyScroll(event: any): void;\r\n    scrollToVirtualIndex(index: number): void;\r\n    scrollTo(options: any): void;\r\n    hasVerticalOverflow(): boolean;\r\n    alignScrollBar(): void;\r\n    ngOnDestroy(): void;\r\n}\r\nexport declare class TTSortableColumn implements OnInit, OnDestroy {\r\n    tt: TreeTable;\r\n    field: string;\r\n    ttSortableColumnDisabled: boolean;\r\n    sorted: boolean;\r\n    subscription: Subscription;\r\n    constructor(tt: TreeTable);\r\n    ngOnInit(): void;\r\n    updateSortState(): void;\r\n    onClick(event: MouseEvent): void;\r\n    onEnterKey(event: MouseEvent): void;\r\n    isEnabled(): boolean;\r\n    ngOnDestroy(): void;\r\n}\r\nexport declare class TTSortIcon implements OnInit, OnDestroy {\r\n    tt: TreeTable;\r\n    field: string;\r\n    ariaLabelDesc: string;\r\n    ariaLabelAsc: string;\r\n    subscription: Subscription;\r\n    sortOrder: number;\r\n    constructor(tt: TreeTable);\r\n    ngOnInit(): void;\r\n    onClick(event: any): void;\r\n    updateSortState(): void;\r\n    ngOnDestroy(): void;\r\n}\r\nexport declare class TTResizableColumn implements AfterViewInit, OnDestroy {\r\n    tt: TreeTable;\r\n    el: ElementRef;\r\n    zone: NgZone;\r\n    ttResizableColumnDisabled: boolean;\r\n    resizer: HTMLSpanElement;\r\n    resizerMouseDownListener: any;\r\n    documentMouseMoveListener: any;\r\n    documentMouseUpListener: any;\r\n    constructor(tt: TreeTable, el: ElementRef, zone: NgZone);\r\n    ngAfterViewInit(): void;\r\n    bindDocumentEvents(): void;\r\n    unbindDocumentEvents(): void;\r\n    onMouseDown(event: Event): void;\r\n    onDocumentMouseMove(event: Event): void;\r\n    onDocumentMouseUp(event: Event): void;\r\n    isEnabled(): boolean;\r\n    ngOnDestroy(): void;\r\n}\r\nexport declare class TTReorderableColumn implements AfterViewInit, OnDestroy {\r\n    tt: TreeTable;\r\n    el: ElementRef;\r\n    zone: NgZone;\r\n    ttReorderableColumnDisabled: boolean;\r\n    dragStartListener: any;\r\n    dragOverListener: any;\r\n    dragEnterListener: any;\r\n    dragLeaveListener: any;\r\n    mouseDownListener: any;\r\n    constructor(tt: TreeTable, el: ElementRef, zone: NgZone);\r\n    ngAfterViewInit(): void;\r\n    bindEvents(): void;\r\n    unbindEvents(): void;\r\n    onMouseDown(event: any): void;\r\n    onDragStart(event: any): void;\r\n    onDragOver(event: any): void;\r\n    onDragEnter(event: any): void;\r\n    onDragLeave(event: any): void;\r\n    onDrop(event: any): void;\r\n    isEnabled(): boolean;\r\n    ngOnDestroy(): void;\r\n}\r\nexport declare class TTSelectableRow implements OnInit, OnDestroy {\r\n    tt: TreeTable;\r\n    tableService: TreeTableService;\r\n    rowNode: any;\r\n    ttSelectableRowDisabled: boolean;\r\n    selected: boolean;\r\n    subscription: Subscription;\r\n    constructor(tt: TreeTable, tableService: TreeTableService);\r\n    ngOnInit(): void;\r\n    onClick(event: Event): void;\r\n    onEnterKey(event: KeyboardEvent): void;\r\n    onTouchEnd(event: Event): void;\r\n    isEnabled(): boolean;\r\n    ngOnDestroy(): void;\r\n}\r\nexport declare class TTSelectableRowDblClick implements OnInit, OnDestroy {\r\n    tt: TreeTable;\r\n    tableService: TreeTableService;\r\n    rowNode: any;\r\n    ttSelectableRowDisabled: boolean;\r\n    selected: boolean;\r\n    subscription: Subscription;\r\n    constructor(tt: TreeTable, tableService: TreeTableService);\r\n    ngOnInit(): void;\r\n    onClick(event: Event): void;\r\n    isEnabled(): boolean;\r\n    ngOnDestroy(): void;\r\n}\r\nexport declare class TTContextMenuRow {\r\n    tt: TreeTable;\r\n    tableService: TreeTableService;\r\n    private el;\r\n    rowNode: any;\r\n    ttContextMenuRowDisabled: boolean;\r\n    selected: boolean;\r\n    subscription: Subscription;\r\n    constructor(tt: TreeTable, tableService: TreeTableService, el: ElementRef);\r\n    onContextMenu(event: Event): void;\r\n    isEnabled(): boolean;\r\n    ngOnDestroy(): void;\r\n}\r\nexport declare class TTCheckbox {\r\n    tt: TreeTable;\r\n    tableService: TreeTableService;\r\n    disabled: boolean;\r\n    rowNode: any;\r\n    boxViewChild: ElementRef;\r\n    checked: boolean;\r\n    subscription: Subscription;\r\n    constructor(tt: TreeTable, tableService: TreeTableService);\r\n    ngOnInit(): void;\r\n    onClick(event: Event): void;\r\n    onFocus(): void;\r\n    onBlur(): void;\r\n    ngOnDestroy(): void;\r\n}\r\nexport declare class TTHeaderCheckbox {\r\n    tt: TreeTable;\r\n    tableService: TreeTableService;\r\n    boxViewChild: ElementRef;\r\n    checked: boolean;\r\n    disabled: boolean;\r\n    selectionChangeSubscription: Subscription;\r\n    valueChangeSubscription: Subscription;\r\n    constructor(tt: TreeTable, tableService: TreeTableService);\r\n    ngOnInit(): void;\r\n    onClick(event: Event, checked: any): void;\r\n    onFocus(): void;\r\n    onBlur(): void;\r\n    ngOnDestroy(): void;\r\n    updateCheckedState(): boolean;\r\n}\r\nexport declare class TTEditableColumn implements AfterViewInit {\r\n    tt: TreeTable;\r\n    el: ElementRef;\r\n    zone: NgZone;\r\n    data: any;\r\n    field: any;\r\n    ttEditableColumnDisabled: boolean;\r\n    constructor(tt: TreeTable, el: ElementRef, zone: NgZone);\r\n    ngAfterViewInit(): void;\r\n    onClick(event: MouseEvent): void;\r\n    openCell(): void;\r\n    closeEditingCell(): void;\r\n    onKeyDown(event: KeyboardEvent): void;\r\n    findCell(element: any): any;\r\n    moveToPreviousCell(event: KeyboardEvent): void;\r\n    moveToNextCell(event: KeyboardEvent): void;\r\n    findPreviousEditableColumn(cell: Element): any;\r\n    findNextEditableColumn(cell: Element): any;\r\n    isEnabled(): boolean;\r\n}\r\nexport declare class TreeTableCellEditor implements AfterContentInit {\r\n    tt: TreeTable;\r\n    editableColumn: TTEditableColumn;\r\n    templates: QueryList<PrimeTemplate>;\r\n    inputTemplate: TemplateRef<any>;\r\n    outputTemplate: TemplateRef<any>;\r\n    constructor(tt: TreeTable, editableColumn: TTEditableColumn);\r\n    ngAfterContentInit(): void;\r\n}\r\nexport declare class TTRow {\r\n    tt: TreeTable;\r\n    el: ElementRef;\r\n    zone: NgZone;\r\n    rowNode: any;\r\n    constructor(tt: TreeTable, el: ElementRef, zone: NgZone);\r\n    onKeyDown(event: KeyboardEvent): void;\r\n    restoreFocus(): void;\r\n}\r\nexport declare class TreeTableToggler {\r\n    tt: TreeTable;\r\n    rowNode: any;\r\n    constructor(tt: TreeTable);\r\n    onClick(event: Event): void;\r\n}\r\nexport declare class TreeTableModule {\r\n}\r\n"]}