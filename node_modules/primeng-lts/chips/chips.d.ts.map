{"version":3,"file":"chips.d.ts","sources":["chips.d.ts"],"names":[],"mappings":"AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef, EventEmitter, AfterContentInit, QueryList, TemplateRef } from '@angular/core';\r\nimport { ControlValueAccessor } from '@angular/forms';\r\nexport declare const CHIPS_VALUE_ACCESSOR: any;\r\nexport declare class Chips implements AfterContentInit, ControlValueAccessor {\r\n    el: ElementRef;\r\n    style: any;\r\n    styleClass: string;\r\n    disabled: boolean;\r\n    field: string;\r\n    placeholder: string;\r\n    max: number;\r\n    ariaLabelledBy: string;\r\n    tabindex: number;\r\n    inputId: string;\r\n    allowDuplicate: boolean;\r\n    inputStyle: any;\r\n    inputStyleClass: any;\r\n    addOnTab: boolean;\r\n    addOnBlur: boolean;\r\n    separator: string;\r\n    onAdd: EventEmitter<any>;\r\n    onRemove: EventEmitter<any>;\r\n    onFocus: EventEmitter<any>;\r\n    onBlur: EventEmitter<any>;\r\n    onChipClick: EventEmitter<any>;\r\n    inputViewChild: ElementRef;\r\n    templates: QueryList<any>;\r\n    itemTemplate: TemplateRef<any>;\r\n    value: any;\r\n    onModelChange: Function;\r\n    onModelTouched: Function;\r\n    valueChanged: boolean;\r\n    focus: boolean;\r\n    filled: boolean;\r\n    constructor(el: ElementRef);\r\n    ngAfterContentInit(): void;\r\n    onClick(): void;\r\n    onInput(): void;\r\n    onPaste(event: any): void;\r\n    updateFilledState(): void;\r\n    onItemClick(event: Event, item: any): void;\r\n    writeValue(value: any): void;\r\n    registerOnChange(fn: Function): void;\r\n    registerOnTouched(fn: Function): void;\r\n    setDisabledState(val: boolean): void;\r\n    resolveFieldData(data: any, field: string): any;\r\n    onInputFocus(event: FocusEvent): void;\r\n    onInputBlur(event: FocusEvent): void;\r\n    removeItem(event: Event, index: number): void;\r\n    addItem(event: Event, item: string, preventDefault: boolean): void;\r\n    onKeydown(event: KeyboardEvent): void;\r\n    updateMaxedOut(): void;\r\n}\r\nexport declare class ChipsModule {\r\n}\r\n"]}