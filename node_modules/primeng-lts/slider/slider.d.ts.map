{"version":3,"file":"slider.d.ts","sources":["slider.d.ts"],"names":[],"mappings":"AAAA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef, OnDestroy, EventEmitter, Renderer2, NgZone, ChangeDetectorRef } from '@angular/core';\r\nimport { ControlValueAccessor } from '@angular/forms';\r\nexport declare const SLIDER_VALUE_ACCESSOR: any;\r\nexport declare class Slider implements OnDestroy, ControlValueAccessor {\r\n    el: ElementRef;\r\n    renderer: Renderer2;\r\n    private ngZone;\r\n    cd: ChangeDetectorRef;\r\n    animate: boolean;\r\n    disabled: boolean;\r\n    min: number;\r\n    max: number;\r\n    orientation: string;\r\n    step: number;\r\n    range: boolean;\r\n    style: any;\r\n    styleClass: string;\r\n    ariaLabelledBy: string;\r\n    tabindex: number;\r\n    onChange: EventEmitter<any>;\r\n    onSlideEnd: EventEmitter<any>;\r\n    sliderHandle: ElementRef;\r\n    sliderHandleStart: ElementRef;\r\n    sliderHandleEnd: ElementRef;\r\n    value: number;\r\n    values: number[];\r\n    handleValue: number;\r\n    handleValues: number[];\r\n    onModelChange: Function;\r\n    onModelTouched: Function;\r\n    dragging: boolean;\r\n    dragListener: any;\r\n    mouseupListener: any;\r\n    initX: number;\r\n    initY: number;\r\n    barWidth: number;\r\n    barHeight: number;\r\n    sliderHandleClick: boolean;\r\n    handleIndex: number;\r\n    startHandleValue: any;\r\n    startx: number;\r\n    starty: number;\r\n    constructor(el: ElementRef, renderer: Renderer2, ngZone: NgZone, cd: ChangeDetectorRef);\r\n    onMouseDown(event: any, index?: number): void;\r\n    onTouchStart(event: any, index?: number): void;\r\n    onTouchMove(event: any, index?: number): void;\r\n    onTouchEnd(event: any, index?: number): void;\r\n    onBarClick(event: any): void;\r\n    onHandleKeydown(event: any, handleIndex?: number): void;\r\n    spin(event: any, dir: number, handleIndex?: number): void;\r\n    handleChange(event: Event): void;\r\n    bindDragListeners(): void;\r\n    unbindDragListeners(): void;\r\n    setValueFromHandle(event: Event, handleValue: any): void;\r\n    handleStepChange(newValue: number, oldValue: number): void;\r\n    writeValue(value: any): void;\r\n    registerOnChange(fn: Function): void;\r\n    registerOnTouched(fn: Function): void;\r\n    setDisabledState(val: boolean): void;\r\n    readonly rangeStartLeft: string;\r\n    readonly rangeStartBottom: string;\r\n    readonly rangeEndLeft: string;\r\n    readonly rangeEndBottom: string;\r\n    isVertical(): boolean;\r\n    updateDomData(): void;\r\n    calculateHandleValue(event: any): number;\r\n    updateHandleValue(): void;\r\n    updateValue(val: number, event?: Event): void;\r\n    getValueFromHandle(handleValue: number): number;\r\n    getDecimalsCount(value: number): number;\r\n    getNormalizedValue(val: number): number;\r\n    ngOnDestroy(): void;\r\n}\r\nexport declare class SliderModule {\r\n}\r\n"]}