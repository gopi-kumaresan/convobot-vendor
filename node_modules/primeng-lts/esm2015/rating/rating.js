import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';

function Rating_a_1_Template(rf, ctx) { if (rf & 1) {
    const _r3 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "a", 3);
    ɵngcc0.ɵɵlistener("click", function Rating_a_1_Template_a_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r3); const ctx_r2 = ɵngcc0.ɵɵnextContext(); return ctx_r2.clear($event); })("keydown.enter", function Rating_a_1_Template_a_keydown_enter_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r3); const ctx_r4 = ɵngcc0.ɵɵnextContext(); return ctx_r4.clear($event); });
    ɵngcc0.ɵɵelement(1, "span", 4);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵattribute("tabindex", ctx_r0.disabled ? null : "0");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngClass", ctx_r0.iconCancelClass)("ngStyle", ctx_r0.iconCancelStyle);
} }
function Rating_a_2_Template(rf, ctx) { if (rf & 1) {
    const _r8 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "a", 5);
    ɵngcc0.ɵɵlistener("click", function Rating_a_2_Template_a_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r8); const i_r6 = ctx.index; const ctx_r7 = ɵngcc0.ɵɵnextContext(); return ctx_r7.rate($event, i_r6); })("keydown.enter", function Rating_a_2_Template_a_keydown_enter_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r8); const i_r6 = ctx.index; const ctx_r9 = ɵngcc0.ɵɵnextContext(); return ctx_r9.rate($event, i_r6); });
    ɵngcc0.ɵɵelement(1, "span", 4);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const i_r6 = ctx.index;
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵattribute("tabindex", ctx_r1.disabled ? null : "0");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngClass", !ctx_r1.value || i_r6 >= ctx_r1.value ? ctx_r1.iconOffClass : ctx_r1.iconOnClass)("ngStyle", !ctx_r1.value || i_r6 >= ctx_r1.value ? ctx_r1.iconOffStyle : ctx_r1.iconOnStyle);
} }
const _c0 = function (a0) { return { "ui-state-disabled": a0 }; };
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import { NgModule, Component, OnInit, Input, Output, EventEmitter, forwardRef, ChangeDetectorRef, ChangeDetectionStrategy } from '@angular/core';
import { CommonModule } from '@angular/common';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
export const RATING_VALUE_ACCESSOR = {
    provide: NG_VALUE_ACCESSOR,
    useExisting: forwardRef(() => Rating),
    multi: true
};
let Rating = class Rating {
    constructor(cd) {
        this.cd = cd;
        this.stars = 5;
        this.cancel = true;
        this.iconOnClass = 'pi pi-star';
        this.iconOffClass = 'pi pi-star-o';
        this.iconCancelClass = 'pi pi-ban';
        this.onRate = new EventEmitter();
        this.onCancel = new EventEmitter();
        this.onModelChange = () => { };
        this.onModelTouched = () => { };
    }
    ngOnInit() {
        this.starsArray = [];
        for (let i = 0; i < this.stars; i++) {
            this.starsArray[i] = i;
        }
    }
    rate(event, i) {
        if (!this.readonly && !this.disabled) {
            this.value = (i + 1);
            this.onModelChange(this.value);
            this.onModelTouched();
            this.onRate.emit({
                originalEvent: event,
                value: (i + 1)
            });
        }
        event.preventDefault();
    }
    clear(event) {
        if (!this.readonly && !this.disabled) {
            this.value = null;
            this.onModelChange(this.value);
            this.onModelTouched();
            this.onCancel.emit(event);
        }
        event.preventDefault();
    }
    writeValue(value) {
        this.value = value;
        this.cd.detectChanges();
    }
    registerOnChange(fn) {
        this.onModelChange = fn;
    }
    registerOnTouched(fn) {
        this.onModelTouched = fn;
    }
    setDisabledState(val) {
        this.disabled = val;
    }
};
Rating.ɵfac = function Rating_Factory(t) { return new (t || Rating)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };
Rating.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: Rating, selectors: [["p-rating"]], inputs: { stars: "stars", cancel: "cancel", iconOnClass: "iconOnClass", iconOffClass: "iconOffClass", iconCancelClass: "iconCancelClass", disabled: "disabled", readonly: "readonly", iconOnStyle: "iconOnStyle", iconOffStyle: "iconOffStyle", iconCancelStyle: "iconCancelStyle" }, outputs: { onRate: "onRate", onCancel: "onCancel" }, features: [ɵngcc0.ɵɵProvidersFeature([RATING_VALUE_ACCESSOR])], decls: 3, vars: 5, consts: [[1, "ui-rating", 3, "ngClass"], ["class", "ui-rating-cancel", 3, "click", "keydown.enter", 4, "ngIf"], [3, "click", "keydown.enter", 4, "ngFor", "ngForOf"], [1, "ui-rating-cancel", 3, "click", "keydown.enter"], [1, "ui-rating-icon", 3, "ngClass", "ngStyle"], [3, "click", "keydown.enter"]], template: function Rating_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵtemplate(1, Rating_a_1_Template, 2, 3, "a", 1);
        ɵngcc0.ɵɵtemplate(2, Rating_a_2_Template, 2, 3, "a", 2);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(3, _c0, ctx.disabled));
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.cancel);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.starsArray);
    } }, directives: [ɵngcc1.NgClass, ɵngcc1.NgIf, ɵngcc1.NgForOf, ɵngcc1.NgStyle], encapsulation: 2 });
Rating.ctorParameters = () => [
    { type: ChangeDetectorRef }
];
__decorate([
    Input()
], Rating.prototype, "disabled", void 0);
__decorate([
    Input()
], Rating.prototype, "readonly", void 0);
__decorate([
    Input()
], Rating.prototype, "stars", void 0);
__decorate([
    Input()
], Rating.prototype, "cancel", void 0);
__decorate([
    Input()
], Rating.prototype, "iconOnClass", void 0);
__decorate([
    Input()
], Rating.prototype, "iconOnStyle", void 0);
__decorate([
    Input()
], Rating.prototype, "iconOffClass", void 0);
__decorate([
    Input()
], Rating.prototype, "iconOffStyle", void 0);
__decorate([
    Input()
], Rating.prototype, "iconCancelClass", void 0);
__decorate([
    Input()
], Rating.prototype, "iconCancelStyle", void 0);
__decorate([
    Output()
], Rating.prototype, "onRate", void 0);
__decorate([
    Output()
], Rating.prototype, "onCancel", void 0);
export { Rating };
let RatingModule = class RatingModule {
};
RatingModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: RatingModule });
RatingModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function RatingModule_Factory(t) { return new (t || RatingModule)(); }, imports: [[CommonModule]] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(Rating, [{
        type: Component,
        args: [{
                selector: 'p-rating',
                template: `
        <div class="ui-rating" [ngClass]="{'ui-state-disabled': disabled}">
            <a [attr.tabindex]="disabled ? null : '0'" *ngIf="cancel" (click)="clear($event)" (keydown.enter)="clear($event)"  class="ui-rating-cancel">
                <span class="ui-rating-icon" [ngClass]="iconCancelClass" [ngStyle]="iconCancelStyle"></span>
            </a>
            <a [attr.tabindex]="disabled ? null : '0'" *ngFor="let star of starsArray;let i=index" (click)="rate($event,i)" (keydown.enter)="rate($event,i)">
                <span class="ui-rating-icon" 
                    [ngClass]="(!value || i >= value) ? iconOffClass : iconOnClass"
                    [ngStyle]="(!value || i >= value) ? iconOffStyle : iconOnStyle"
                ></span>
            </a>
        </div>
    `,
                providers: [RATING_VALUE_ACCESSOR],
                changeDetection: ChangeDetectionStrategy.Default
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }]; }, { stars: [{
            type: Input
        }], cancel: [{
            type: Input
        }], iconOnClass: [{
            type: Input
        }], iconOffClass: [{
            type: Input
        }], iconCancelClass: [{
            type: Input
        }], onRate: [{
            type: Output
        }], onCancel: [{
            type: Output
        }], disabled: [{
            type: Input
        }], readonly: [{
            type: Input
        }], iconOnStyle: [{
            type: Input
        }], iconOffStyle: [{
            type: Input
        }], iconCancelStyle: [{
            type: Input
        }] }); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(RatingModule, { declarations: function () { return [Rating]; }, imports: function () { return [CommonModule]; }, exports: function () { return [Rating]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(RatingModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule],
                exports: [Rating],
                declarations: [Rating]
            }]
    }], null, null); })();
export { RatingModule };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,