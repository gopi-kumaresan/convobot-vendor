import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';

const _c0 = ["*"];
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import { NgModule, Component, Input, ElementRef, ChangeDetectionStrategy } from '@angular/core';
import { CommonModule } from '@angular/common';
let Toolbar = class Toolbar {
    constructor(el) {
        this.el = el;
    }
    getBlockableElement() {
        return this.el.nativeElement.children[0];
    }
};
Toolbar.ɵfac = function Toolbar_Factory(t) { return new (t || Toolbar)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
Toolbar.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: Toolbar, selectors: [["p-toolbar"]], inputs: { style: "style", styleClass: "styleClass" }, ngContentSelectors: _c0, decls: 2, vars: 4, consts: [["role", "toolbar", 3, "ngClass", "ngStyle"]], template: function Toolbar_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵprojection(1);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵclassMap(ctx.styleClass);
        ɵngcc0.ɵɵproperty("ngClass", "ui-toolbar ui-widget ui-widget-header ui-corner-all ui-helper-clearfix")("ngStyle", ctx.style);
    } }, directives: [ɵngcc1.NgClass, ɵngcc1.NgStyle], encapsulation: 2 });
Toolbar.ctorParameters = () => [
    { type: ElementRef }
];
__decorate([
    Input()
], Toolbar.prototype, "style", void 0);
__decorate([
    Input()
], Toolbar.prototype, "styleClass", void 0);
export { Toolbar };
let ToolbarModule = class ToolbarModule {
};
ToolbarModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ToolbarModule });
ToolbarModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ToolbarModule_Factory(t) { return new (t || ToolbarModule)(); }, imports: [[CommonModule]] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(Toolbar, [{
        type: Component,
        args: [{
                selector: 'p-toolbar',
                template: `
        <div [ngClass]="'ui-toolbar ui-widget ui-widget-header ui-corner-all ui-helper-clearfix'" [ngStyle]="style" [class]="styleClass" role="toolbar">
            <ng-content></ng-content>
        </div>
    `,
                changeDetection: ChangeDetectionStrategy.Default
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { style: [{
            type: Input
        }], styleClass: [{
            type: Input
        }] }); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ToolbarModule, { declarations: function () { return [Toolbar]; }, imports: function () { return [CommonModule]; }, exports: function () { return [Toolbar]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ToolbarModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule],
                exports: [Toolbar],
                declarations: [Toolbar]
            }]
    }], null, null); })();
export { ToolbarModule };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9vbGJhci5qcyIsInNvdXJjZXMiOlsicHJpbWVuZy1sdHMvdG9vbGJhci90b29sYmFyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQSxPQUFPLEVBQUMsUUFBUSxFQUFDLFNBQVMsRUFBQyxLQUFLLEVBQUMsVUFBVSxFQUFDLHVCQUF1QixFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQzFGLE9BQU8sRUFBQyxZQUFZLEVBQUMsTUFBTSxpQkFBaUIsQ0FBQztBQVk3QyxJQUFhLE9BQU8sR0FBcEIsTUFBYSxPQUFPO0FBQUksSUFNcEIsWUFBb0IsRUFBYztBQUN0QyxRQUR3QixPQUFFLEdBQUYsRUFBRSxDQUFZO0FBQUUsSUFBQyxDQUFDO0FBRTFDLElBQUksbUJBQW1CO0FBQU0sUUFDdkIsT0FBTyxJQUFJLENBQUMsRUFBRSxDQUFDLGFBQWEsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDOUMsSUFBRyxDQUFDO0FBRUwsQ0FBQzs7Ozs7Ozs7OzsyRUFBQTtBQUVEO0FBQ3NCLFlBVE0sVUFBVTtBQUFJO0FBSjdCO0FBRVosSUFGSSxLQUFLLEVBQUU7QUFBRSxzQ0FBVTtBQUVYO0FBQWMsSUFBdEIsS0FBSyxFQUFFO0FBQUUsMkNBQWtCLENBU2hDO0FBYmEsT0FBTyxQQWNuQixTQWRZLE9BQU87T0FUbkIsU0FBUyxDQUFDLFdBQ1AsUUFBUSxFQUFFLHRDQTJCZCxJQUFhLGFBQWEsR0FBMUIsTUFBYSxhQUFhO0FBQUksQ0FBQSxDQUFBO0dBM0JMLFdBQ3JCLFFBQVEsRUFBRSx2QkEwQkQsYUFBYSxxQkFMekIsUUFBUSxDQUFDLFdBQ04sT0FBTyxFQUFFLENBQUM7TUFBWSxDQUFDLFdBQ3ZCLE9BQU8sRUFBRSxDQUFDLE9BQU8sQ0FBQyxXQUNsQixZQUFZLEVBQUUsQ0FBQyxPQUFPLENBQUMsT0FDMUIsQ0FBQyxLQUNXLGFBQWEsQ0FBSTtVQXRCekIsV0FDRCxlQUFlLEVBQUUsdUJBQXVCLENBQUM7R0FBTyxPQUNuRCxDQUFDLEtBQ1csT0FBTyxDQVluQjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7MEJBUUQ7O0FBakNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQVlBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQU1BLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBRUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUVBLEFBQUEsQUFOQSxBQUFBLEFBSkEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUVBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFKQSxBQUFBLEFBVEEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFJQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBWUEsQUFaQSxBQUFBLEFBbUJBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBTEEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge05nTW9kdWxlLENvbXBvbmVudCxJbnB1dCxFbGVtZW50UmVmLENoYW5nZURldGVjdGlvblN0cmF0ZWd5fSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7Q29tbW9uTW9kdWxlfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHtCbG9ja2FibGVVSX0gZnJvbSAncHJpbWVuZy1sdHMvYXBpJztcblxuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICdwLXRvb2xiYXInLFxuICAgIHRlbXBsYXRlOiBgXG4gICAgICAgIDxkaXYgW25nQ2xhc3NdPVwiJ3VpLXRvb2xiYXIgdWktd2lkZ2V0IHVpLXdpZGdldC1oZWFkZXIgdWktY29ybmVyLWFsbCB1aS1oZWxwZXItY2xlYXJmaXgnXCIgW25nU3R5bGVdPVwic3R5bGVcIiBbY2xhc3NdPVwic3R5bGVDbGFzc1wiIHJvbGU9XCJ0b29sYmFyXCI+XG4gICAgICAgICAgICA8bmctY29udGVudD48L25nLWNvbnRlbnQ+XG4gICAgICAgIDwvZGl2PlxuICAgIGAsXG4gICAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5EZWZhdWx0XG59KVxuZXhwb3J0IGNsYXNzIFRvb2xiYXIgaW1wbGVtZW50cyBCbG9ja2FibGVVSSB7XG5cbiAgICBASW5wdXQoKSBzdHlsZTogYW55O1xuXG4gICAgQElucHV0KCkgc3R5bGVDbGFzczogc3RyaW5nO1xuXG4gICAgY29uc3RydWN0b3IocHJpdmF0ZSBlbDogRWxlbWVudFJlZikge31cblxuICAgIGdldEJsb2NrYWJsZUVsZW1lbnQoKTogSFRNTEVsZW1lbnQge1xuICAgICAgcmV0dXJuIHRoaXMuZWwubmF0aXZlRWxlbWVudC5jaGlsZHJlblswXTtcbiAgICB9XG5cbn1cblxuQE5nTW9kdWxlKHtcbiAgICBpbXBvcnRzOiBbQ29tbW9uTW9kdWxlXSxcbiAgICBleHBvcnRzOiBbVG9vbGJhcl0sXG4gICAgZGVjbGFyYXRpb25zOiBbVG9vbGJhcl1cbn0pXG5leHBvcnQgY2xhc3MgVG9vbGJhck1vZHVsZSB7IH1cbiJdfQ==