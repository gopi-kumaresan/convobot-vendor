import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';

var _c0 = ["mask"];
var _c1 = function (a1) { return { "ui-galleria-mask ui-widget-overlay": true, "ui-galleria-visible": a1 }; };
var _c2 = function (a0) { return { "zIndex": a0 }; };
function Galleria_div_0_div_1_Template(rf, ctx) { if (rf & 1) {
    var _r6 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 3, 4);
    ɵngcc0.ɵɵelementStart(2, "p-galleriaContent", 5);
    ɵngcc0.ɵɵlistener("maskHide", function Galleria_div_0_div_1_Template_p_galleriaContent_maskHide_2_listener() { ɵngcc0.ɵɵrestoreView(_r6); var ctx_r5 = ɵngcc0.ɵɵnextContext(2); return ctx_r5.onMaskHide(); })("activeItemChange", function Galleria_div_0_div_1_Template_p_galleriaContent_activeItemChange_2_listener($event) { ɵngcc0.ɵɵrestoreView(_r6); var ctx_r7 = ɵngcc0.ɵɵnextContext(2); return ctx_r7.onActiveItemChange($event); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r3 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵclassMap(ctx_r3.maskClass);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(5, _c1, ctx_r3.visible))("ngStyle", ɵngcc0.ɵɵpureFunction1(7, _c2, ctx_r3.zIndex));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngStyle", ctx_r3.containerStyle);
} }
function Galleria_div_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵtemplate(1, Galleria_div_0_div_1_Template, 3, 9, "div", 2);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.visible);
} }
function Galleria_ng_template_1_Template(rf, ctx) { if (rf & 1) {
    var _r9 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "p-galleriaContent", 6);
    ɵngcc0.ɵɵlistener("activeItemChange", function Galleria_ng_template_1_Template_p_galleriaContent_activeItemChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r9); var ctx_r8 = ɵngcc0.ɵɵnextContext(); return ctx_r8.onActiveItemChange($event); });
    ɵngcc0.ɵɵelementEnd();
} }
function GalleriaContent_div_0_button_1_Template(rf, ctx) { if (rf & 1) {
    var _r6 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 8);
    ɵngcc0.ɵɵlistener("click", function GalleriaContent_div_0_button_1_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r6); var ctx_r5 = ɵngcc0.ɵɵnextContext(2); return ctx_r5.maskHide.emit(); });
    ɵngcc0.ɵɵelement(1, "span", 9);
    ɵngcc0.ɵɵelementEnd();
} }
function GalleriaContent_div_0_div_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 10);
    ɵngcc0.ɵɵelement(1, "p-galleriaItemSlot", 11);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r2 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("templates", ctx_r2.galleria.templates);
} }
function GalleriaContent_div_0_p_galleriaThumbnails_5_Template(rf, ctx) { if (rf & 1) {
    var _r8 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "p-galleriaThumbnails", 12);
    ɵngcc0.ɵɵlistener("onActiveIndexChange", function GalleriaContent_div_0_p_galleriaThumbnails_5_Template_p_galleriaThumbnails_onActiveIndexChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r8); var ctx_r7 = ɵngcc0.ɵɵnextContext(2); return ctx_r7.onActiveIndexChange($event); })("stopSlideShow", function GalleriaContent_div_0_p_galleriaThumbnails_5_Template_p_galleriaThumbnails_stopSlideShow_0_listener() { ɵngcc0.ɵɵrestoreView(_r8); var ctx_r9 = ɵngcc0.ɵɵnextContext(2); return ctx_r9.stopSlideShow(); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r3 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("containerId", ctx_r3.id)("value", ctx_r3.galleria.value)("activeIndex", ctx_r3.galleria.activeIndex)("templates", ctx_r3.galleria.templates)("numVisible", ctx_r3.galleria.numVisible)("responsiveOptions", ctx_r3.galleria.responsiveOptions)("circular", ctx_r3.galleria.circular)("isVertical", ctx_r3.isVertical())("contentHeight", ctx_r3.galleria.verticalThumbnailViewPortHeight)("showThumbnailNavigators", ctx_r3.galleria.showThumbnailNavigators)("slideShowActive", ctx_r3.slideShowActive);
} }
function GalleriaContent_div_0_div_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 13);
    ɵngcc0.ɵɵelement(1, "p-galleriaItemSlot", 14);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r4 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("templates", ctx_r4.galleria.templates);
} }
var _c3 = function (a1, a2, a3) { return { "ui-galleria ui-widget": true, "ui-galleria-fullscreen": a1, "ui-galleria-indicator-onitem": a2, "ui-galleria-item-nav-onhover": a3 }; };
var _c4 = function () { return {}; };
function GalleriaContent_div_0_Template(rf, ctx) { if (rf & 1) {
    var _r11 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 1);
    ɵngcc0.ɵɵtemplate(1, GalleriaContent_div_0_button_1_Template, 2, 0, "button", 2);
    ɵngcc0.ɵɵtemplate(2, GalleriaContent_div_0_div_2_Template, 2, 1, "div", 3);
    ɵngcc0.ɵɵelementStart(3, "div", 4);
    ɵngcc0.ɵɵelementStart(4, "p-galleriaItem", 5);
    ɵngcc0.ɵɵlistener("onActiveIndexChange", function GalleriaContent_div_0_Template_p_galleriaItem_onActiveIndexChange_4_listener($event) { ɵngcc0.ɵɵrestoreView(_r11); var ctx_r10 = ɵngcc0.ɵɵnextContext(); return ctx_r10.onActiveIndexChange($event); })("startSlideShow", function GalleriaContent_div_0_Template_p_galleriaItem_startSlideShow_4_listener() { ɵngcc0.ɵɵrestoreView(_r11); var ctx_r12 = ɵngcc0.ɵɵnextContext(); return ctx_r12.startSlideShow(); })("stopSlideShow", function GalleriaContent_div_0_Template_p_galleriaItem_stopSlideShow_4_listener() { ɵngcc0.ɵɵrestoreView(_r11); var ctx_r13 = ɵngcc0.ɵɵnextContext(); return ctx_r13.stopSlideShow(); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(5, GalleriaContent_div_0_p_galleriaThumbnails_5_Template, 1, 11, "p-galleriaThumbnails", 6);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(6, GalleriaContent_div_0_div_6_Template, 2, 1, "div", 7);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassMap(ctx_r0.galleriaClass());
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction3(20, _c3, ctx_r0.galleria.fullScreen, ctx_r0.galleria.showIndicatorsOnItem, ctx_r0.galleria.showItemNavigatorsOnHover && !ctx_r0.galleria.fullScreen))("ngStyle", !ctx_r0.galleria.fullScreen ? ctx_r0.galleria.containerStyle : ɵngcc0.ɵɵpureFunction0(24, _c4));
    ɵngcc0.ɵɵattribute("id", ctx_r0.id);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.galleria.fullScreen);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.galleria.templates && ctx_r0.galleria.headerFacet);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("value", ctx_r0.galleria.value)("activeIndex", ctx_r0.galleria.activeIndex)("circular", ctx_r0.galleria.circular)("templates", ctx_r0.galleria.templates)("showIndicators", ctx_r0.galleria.showIndicators)("changeItemOnIndicatorHover", ctx_r0.galleria.changeItemOnIndicatorHover)("indicatorFacet", ctx_r0.galleria.indicatorFacet)("captionFacet", ctx_r0.galleria.captionFacet)("showItemNavigators", ctx_r0.galleria.showItemNavigators)("autoPlay", ctx_r0.galleria.autoPlay)("slideShowActive", ctx_r0.slideShowActive);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.galleria.showThumbnails);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.galleria.templates && ctx_r0.galleria.footerFacet);
} }
function GalleriaItemSlot_ng_container_0_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function GalleriaItemSlot_ng_container_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, GalleriaItemSlot_ng_container_0_ng_container_1_Template, 1, 0, "ng-container", 1);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r0.contentTemplate)("ngTemplateOutletContext", ctx_r0.context);
} }
var _c5 = function (a1) { return { "ui-galleria-item-prev ui-galleria-item-nav ui-link": true, "ui-state-disabled": a1 }; };
function GalleriaItem_button_1_Template(rf, ctx) { if (rf & 1) {
    var _r5 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 5);
    ɵngcc0.ɵɵlistener("click", function GalleriaItem_button_1_Template_button_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r5); var ctx_r4 = ɵngcc0.ɵɵnextContext(); return ctx_r4.navBackward($event); });
    ɵngcc0.ɵɵelement(1, "span", 6);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(2, _c5, ctx_r0.isNavBackwardDisabled()))("disabled", ctx_r0.isNavBackwardDisabled());
} }
var _c6 = function (a1) { return { "ui-galleria-item-next ui-galleria-item-nav ui-link": true, "ui-state-disabled": a1 }; };
function GalleriaItem_button_3_Template(rf, ctx) { if (rf & 1) {
    var _r7 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 5);
    ɵngcc0.ɵɵlistener("click", function GalleriaItem_button_3_Template_button_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r7); var ctx_r6 = ɵngcc0.ɵɵnextContext(); return ctx_r6.navForward($event); });
    ɵngcc0.ɵɵelement(1, "span", 7);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(2, _c6, ctx_r1.isNavForwardDisabled()))("disabled", ctx_r1.isNavForwardDisabled());
} }
function GalleriaItem_div_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 8);
    ɵngcc0.ɵɵelement(1, "p-galleriaItemSlot", 9);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("item", ctx_r2.activeItem)("templates", ctx_r2.templates);
} }
function GalleriaItem_ul_5_li_1_button_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "button", 15);
} }
var _c7 = function (a1) { return { "ui-galleria-indicator": true, "ui-state-highlight": a1 }; };
function GalleriaItem_ul_5_li_1_Template(rf, ctx) { if (rf & 1) {
    var _r13 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "li", 12);
    ɵngcc0.ɵɵlistener("click", function GalleriaItem_ul_5_li_1_Template_li_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r13); var index_r10 = ctx.index; var ctx_r12 = ɵngcc0.ɵɵnextContext(2); return ctx_r12.onIndicatorClick(index_r10); })("mouseenter", function GalleriaItem_ul_5_li_1_Template_li_mouseenter_0_listener() { ɵngcc0.ɵɵrestoreView(_r13); var index_r10 = ctx.index; var ctx_r14 = ɵngcc0.ɵɵnextContext(2); return ctx_r14.onIndicatorMouseEnter(index_r10); })("keydown.enter", function GalleriaItem_ul_5_li_1_Template_li_keydown_enter_0_listener() { ɵngcc0.ɵɵrestoreView(_r13); var index_r10 = ctx.index; var ctx_r15 = ɵngcc0.ɵɵnextContext(2); return ctx_r15.onIndicatorKeyDown(index_r10); });
    ɵngcc0.ɵɵtemplate(1, GalleriaItem_ul_5_li_1_button_1_Template, 1, 0, "button", 13);
    ɵngcc0.ɵɵelement(2, "p-galleriaItemSlot", 14);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var index_r10 = ctx.index;
    var ctx_r8 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(4, _c7, ctx_r8.isIndicatorItemActive(index_r10)));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r8.indicatorFacet);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("index", index_r10)("templates", ctx_r8.templates);
} }
function GalleriaItem_ul_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "ul", 10);
    ɵngcc0.ɵɵtemplate(1, GalleriaItem_ul_5_li_1_Template, 3, 6, "li", 11);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r3 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r3.value);
} }
var _c8 = ["itemsContainer"];
var _c9 = function (a1) { return { "ui-galleria-thumbnail-prev ui-link": true, "ui-state-disabled": a1 }; };
var _c10 = function (a1, a2) { return { "ui-galleria-thumbnail-prev-icon pi": true, "pi-chevron-left": a1, "pi-chevron-up": a2 }; };
function GalleriaThumbnails_button_2_Template(rf, ctx) { if (rf & 1) {
    var _r5 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 7);
    ɵngcc0.ɵɵlistener("click", function GalleriaThumbnails_button_2_Template_button_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r5); var ctx_r4 = ɵngcc0.ɵɵnextContext(); return ctx_r4.navBackward($event); });
    ɵngcc0.ɵɵelement(1, "span", 8);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(3, _c9, ctx_r0.isNavBackwardDisabled()))("disabled", ctx_r0.isNavBackwardDisabled());
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction2(5, _c10, !ctx_r0.isVertical, ctx_r0.isVertical));
} }
var _c11 = function (a1, a2, a3, a4) { return { "ui-galleria-thumbnail-item": true, "ui-galleria-thumbnail-item-current": a1, "ui-galleria-thumbnail-item-active": a2, "ui-galleria-thumbnail-item-start": a3, "ui-galleria-thumbnail-item-end": a4 }; };
function GalleriaThumbnails_div_6_Template(rf, ctx) { if (rf & 1) {
    var _r9 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 8);
    ɵngcc0.ɵɵelementStart(1, "div", 9);
    ɵngcc0.ɵɵlistener("click", function GalleriaThumbnails_div_6_Template_div_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r9); var index_r7 = ctx.index; var ctx_r8 = ɵngcc0.ɵɵnextContext(); return ctx_r8.onItemClick(index_r7); })("keydown.enter", function GalleriaThumbnails_div_6_Template_div_keydown_enter_1_listener() { ɵngcc0.ɵɵrestoreView(_r9); var index_r7 = ctx.index; var ctx_r10 = ɵngcc0.ɵɵnextContext(); return ctx_r10.onItemClick(index_r7); });
    ɵngcc0.ɵɵelement(2, "p-galleriaItemSlot", 10);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var item_r6 = ctx.$implicit;
    var index_r7 = ctx.index;
    var ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction4(4, _c11, ctx_r2.activeIndex === index_r7, ctx_r2.isItemActive(index_r7), ctx_r2.firstItemAciveIndex() === index_r7, ctx_r2.lastItemActiveIndex() === index_r7));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵattribute("tabindex", ctx_r2.getTabIndex(index_r7));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("item", item_r6)("templates", ctx_r2.templates);
} }
var _c12 = function (a1) { return { "ui-galleria-thumbnail-next ui-link": true, "ui-state-disabled": a1 }; };
var _c13 = function (a1, a2) { return { "ui-galleria-thumbnail-next-icon pi": true, "pi-chevron-right": a1, "pi-chevron-down": a2 }; };
function GalleriaThumbnails_button_7_Template(rf, ctx) { if (rf & 1) {
    var _r12 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 7);
    ɵngcc0.ɵɵlistener("click", function GalleriaThumbnails_button_7_Template_button_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r12); var ctx_r11 = ɵngcc0.ɵɵnextContext(); return ctx_r11.navForward($event); });
    ɵngcc0.ɵɵelement(1, "span", 8);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r3 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(3, _c12, ctx_r3.isNavForwardDisabled()))("disabled", ctx_r3.isNavForwardDisabled());
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction2(5, _c13, !ctx_r3.isVertical, ctx_r3.isVertical));
} }
var _c14 = function (a0) { return { "height": a0 }; };
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spread = (this && this.__spread) || function () {
    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
    return ar;
};
import { NgModule, Component, ElementRef, OnDestroy, Input, Output, EventEmitter, ChangeDetectionStrategy, ViewChild, ContentChildren, QueryList, TemplateRef, OnInit, OnChanges, AfterContentChecked, SimpleChanges, ChangeDetectorRef, AfterViewInit } from '@angular/core';
import { CommonModule } from '@angular/common';
import { SharedModule, PrimeTemplate } from 'primeng-lts/api';
import { UniqueComponentId } from 'primeng-lts/utils';
import { DomHandler } from 'primeng-lts/dom';
var Galleria = /** @class */ (function () {
    function Galleria(element) {
        this.element = element;
        this.fullScreen = false;
        this.numVisible = 3;
        this.showItemNavigators = false;
        this.showThumbnailNavigators = true;
        this.showItemNavigatorsOnHover = false;
        this.changeItemOnIndicatorHover = false;
        this.circular = false;
        this.autoPlay = false;
        this.transitionInterval = 4000;
        this.showThumbnails = true;
        this.thumbnailsPosition = "bottom";
        this.verticalThumbnailViewPortHeight = "300px";
        this.showIndicators = false;
        this.showIndicatorsOnItem = false;
        this.indicatorsPosition = "bottom";
        this.baseZIndex = 0;
        this.activeIndexChange = new EventEmitter();
        this.visibleChange = new EventEmitter();
        this._visible = false;
        this._activeIndex = 0;
    }
    Object.defineProperty(Galleria.prototype, "activeIndex", {
        get: function () {
            return this._activeIndex;
        },
        set: function (activeIndex) {
            this._activeIndex = activeIndex;
        },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(Galleria.prototype, "visible", {
        get: function () {
            return this._visible;
        },
        set: function (visible) {
            this._visible = visible;
        },
        enumerable: true,
        configurable: true
    });
    ;
    Galleria.prototype.ngAfterContentInit = function () {
        var _this = this;
        this.templates.forEach(function (item) {
            switch (item.getType()) {
                case 'header':
                    _this.headerFacet = item.template;
                    break;
                case 'footer':
                    _this.footerFacet = item.template;
                    break;
                case 'indicator':
                    _this.indicatorFacet = item.template;
                    break;
                case 'caption':
                    _this.captionFacet = item.template;
                    break;
            }
        });
    };
    Galleria.prototype.ngOnChanges = function (simpleChanges) {
        if (this.fullScreen && simpleChanges.visible) {
            if (simpleChanges.visible.currentValue) {
                DomHandler.addClass(document.body, 'ui-overflow-hidden');
                this.zIndex = String(this.baseZIndex + ++DomHandler.zindex);
            }
            else {
                DomHandler.removeClass(document.body, 'ui-overflow-hidden');
            }
        }
    };
    Galleria.prototype.onMaskHide = function () {
        this.visible = false;
        this.visibleChange.emit(false);
    };
    Galleria.prototype.onActiveItemChange = function (index) {
        if (this.activeIndex !== index) {
            this.activeIndex = index;
            this.activeIndexChange.emit(index);
        }
    };
    Galleria.prototype.ngOnDestroy = function () {
        if (this.fullScreen) {
            DomHandler.removeClass(document.body, 'ui-overflow-hidden');
        }
    };
    Galleria.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    __decorate([
        Input()
    ], Galleria.prototype, "activeIndex", null);
    __decorate([
        Input()
    ], Galleria.prototype, "fullScreen", void 0);
    __decorate([
        Input()
    ], Galleria.prototype, "id", void 0);
    __decorate([
        Input()
    ], Galleria.prototype, "value", void 0);
    __decorate([
        Input()
    ], Galleria.prototype, "numVisible", void 0);
    __decorate([
        Input()
    ], Galleria.prototype, "responsiveOptions", void 0);
    __decorate([
        Input()
    ], Galleria.prototype, "showItemNavigators", void 0);
    __decorate([
        Input()
    ], Galleria.prototype, "showThumbnailNavigators", void 0);
    __decorate([
        Input()
    ], Galleria.prototype, "showItemNavigatorsOnHover", void 0);
    __decorate([
        Input()
    ], Galleria.prototype, "changeItemOnIndicatorHover", void 0);
    __decorate([
        Input()
    ], Galleria.prototype, "circular", void 0);
    __decorate([
        Input()
    ], Galleria.prototype, "autoPlay", void 0);
    __decorate([
        Input()
    ], Galleria.prototype, "transitionInterval", void 0);
    __decorate([
        Input()
    ], Galleria.prototype, "showThumbnails", void 0);
    __decorate([
        Input()
    ], Galleria.prototype, "thumbnailsPosition", void 0);
    __decorate([
        Input()
    ], Galleria.prototype, "verticalThumbnailViewPortHeight", void 0);
    __decorate([
        Input()
    ], Galleria.prototype, "showIndicators", void 0);
    __decorate([
        Input()
    ], Galleria.prototype, "showIndicatorsOnItem", void 0);
    __decorate([
        Input()
    ], Galleria.prototype, "indicatorsPosition", void 0);
    __decorate([
        Input()
    ], Galleria.prototype, "baseZIndex", void 0);
    __decorate([
        Input()
    ], Galleria.prototype, "maskClass", void 0);
    __decorate([
        Input()
    ], Galleria.prototype, "containerClass", void 0);
    __decorate([
        Input()
    ], Galleria.prototype, "containerStyle", void 0);
    __decorate([
        ViewChild('mask', { static: false })
    ], Galleria.prototype, "mask", void 0);
    __decorate([
        Input()
    ], Galleria.prototype, "visible", null);
    __decorate([
        Output()
    ], Galleria.prototype, "activeIndexChange", void 0);
    __decorate([
        Output()
    ], Galleria.prototype, "visibleChange", void 0);
    __decorate([
        ContentChildren(PrimeTemplate)
    ], Galleria.prototype, "templates", void 0);
Galleria.ɵfac = function Galleria_Factory(t) { return new (t || Galleria)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
Galleria.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: Galleria, selectors: [["p-galleria"]], contentQueries: function Galleria_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, PrimeTemplate, false);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.templates = _t);
    } }, viewQuery: function Galleria_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c0, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.mask = _t.first);
    } }, inputs: { fullScreen: "fullScreen", numVisible: "numVisible", showItemNavigators: "showItemNavigators", showThumbnailNavigators: "showThumbnailNavigators", showItemNavigatorsOnHover: "showItemNavigatorsOnHover", changeItemOnIndicatorHover: "changeItemOnIndicatorHover", circular: "circular", autoPlay: "autoPlay", transitionInterval: "transitionInterval", showThumbnails: "showThumbnails", thumbnailsPosition: "thumbnailsPosition", verticalThumbnailViewPortHeight: "verticalThumbnailViewPortHeight", showIndicators: "showIndicators", showIndicatorsOnItem: "showIndicatorsOnItem", indicatorsPosition: "indicatorsPosition", baseZIndex: "baseZIndex", activeIndex: "activeIndex", visible: "visible", id: "id", value: "value", responsiveOptions: "responsiveOptions", maskClass: "maskClass", containerClass: "containerClass", containerStyle: "containerStyle" }, outputs: { activeIndexChange: "activeIndexChange", visibleChange: "visibleChange" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 3, vars: 2, consts: [[4, "ngIf", "ngIfElse"], ["windowed", ""], [3, "ngClass", "class", "ngStyle", 4, "ngIf"], [3, "ngClass", "ngStyle"], ["mask", ""], [3, "ngStyle", "maskHide", "activeItemChange"], [3, "activeItemChange"]], template: function Galleria_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, Galleria_div_0_Template, 2, 1, "div", 0);
        ɵngcc0.ɵɵtemplate(1, Galleria_ng_template_1_Template, 1, 0, "ng-template", null, 1, ɵngcc0.ɵɵtemplateRefExtractor);
    } if (rf & 2) {
        var _r1 = ɵngcc0.ɵɵreference(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.fullScreen)("ngIfElse", _r1);
    } }, directives: function () { return [ɵngcc1.NgIf, ɵngcc1.NgClass, ɵngcc1.NgStyle, GalleriaContent]; }, encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(Galleria, [{
        type: Component,
        args: [{
                selector: 'p-galleria',
                template: "\n        <div *ngIf=\"fullScreen;else windowed\">\n            <div *ngIf=\"visible\"  #mask [ngClass]=\"{'ui-galleria-mask ui-widget-overlay':true, 'ui-galleria-visible': this.visible}\" [class]=\"maskClass\" [ngStyle]=\"{'zIndex':zIndex}\">\n                <p-galleriaContent (maskHide)=\"onMaskHide()\" (activeItemChange)=\"onActiveItemChange($event)\" [ngStyle]=\"containerStyle\"></p-galleriaContent>\n            </div>\n        </div>\n\n        <ng-template #windowed>\n            <p-galleriaContent (activeItemChange)=\"onActiveItemChange($event)\"></p-galleriaContent>\n        </ng-template>\n    ",
                changeDetection: ChangeDetectionStrategy.Default
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { fullScreen: [{
            type: Input
        }], numVisible: [{
            type: Input
        }], showItemNavigators: [{
            type: Input
        }], showThumbnailNavigators: [{
            type: Input
        }], showItemNavigatorsOnHover: [{
            type: Input
        }], changeItemOnIndicatorHover: [{
            type: Input
        }], circular: [{
            type: Input
        }], autoPlay: [{
            type: Input
        }], transitionInterval: [{
            type: Input
        }], showThumbnails: [{
            type: Input
        }], thumbnailsPosition: [{
            type: Input
        }], verticalThumbnailViewPortHeight: [{
            type: Input
        }], showIndicators: [{
            type: Input
        }], showIndicatorsOnItem: [{
            type: Input
        }], indicatorsPosition: [{
            type: Input
        }], baseZIndex: [{
            type: Input
        }], activeIndexChange: [{
            type: Output
        }], visibleChange: [{
            type: Output
        }], activeIndex: [{
            type: Input
        }], visible: [{
            type: Input
        }], id: [{
            type: Input
        }], value: [{
            type: Input
        }], responsiveOptions: [{
            type: Input
        }], maskClass: [{
            type: Input
        }], containerClass: [{
            type: Input
        }], containerStyle: [{
            type: Input
        }], mask: [{
            type: ViewChild,
            args: ['mask', { static: false }]
        }], templates: [{
            type: ContentChildren,
            args: [PrimeTemplate]
        }] }); })();
    return Galleria;
}());
export { Galleria };
var GalleriaContent = /** @class */ (function () {
    function GalleriaContent(galleria) {
        this.galleria = galleria;
        this.maskHide = new EventEmitter();
        this.activeItemChange = new EventEmitter();
        this.id = this.galleria.id || UniqueComponentId();
        this.slideShowActicve = false;
        this._activeIndex = 0;
        this.slideShowActive = true;
    }
    Object.defineProperty(GalleriaContent.prototype, "activeIndex", {
        get: function () {
            return this._activeIndex;
        },
        set: function (activeIndex) {
            this._activeIndex = activeIndex;
        },
        enumerable: true,
        configurable: true
    });
    ;
    GalleriaContent.prototype.galleriaClass = function () {
        var thumbnailsPosClass = this.galleria.showThumbnails && this.getPositionClass('ui-galleria-thumbnails', this.galleria.thumbnailsPosition);
        var indicatorPosClass = this.galleria.showIndicators && this.getPositionClass('ui-galleria-indicators', this.galleria.indicatorsPosition);
        return (this.galleria.containerClass ? this.galleria.containerClass + " " : '') + (thumbnailsPosClass ? thumbnailsPosClass + " " : '') + (indicatorPosClass ? indicatorPosClass + " " : '');
    };
    GalleriaContent.prototype.startSlideShow = function () {
        var _this = this;
        this.interval = setInterval(function () {
            var activeIndex = (_this.galleria.circular && (_this.galleria.value.length - 1) === _this.galleria.activeIndex) ? 0 : (_this.galleria.activeIndex + 1);
            _this.onActiveIndexChange(activeIndex);
            _this.activeIndex = activeIndex;
        }, this.galleria.transitionInterval);
        this.slideShowActive = true;
    };
    GalleriaContent.prototype.stopSlideShow = function () {
        if (this.interval) {
            clearInterval(this.interval);
        }
        this.slideShowActive = false;
    };
    GalleriaContent.prototype.getPositionClass = function (preClassName, position) {
        var positions = ['top', 'left', 'bottom', 'right'];
        var pos = positions.find(function (item) { return item === position; });
        return pos ? preClassName + "-" + pos : '';
    };
    GalleriaContent.prototype.isVertical = function () {
        return this.galleria.thumbnailsPosition === 'left' || this.galleria.thumbnailsPosition === 'right';
    };
    GalleriaContent.prototype.onActiveIndexChange = function (index) {
        if (this.activeIndex !== index) {
            this.activeIndex = index;
            this.activeItemChange.emit(this.activeIndex);
        }
    };
    GalleriaContent.ctorParameters = function () { return [
        { type: Galleria }
    ]; };
    __decorate([
        Input()
    ], GalleriaContent.prototype, "activeIndex", null);
    __decorate([
        Output()
    ], GalleriaContent.prototype, "maskHide", void 0);
    __decorate([
        Output()
    ], GalleriaContent.prototype, "activeItemChange", void 0);
GalleriaContent.ɵfac = function GalleriaContent_Factory(t) { return new (t || GalleriaContent)(ɵngcc0.ɵɵdirectiveInject(Galleria)); };
GalleriaContent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: GalleriaContent, selectors: [["p-galleriaContent"]], inputs: { activeIndex: "activeIndex" }, outputs: { maskHide: "maskHide", activeItemChange: "activeItemChange" }, decls: 1, vars: 1, consts: [[3, "ngClass", "ngStyle", "class", 4, "ngIf"], [3, "ngClass", "ngStyle"], ["type", "button", "class", "ui-galleria-close ui-link ui-widget ui-state-default ui-corner-all", 3, "click", 4, "ngIf"], ["class", "ui-galleria-header", 4, "ngIf"], [1, "ui-galleria-content"], [3, "value", "activeIndex", "circular", "templates", "showIndicators", "changeItemOnIndicatorHover", "indicatorFacet", "captionFacet", "showItemNavigators", "autoPlay", "slideShowActive", "onActiveIndexChange", "startSlideShow", "stopSlideShow"], [3, "containerId", "value", "activeIndex", "templates", "numVisible", "responsiveOptions", "circular", "isVertical", "contentHeight", "showThumbnailNavigators", "slideShowActive", "onActiveIndexChange", "stopSlideShow", 4, "ngIf"], ["class", "ui-galleria-footer", 4, "ngIf"], ["type", "button", 1, "ui-galleria-close", "ui-link", "ui-widget", "ui-state-default", "ui-corner-all", 3, "click"], [1, "ui-galleria-close-icon", "pi", "pi-times"], [1, "ui-galleria-header"], ["type", "header", 3, "templates"], [3, "containerId", "value", "activeIndex", "templates", "numVisible", "responsiveOptions", "circular", "isVertical", "contentHeight", "showThumbnailNavigators", "slideShowActive", "onActiveIndexChange", "stopSlideShow"], [1, "ui-galleria-footer"], ["type", "footer", 3, "templates"]], template: function GalleriaContent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, GalleriaContent_div_0_Template, 7, 25, "div", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ctx.galleria.value && ctx.galleria.value.length > 0);
    } }, directives: function () { return [ɵngcc1.NgIf, ɵngcc1.NgClass, ɵngcc1.NgStyle, GalleriaItem, GalleriaItemSlot, GalleriaThumbnails]; }, encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(GalleriaContent, [{
        type: Component,
        args: [{
                selector: 'p-galleriaContent',
                template: "\n        <div [attr.id]=\"id\" *ngIf=\"galleria.value && galleria.value.length > 0\" [ngClass]=\"{'ui-galleria ui-widget': true, 'ui-galleria-fullscreen': this.galleria.fullScreen, \n            'ui-galleria-indicator-onitem': this.galleria.showIndicatorsOnItem, 'ui-galleria-item-nav-onhover': this.galleria.showItemNavigatorsOnHover && !this.galleria.fullScreen}\"\n            [ngStyle]=\"!galleria.fullScreen ? galleria.containerStyle : {}\" [class]=\"galleriaClass()\">\n            <button *ngIf=\"galleria.fullScreen\" type=\"button\" class=\"ui-galleria-close ui-link ui-widget ui-state-default ui-corner-all\" (click)=\"maskHide.emit()\">\n                <span class=\"ui-galleria-close-icon pi pi-times\"></span>\n            </button>\n            <div *ngIf=\"galleria.templates && galleria.headerFacet\" class=\"ui-galleria-header\">\n                <p-galleriaItemSlot type=\"header\" [templates]=\"galleria.templates\"></p-galleriaItemSlot>\n            </div>\n            <div class=\"ui-galleria-content\">\n                <p-galleriaItem [value]=\"galleria.value\" [activeIndex]=\"galleria.activeIndex\" [circular]=\"galleria.circular\" [templates]=\"galleria.templates\" (onActiveIndexChange)=\"onActiveIndexChange($event)\" \n                    [showIndicators]=\"galleria.showIndicators\" [changeItemOnIndicatorHover]=\"galleria.changeItemOnIndicatorHover\" [indicatorFacet]=\"galleria.indicatorFacet\"\n                    [captionFacet]=\"galleria.captionFacet\" [showItemNavigators]=\"galleria.showItemNavigators\" [autoPlay]=\"galleria.autoPlay\" [slideShowActive]=\"slideShowActive\"\n                    (startSlideShow)=\"startSlideShow()\" (stopSlideShow)=\"stopSlideShow()\"></p-galleriaItem>\n\n                <p-galleriaThumbnails *ngIf=\"galleria.showThumbnails\" [containerId]=\"id\" [value]=\"galleria.value\" (onActiveIndexChange)=\"onActiveIndexChange($event)\" [activeIndex]=\"galleria.activeIndex\" [templates]=\"galleria.templates\"\n                    [numVisible]=\"galleria.numVisible\" [responsiveOptions]=\"galleria.responsiveOptions\" [circular]=\"galleria.circular\"\n                    [isVertical]=\"isVertical()\" [contentHeight]=\"galleria.verticalThumbnailViewPortHeight\" [showThumbnailNavigators]=\"galleria.showThumbnailNavigators\"\n                    [slideShowActive]=\"slideShowActive\" (stopSlideShow)=\"stopSlideShow()\"></p-galleriaThumbnails>\n            </div>\n            <div *ngIf=\"galleria.templates && galleria.footerFacet\" class=\"ui-galleria-footer\">\n                <p-galleriaItemSlot type=\"footer\" [templates]=\"galleria.templates\"></p-galleriaItemSlot>\n            </div>\n        </div>\n    ",
                changeDetection: ChangeDetectionStrategy.Default
            }]
    }], function () { return [{ type: Galleria }]; }, { maskHide: [{
            type: Output
        }], activeItemChange: [{
            type: Output
        }], activeIndex: [{
            type: Input
        }] }); })();
    return GalleriaContent;
}());
export { GalleriaContent };
var GalleriaItemSlot = /** @class */ (function () {
    function GalleriaItemSlot() {
    }
    Object.defineProperty(GalleriaItemSlot.prototype, "item", {
        get: function () {
            return this._item;
        },
        set: function (item) {
            var _this = this;
            this._item = item;
            if (this.templates) {
                this.templates.forEach(function (item) {
                    if (item.getType() === _this.type) {
                        switch (_this.type) {
                            case 'item':
                            case 'caption':
                            case 'thumbnail':
                                _this.context = { $implicit: _this.item };
                                _this.contentTemplate = item.template;
                                break;
                        }
                    }
                });
            }
        },
        enumerable: true,
        configurable: true
    });
    ;
    GalleriaItemSlot.prototype.ngAfterContentInit = function () {
        var _this = this;
        this.templates.forEach(function (item) {
            if (item.getType() === _this.type) {
                switch (_this.type) {
                    case 'item':
                    case 'caption':
                    case 'thumbnail':
                        _this.context = { $implicit: _this.item };
                        _this.contentTemplate = item.template;
                        break;
                    case 'indicator':
                        _this.context = { $implicit: _this.index };
                        _this.contentTemplate = item.template;
                        break;
                    default:
                        _this.context = {};
                        _this.contentTemplate = item.template;
                        break;
                }
            }
        });
    };
    __decorate([
        Input()
    ], GalleriaItemSlot.prototype, "templates", void 0);
    __decorate([
        Input()
    ], GalleriaItemSlot.prototype, "index", void 0);
    __decorate([
        Input()
    ], GalleriaItemSlot.prototype, "item", null);
    __decorate([
        Input()
    ], GalleriaItemSlot.prototype, "type", void 0);
GalleriaItemSlot.ɵfac = function GalleriaItemSlot_Factory(t) { return new (t || GalleriaItemSlot)(); };
GalleriaItemSlot.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: GalleriaItemSlot, selectors: [["p-galleriaItemSlot"]], inputs: { item: "item", templates: "templates", index: "index", type: "type" }, decls: 1, vars: 1, consts: [[4, "ngIf"], [4, "ngTemplateOutlet", "ngTemplateOutletContext"]], template: function GalleriaItemSlot_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, GalleriaItemSlot_ng_container_0_Template, 2, 2, "ng-container", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ctx.contentTemplate);
    } }, directives: [ɵngcc1.NgIf, ɵngcc1.NgTemplateOutlet], encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(GalleriaItemSlot, [{
        type: Component,
        args: [{
                selector: 'p-galleriaItemSlot',
                template: "\n        <ng-container *ngIf=\"contentTemplate\">\n            <ng-container *ngTemplateOutlet=\"contentTemplate; context: context\"></ng-container>\n        </ng-container>\n    ",
                changeDetection: ChangeDetectionStrategy.Default
            }]
    }], function () { return []; }, { item: [{
            type: Input
        }], templates: [{
            type: Input
        }], index: [{
            type: Input
        }], type: [{
            type: Input
        }] }); })();
    return GalleriaItemSlot;
}());
export { GalleriaItemSlot };
var GalleriaItem = /** @class */ (function () {
    function GalleriaItem() {
        this.circular = false;
        this.showItemNavigators = false;
        this.showIndicators = true;
        this.slideShowActive = true;
        this.changeItemOnIndicatorHover = true;
        this.autoPlay = false;
        this.startSlideShow = new EventEmitter();
        this.stopSlideShow = new EventEmitter();
        this.onActiveIndexChange = new EventEmitter();
        this._activeIndex = 0;
    }
    Object.defineProperty(GalleriaItem.prototype, "activeIndex", {
        get: function () {
            return this._activeIndex;
        },
        set: function (activeIndex) {
            this._activeIndex = activeIndex;
            this.activeItem = this.value[this._activeIndex];
        },
        enumerable: true,
        configurable: true
    });
    ;
    GalleriaItem.prototype.ngOnInit = function () {
        if (this.autoPlay) {
            this.startSlideShow.emit();
        }
    };
    GalleriaItem.prototype.next = function () {
        var nextItemIndex = this.activeIndex + 1;
        var activeIndex = this.circular && this.value.length - 1 === this.activeIndex
            ? 0
            : nextItemIndex;
        this.onActiveIndexChange.emit(activeIndex);
    };
    GalleriaItem.prototype.prev = function () {
        var prevItemIndex = this.activeIndex !== 0 ? this.activeIndex - 1 : 0;
        var activeIndex = this.circular && this.activeIndex === 0
            ? this.value.length - 1
            : prevItemIndex;
        this.onActiveIndexChange.emit(activeIndex);
    };
    GalleriaItem.prototype.stopTheSlideShow = function () {
        if (this.slideShowActive && this.stopSlideShow) {
            this.stopSlideShow.emit();
        }
    };
    GalleriaItem.prototype.navForward = function (e) {
        this.stopTheSlideShow();
        this.next();
        if (e && e.cancelable) {
            e.preventDefault();
        }
    };
    GalleriaItem.prototype.navBackward = function (e) {
        this.stopTheSlideShow();
        this.prev();
        if (e && e.cancelable) {
            e.preventDefault();
        }
    };
    GalleriaItem.prototype.onIndicatorClick = function (index) {
        this.stopTheSlideShow();
        this.onActiveIndexChange.emit(index);
    };
    GalleriaItem.prototype.onIndicatorMouseEnter = function (index) {
        if (this.changeItemOnIndicatorHover) {
            this.stopTheSlideShow();
            this.onActiveIndexChange.emit(index);
        }
    };
    GalleriaItem.prototype.onIndicatorKeyDown = function (index) {
        this.stopTheSlideShow();
        this.onActiveIndexChange.emit(index);
    };
    GalleriaItem.prototype.isNavForwardDisabled = function () {
        return !this.circular && this.activeIndex === (this.value.length - 1);
    };
    GalleriaItem.prototype.isNavBackwardDisabled = function () {
        return !this.circular && this.activeIndex === 0;
    };
    GalleriaItem.prototype.isIndicatorItemActive = function (index) {
        return this.activeIndex === index;
    };
    __decorate([
        Input()
    ], GalleriaItem.prototype, "circular", void 0);
    __decorate([
        Input()
    ], GalleriaItem.prototype, "value", void 0);
    __decorate([
        Input()
    ], GalleriaItem.prototype, "showItemNavigators", void 0);
    __decorate([
        Input()
    ], GalleriaItem.prototype, "showIndicators", void 0);
    __decorate([
        Input()
    ], GalleriaItem.prototype, "slideShowActive", void 0);
    __decorate([
        Input()
    ], GalleriaItem.prototype, "changeItemOnIndicatorHover", void 0);
    __decorate([
        Input()
    ], GalleriaItem.prototype, "autoPlay", void 0);
    __decorate([
        Input()
    ], GalleriaItem.prototype, "templates", void 0);
    __decorate([
        Input()
    ], GalleriaItem.prototype, "indicatorFacet", void 0);
    __decorate([
        Input()
    ], GalleriaItem.prototype, "captionFacet", void 0);
    __decorate([
        Output()
    ], GalleriaItem.prototype, "startSlideShow", void 0);
    __decorate([
        Output()
    ], GalleriaItem.prototype, "stopSlideShow", void 0);
    __decorate([
        Output()
    ], GalleriaItem.prototype, "onActiveIndexChange", void 0);
    __decorate([
        Input()
    ], GalleriaItem.prototype, "activeIndex", null);
GalleriaItem.ɵfac = function GalleriaItem_Factory(t) { return new (t || GalleriaItem)(); };
GalleriaItem.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: GalleriaItem, selectors: [["p-galleriaItem"]], hostVars: 2, hostBindings: function GalleriaItem_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("ui-galleria-item-wrapper", true);
    } }, inputs: { circular: "circular", showItemNavigators: "showItemNavigators", showIndicators: "showIndicators", slideShowActive: "slideShowActive", changeItemOnIndicatorHover: "changeItemOnIndicatorHover", autoPlay: "autoPlay", activeIndex: "activeIndex", value: "value", templates: "templates", indicatorFacet: "indicatorFacet", captionFacet: "captionFacet" }, outputs: { startSlideShow: "startSlideShow", stopSlideShow: "stopSlideShow", onActiveIndexChange: "onActiveIndexChange" }, decls: 6, vars: 6, consts: [[1, "ui-galleria-item-container"], ["type", "button", 3, "ngClass", "disabled", "click", 4, "ngIf"], ["type", "item", 1, "ui-galleria-item", 3, "item", "templates"], ["class", "ui-galleria-caption", 4, "ngIf"], ["class", "ui-galleria-indicators ui-helper-reset", 4, "ngIf"], ["type", "button", 3, "ngClass", "disabled", "click"], [1, "ui-galleria-item-prev-icon", "pi", "pi-chevron-left"], [1, "ui-galleria-item-next-icon", "pi", "pi-chevron-right"], [1, "ui-galleria-caption"], ["type", "caption", 3, "item", "templates"], [1, "ui-galleria-indicators", "ui-helper-reset"], ["tabindex", "0", 3, "ngClass", "click", "mouseenter", "keydown.enter", 4, "ngFor", "ngForOf"], ["tabindex", "0", 3, "ngClass", "click", "mouseenter", "keydown.enter"], ["type", "button", "tabIndex", "-1", "class", "ui-link", 4, "ngIf"], ["type", "indicator", 3, "index", "templates"], ["type", "button", "tabIndex", "-1", 1, "ui-link"]], template: function GalleriaItem_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵtemplate(1, GalleriaItem_button_1_Template, 2, 4, "button", 1);
        ɵngcc0.ɵɵelement(2, "p-galleriaItemSlot", 2);
        ɵngcc0.ɵɵtemplate(3, GalleriaItem_button_3_Template, 2, 4, "button", 1);
        ɵngcc0.ɵɵtemplate(4, GalleriaItem_div_4_Template, 2, 2, "div", 3);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(5, GalleriaItem_ul_5_Template, 2, 1, "ul", 4);
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.showItemNavigators);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("item", ctx.activeItem)("templates", ctx.templates);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.showItemNavigators);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.captionFacet);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.showIndicators);
    } }, directives: [ɵngcc1.NgIf, GalleriaItemSlot, ɵngcc1.NgClass, ɵngcc1.NgForOf], encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(GalleriaItem, [{
        type: Component,
        args: [{
                selector: 'p-galleriaItem',
                template: "\n        <div class=\"ui-galleria-item-container\">\n            <button *ngIf=\"showItemNavigators\" type=\"button\" [ngClass]=\"{'ui-galleria-item-prev ui-galleria-item-nav ui-link': true, 'ui-state-disabled': this.isNavBackwardDisabled()}\" (click)=\"navBackward($event)\" \n                [disabled]=\"isNavBackwardDisabled()\">\n                <span class=\"ui-galleria-item-prev-icon pi pi-chevron-left\"></span>\n            </button>\n            <p-galleriaItemSlot type=\"item\" [item]=\"activeItem\" [templates]=\"templates\" class=\"ui-galleria-item\"></p-galleriaItemSlot>\n            <button *ngIf=\"showItemNavigators\" type=\"button\" [ngClass]=\"{'ui-galleria-item-next ui-galleria-item-nav ui-link': true,'ui-state-disabled': this.isNavForwardDisabled()}\" (click)=\"navForward($event)\" \n                [disabled]=\"isNavForwardDisabled()\">\n                <span class=\"ui-galleria-item-next-icon pi pi-chevron-right\"></span>\n            </button>\n            <div class=\"ui-galleria-caption\" *ngIf=\"captionFacet\">\n                <p-galleriaItemSlot type=\"caption\" [item]=\"activeItem\" [templates]=\"templates\"></p-galleriaItemSlot>\n            </div>\n        </div>\n        <ul *ngIf=\"showIndicators\" class=\"ui-galleria-indicators ui-helper-reset\">\n            <li *ngFor=\"let item of value; let index = index;\" tabindex=\"0\"\n                (click)=\"onIndicatorClick(index)\" (mouseenter)=\"onIndicatorMouseEnter(index)\" (keydown.enter)=\"onIndicatorKeyDown(index)\"\n                [ngClass]=\"{'ui-galleria-indicator': true,'ui-state-highlight': isIndicatorItemActive(index)}\">\n                <button type=\"button\" tabIndex=\"-1\" class=\"ui-link\" *ngIf=\"!indicatorFacet\">\n                </button>\n                <p-galleriaItemSlot type=\"indicator\" [index]=\"index\" [templates]=\"templates\"></p-galleriaItemSlot>\n            </li>\n        </ul>\n    ",
                host: {
                    '[class.ui-galleria-item-wrapper]': 'true'
                },
                changeDetection: ChangeDetectionStrategy.Default
            }]
    }], function () { return []; }, { circular: [{
            type: Input
        }], showItemNavigators: [{
            type: Input
        }], showIndicators: [{
            type: Input
        }], slideShowActive: [{
            type: Input
        }], changeItemOnIndicatorHover: [{
            type: Input
        }], autoPlay: [{
            type: Input
        }], startSlideShow: [{
            type: Output
        }], stopSlideShow: [{
            type: Output
        }], onActiveIndexChange: [{
            type: Output
        }], activeIndex: [{
            type: Input
        }], value: [{
            type: Input
        }], templates: [{
            type: Input
        }], indicatorFacet: [{
            type: Input
        }], captionFacet: [{
            type: Input
        }] }); })();
    return GalleriaItem;
}());
export { GalleriaItem };
var GalleriaThumbnails = /** @class */ (function () {
    function GalleriaThumbnails(cd) {
        this.cd = cd;
        this.isVertical = false;
        this.slideShowActive = false;
        this.circular = false;
        this.contentHeight = "300px";
        this.showThumbnailNavigators = true;
        this.onActiveIndexChange = new EventEmitter();
        this.stopSlideShow = new EventEmitter();
        this.startPos = null;
        this.thumbnailsStyle = null;
        this.sortedResponsiveOptions = null;
        this.totalShiftedItems = 0;
        this.page = 0;
        this._numVisible = 0;
        this.d_numVisible = 0;
        this._oldNumVisible = 0;
        this._activeIndex = 0;
        this._oldactiveIndex = 0;
    }
    Object.defineProperty(GalleriaThumbnails.prototype, "numVisible", {
        get: function () {
            return this._numVisible;
        },
        set: function (numVisible) {
            this._numVisible = numVisible;
            this._oldNumVisible = this.d_numVisible;
            this.d_numVisible = numVisible;
        },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(GalleriaThumbnails.prototype, "activeIndex", {
        get: function () {
            return this._activeIndex;
        },
        set: function (activeIndex) {
            this._oldactiveIndex = this._activeIndex;
            this._activeIndex = activeIndex;
        },
        enumerable: true,
        configurable: true
    });
    ;
    GalleriaThumbnails.prototype.ngOnInit = function () {
        this.createStyle();
        if (this.responsiveOptions) {
            this.bindDocumentListeners();
        }
    };
    GalleriaThumbnails.prototype.ngAfterContentChecked = function () {
        var totalShiftedItems = this.totalShiftedItems;
        if ((this._oldNumVisible !== this.d_numVisible || this._oldactiveIndex !== this._activeIndex) && this.itemsContainer) {
            if (this._activeIndex <= this.getMedianItemIndex()) {
                totalShiftedItems = 0;
            }
            else if (this.value.length - this.d_numVisible + this.getMedianItemIndex() < this._activeIndex) {
                totalShiftedItems = this.d_numVisible - this.value.length;
            }
            else if (this.value.length - this.d_numVisible < this._activeIndex && this.d_numVisible % 2 === 0) {
                totalShiftedItems = (this._activeIndex * -1) + this.getMedianItemIndex() + 1;
            }
            else {
                totalShiftedItems = (this._activeIndex * -1) + this.getMedianItemIndex();
            }
            if (totalShiftedItems !== this.totalShiftedItems) {
                this.totalShiftedItems = totalShiftedItems;
            }
            if (this.itemsContainer && this.itemsContainer.nativeElement) {
                this.itemsContainer.nativeElement.style.transform = this.isVertical ? "translate3d(0, " + totalShiftedItems * (100 / this.d_numVisible) + "%, 0)" : "translate3d(" + totalShiftedItems * (100 / this.d_numVisible) + "%, 0, 0)";
            }
            if (this._oldactiveIndex !== this._activeIndex) {
                DomHandler.removeClass(this.itemsContainer.nativeElement, 'ui-items-hidden');
                this.itemsContainer.nativeElement.style.transition = 'transform 500ms ease 0s';
            }
            this._oldactiveIndex = this._activeIndex;
            this._oldNumVisible = this.d_numVisible;
        }
    };
    GalleriaThumbnails.prototype.ngAfterViewInit = function () {
        this.calculatePosition();
        this.cd.detectChanges();
    };
    GalleriaThumbnails.prototype.createStyle = function () {
        if (!this.thumbnailsStyle) {
            this.thumbnailsStyle = document.createElement('style');
            this.thumbnailsStyle.type = 'text/css';
            document.body.appendChild(this.thumbnailsStyle);
        }
        var innerHTML = "\n            #" + this.containerId + " .ui-galleria-thumbnail-item {\n                flex: 1 0 " + (100 / this.d_numVisible) + "%\n            }\n        ";
        if (this.responsiveOptions) {
            this.sortedResponsiveOptions = __spread(this.responsiveOptions);
            this.sortedResponsiveOptions.sort(function (data1, data2) {
                var value1 = data1.breakpoint;
                var value2 = data2.breakpoint;
                var result = null;
                if (value1 == null && value2 != null)
                    result = -1;
                else if (value1 != null && value2 == null)
                    result = 1;
                else if (value1 == null && value2 == null)
                    result = 0;
                else if (typeof value1 === 'string' && typeof value2 === 'string')
                    result = value1.localeCompare(value2, undefined, { numeric: true });
                else
                    result = (value1 < value2) ? -1 : (value1 > value2) ? 1 : 0;
                return -1 * result;
            });
            for (var i = 0; i < this.sortedResponsiveOptions.length; i++) {
                var res = this.sortedResponsiveOptions[i];
                innerHTML += "\n                    @media screen and (max-width: " + res.breakpoint + ") {\n                        #" + this.containerId + " .ui-galleria-thumbnail-item {\n                            flex: 1 0 " + (100 / res.numVisible) + "%\n                        }\n                    }\n                ";
            }
        }
        this.thumbnailsStyle.innerHTML = innerHTML;
    };
    GalleriaThumbnails.prototype.calculatePosition = function () {
        if (this.itemsContainer && this.sortedResponsiveOptions) {
            var windowWidth = window.innerWidth;
            var matchedResponsiveData = {
                numVisible: this._numVisible
            };
            for (var i = 0; i < this.sortedResponsiveOptions.length; i++) {
                var res = this.sortedResponsiveOptions[i];
                if (parseInt(res.breakpoint, 10) >= windowWidth) {
                    matchedResponsiveData = res;
                }
            }
            if (this.d_numVisible !== matchedResponsiveData.numVisible) {
                this.d_numVisible = matchedResponsiveData.numVisible;
            }
        }
    };
    GalleriaThumbnails.prototype.getTabIndex = function (index) {
        return this.isItemActive(index) ? 0 : null;
    };
    GalleriaThumbnails.prototype.navForward = function (e) {
        this.stopTheSlideShow();
        var nextItemIndex = this._activeIndex + 1;
        if (nextItemIndex + this.totalShiftedItems > this.getMedianItemIndex() && ((-1 * this.totalShiftedItems) < this.getTotalPageNumber() - 1 || this.circular)) {
            this.step(-1);
        }
        var activeIndex = this.circular && (this.value.length - 1) === this._activeIndex ? 0 : nextItemIndex;
        this.onActiveIndexChange.emit(activeIndex);
        if (e.cancelable) {
            e.preventDefault();
        }
    };
    GalleriaThumbnails.prototype.navBackward = function (e) {
        this.stopTheSlideShow();
        var prevItemIndex = this._activeIndex !== 0 ? this._activeIndex - 1 : 0;
        var diff = prevItemIndex + this.totalShiftedItems;
        if ((this.d_numVisible - diff - 1) > this.getMedianItemIndex() && ((-1 * this.totalShiftedItems) !== 0 || this.circular)) {
            this.step(1);
        }
        var activeIndex = this.circular && this._activeIndex === 0 ? this.value.length - 1 : prevItemIndex;
        this.onActiveIndexChange.emit(activeIndex);
        if (e.cancelable) {
            e.preventDefault();
        }
    };
    GalleriaThumbnails.prototype.onItemClick = function (index) {
        this.stopTheSlideShow();
        var selectedItemIndex = index;
        if (selectedItemIndex !== this._activeIndex) {
            var diff = selectedItemIndex + this.totalShiftedItems;
            var dir = 0;
            if (selectedItemIndex < this._activeIndex) {
                dir = (this.d_numVisible - diff - 1) - this.getMedianItemIndex();
                if (dir > 0 && (-1 * this.totalShiftedItems) !== 0) {
                    this.step(dir);
                }
            }
            else {
                dir = this.getMedianItemIndex() - diff;
                if (dir < 0 && (-1 * this.totalShiftedItems) < this.getTotalPageNumber() - 1) {
                    this.step(dir);
                }
            }
            this.activeIndex = selectedItemIndex;
            this.onActiveIndexChange.emit(this.activeIndex);
        }
    };
    GalleriaThumbnails.prototype.step = function (dir) {
        var totalShiftedItems = this.totalShiftedItems + dir;
        if (dir < 0 && (-1 * totalShiftedItems) + this.d_numVisible > (this.value.length - 1)) {
            totalShiftedItems = this.d_numVisible - this.value.length;
        }
        else if (dir > 0 && totalShiftedItems > 0) {
            totalShiftedItems = 0;
        }
        if (this.circular) {
            if (dir < 0 && this.value.length - 1 === this._activeIndex) {
                totalShiftedItems = 0;
            }
            else if (dir > 0 && this._activeIndex === 0) {
                totalShiftedItems = this.d_numVisible - this.value.length;
            }
        }
        if (this.itemsContainer) {
            DomHandler.removeClass(this.itemsContainer.nativeElement, 'ui-items-hidden');
            this.itemsContainer.nativeElement.style.transform = this.isVertical ? "translate3d(0, " + totalShiftedItems * (100 / this.d_numVisible) + "%, 0)" : "translate3d(" + totalShiftedItems * (100 / this.d_numVisible) + "%, 0, 0)";
            this.itemsContainer.nativeElement.style.transition = 'transform 500ms ease 0s';
        }
        this.totalShiftedItems = totalShiftedItems;
    };
    GalleriaThumbnails.prototype.stopTheSlideShow = function () {
        if (this.slideShowActive && this.stopSlideShow) {
            this.stopSlideShow.emit();
        }
    };
    GalleriaThumbnails.prototype.changePageOnTouch = function (e, diff) {
        if (diff < 0) { // left
            this.navForward(e);
        }
        else { // right
            this.navBackward(e);
        }
    };
    GalleriaThumbnails.prototype.getTotalPageNumber = function () {
        return this.value.length > this.d_numVisible ? (this.value.length - this.d_numVisible) + 1 : 0;
    };
    GalleriaThumbnails.prototype.getMedianItemIndex = function () {
        var index = Math.floor(this.d_numVisible / 2);
        return (this.d_numVisible % 2) ? index : index - 1;
    };
    GalleriaThumbnails.prototype.onTransitionEnd = function () {
        if (this.itemsContainer && this.itemsContainer.nativeElement) {
            DomHandler.addClass(this.itemsContainer.nativeElement, 'ui-items-hidden');
            this.itemsContainer.nativeElement.style.transition = '';
        }
    };
    GalleriaThumbnails.prototype.onTouchEnd = function (e) {
        var touchobj = e.changedTouches[0];
        if (this.isVertical) {
            this.changePageOnTouch(e, (touchobj.pageY - this.startPos.y));
        }
        else {
            this.changePageOnTouch(e, (touchobj.pageX - this.startPos.x));
        }
    };
    GalleriaThumbnails.prototype.onTouchMove = function (e) {
        if (e.cancelable) {
            e.preventDefault();
        }
    };
    GalleriaThumbnails.prototype.onTouchStart = function (e) {
        var touchobj = e.changedTouches[0];
        this.startPos = {
            x: touchobj.pageX,
            y: touchobj.pageY
        };
    };
    GalleriaThumbnails.prototype.isNavBackwardDisabled = function () {
        return (!this.circular && this._activeIndex === 0) || (this.value.length <= this.d_numVisible);
    };
    GalleriaThumbnails.prototype.isNavForwardDisabled = function () {
        return (!this.circular && this._activeIndex === (this.value.length - 1)) || (this.value.length <= this.d_numVisible);
    };
    GalleriaThumbnails.prototype.firstItemAciveIndex = function () {
        return this.totalShiftedItems * -1;
    };
    GalleriaThumbnails.prototype.lastItemActiveIndex = function () {
        return this.firstItemAciveIndex() + this.d_numVisible - 1;
    };
    GalleriaThumbnails.prototype.isItemActive = function (index) {
        return this.firstItemAciveIndex() <= index && this.lastItemActiveIndex() >= index;
    };
    GalleriaThumbnails.prototype.bindDocumentListeners = function () {
        var _this = this;
        if (!this.documentResizeListener) {
            this.documentResizeListener = function () {
                _this.calculatePosition();
            };
            window.addEventListener('resize', this.documentResizeListener);
        }
    };
    GalleriaThumbnails.prototype.unbindDocumentListeners = function () {
        if (this.documentResizeListener) {
            window.removeEventListener('resize', this.documentResizeListener);
            this.documentResizeListener = null;
        }
    };
    GalleriaThumbnails.prototype.ngOnDestroy = function () {
        if (this.responsiveOptions) {
            this.unbindDocumentListeners();
        }
        if (this.thumbnailsStyle) {
            this.thumbnailsStyle.parentNode.removeChild(this.thumbnailsStyle);
        }
    };
    GalleriaThumbnails.ctorParameters = function () { return [
        { type: ChangeDetectorRef }
    ]; };
    __decorate([
        Input()
    ], GalleriaThumbnails.prototype, "containerId", void 0);
    __decorate([
        Input()
    ], GalleriaThumbnails.prototype, "value", void 0);
    __decorate([
        Input()
    ], GalleriaThumbnails.prototype, "isVertical", void 0);
    __decorate([
        Input()
    ], GalleriaThumbnails.prototype, "slideShowActive", void 0);
    __decorate([
        Input()
    ], GalleriaThumbnails.prototype, "circular", void 0);
    __decorate([
        Input()
    ], GalleriaThumbnails.prototype, "responsiveOptions", void 0);
    __decorate([
        Input()
    ], GalleriaThumbnails.prototype, "contentHeight", void 0);
    __decorate([
        Input()
    ], GalleriaThumbnails.prototype, "showThumbnailNavigators", void 0);
    __decorate([
        Input()
    ], GalleriaThumbnails.prototype, "templates", void 0);
    __decorate([
        Output()
    ], GalleriaThumbnails.prototype, "onActiveIndexChange", void 0);
    __decorate([
        Output()
    ], GalleriaThumbnails.prototype, "stopSlideShow", void 0);
    __decorate([
        ViewChild('itemsContainer')
    ], GalleriaThumbnails.prototype, "itemsContainer", void 0);
    __decorate([
        Input()
    ], GalleriaThumbnails.prototype, "numVisible", null);
    __decorate([
        Input()
    ], GalleriaThumbnails.prototype, "activeIndex", null);
GalleriaThumbnails.ɵfac = function GalleriaThumbnails_Factory(t) { return new (t || GalleriaThumbnails)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };
GalleriaThumbnails.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: GalleriaThumbnails, selectors: [["p-galleriaThumbnails"]], viewQuery: function GalleriaThumbnails_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c8, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.itemsContainer = _t.first);
    } }, inputs: { isVertical: "isVertical", slideShowActive: "slideShowActive", circular: "circular", contentHeight: "contentHeight", showThumbnailNavigators: "showThumbnailNavigators", numVisible: "numVisible", activeIndex: "activeIndex", containerId: "containerId", value: "value", responsiveOptions: "responsiveOptions", templates: "templates" }, outputs: { onActiveIndexChange: "onActiveIndexChange", stopSlideShow: "stopSlideShow" }, decls: 8, vars: 6, consts: [[1, "ui-galleria-thumbnail-wrapper"], [1, "ui-galleria-thumbnail-container"], [3, "ngClass", "disabled", "click", 4, "ngIf"], [1, "ui-galleria-thumbnail-items-container", 3, "ngStyle"], [1, "ui-galleria-thumbnail-items", 3, "transitionend", "touchstart", "touchmove", "touchend"], ["itemsContainer", ""], [3, "ngClass", 4, "ngFor", "ngForOf"], [3, "ngClass", "disabled", "click"], [3, "ngClass"], [1, "ui-galleria-thumbnail-item-content", 3, "click", "keydown.enter"], ["type", "thumbnail", 3, "item", "templates"]], template: function GalleriaThumbnails_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "div", 1);
        ɵngcc0.ɵɵtemplate(2, GalleriaThumbnails_button_2_Template, 2, 8, "button", 2);
        ɵngcc0.ɵɵelementStart(3, "div", 3);
        ɵngcc0.ɵɵelementStart(4, "div", 4, 5);
        ɵngcc0.ɵɵlistener("transitionend", function GalleriaThumbnails_Template_div_transitionend_4_listener() { return ctx.onTransitionEnd(); })("touchstart", function GalleriaThumbnails_Template_div_touchstart_4_listener($event) { return ctx.onTouchStart($event); })("touchmove", function GalleriaThumbnails_Template_div_touchmove_4_listener($event) { return ctx.onTouchMove($event); })("touchend", function GalleriaThumbnails_Template_div_touchend_4_listener($event) { return ctx.onTouchEnd($event); });
        ɵngcc0.ɵɵtemplate(6, GalleriaThumbnails_div_6_Template, 3, 9, "div", 6);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(7, GalleriaThumbnails_button_7_Template, 2, 8, "button", 2);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.showThumbnailNavigators);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngStyle", ɵngcc0.ɵɵpureFunction1(4, _c14, ctx.isVertical ? ctx.contentHeight : ""));
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.value);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.showThumbnailNavigators);
    } }, directives: [ɵngcc1.NgIf, ɵngcc1.NgStyle, ɵngcc1.NgForOf, ɵngcc1.NgClass, GalleriaItemSlot], encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(GalleriaThumbnails, [{
        type: Component,
        args: [{
                selector: 'p-galleriaThumbnails',
                template: "\n        <div class=\"ui-galleria-thumbnail-wrapper\">\n            <div class=\"ui-galleria-thumbnail-container\">\n                <button *ngIf=\"showThumbnailNavigators\" [ngClass]=\"{'ui-galleria-thumbnail-prev ui-link': true, 'ui-state-disabled': this.isNavBackwardDisabled()}\" (click)=\"navBackward($event)\" [disabled]=\"isNavBackwardDisabled()\">\n                    <span [ngClass]=\"{'ui-galleria-thumbnail-prev-icon pi': true, 'pi-chevron-left': !this.isVertical, 'pi-chevron-up': this.isVertical}\"></span>\n                </button>\n                <div class=\"ui-galleria-thumbnail-items-container\" [ngStyle]=\"{'height': isVertical ? contentHeight : ''}\">\n                    <div #itemsContainer class=\"ui-galleria-thumbnail-items\" (transitionend)=\"onTransitionEnd()\"\n                        (touchstart)=\"onTouchStart($event)\" (touchmove)=\"onTouchMove($event)\" (touchend)=\"onTouchEnd($event)\">\n                        <div *ngFor=\"let item of value; let index = index;\" [ngClass]=\"{'ui-galleria-thumbnail-item': true, 'ui-galleria-thumbnail-item-current': activeIndex === index, 'ui-galleria-thumbnail-item-active': isItemActive(index),\n                            'ui-galleria-thumbnail-item-start': firstItemAciveIndex() === index, 'ui-galleria-thumbnail-item-end': lastItemActiveIndex() === index }\">\n                            <div class=\"ui-galleria-thumbnail-item-content\" [attr.tabindex]=\"getTabIndex(index)\" (click)=\"onItemClick(index)\" (keydown.enter)=\"onItemClick(index)\">\n                                <p-galleriaItemSlot type=\"thumbnail\" [item]=\"item\" [templates]=\"templates\"></p-galleriaItemSlot>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <button *ngIf=\"showThumbnailNavigators\" [ngClass]=\"{'ui-galleria-thumbnail-next ui-link': true, 'ui-state-disabled': this.isNavForwardDisabled()}\" (click)=\"navForward($event)\" [disabled]=\"isNavForwardDisabled()\">\n                    <span [ngClass]=\"{'ui-galleria-thumbnail-next-icon pi': true, 'pi-chevron-right': !this.isVertical, 'pi-chevron-down': this.isVertical}\"></span>\n                </button>\n            </div>\n        </div>\n    ",
                changeDetection: ChangeDetectionStrategy.Default
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }]; }, { isVertical: [{
            type: Input
        }], slideShowActive: [{
            type: Input
        }], circular: [{
            type: Input
        }], contentHeight: [{
            type: Input
        }], showThumbnailNavigators: [{
            type: Input
        }], onActiveIndexChange: [{
            type: Output
        }], stopSlideShow: [{
            type: Output
        }], numVisible: [{
            type: Input
        }], activeIndex: [{
            type: Input
        }], containerId: [{
            type: Input
        }], value: [{
            type: Input
        }], responsiveOptions: [{
            type: Input
        }], templates: [{
            type: Input
        }], itemsContainer: [{
            type: ViewChild,
            args: ['itemsContainer']
        }] }); })();
    return GalleriaThumbnails;
}());
export { GalleriaThumbnails };
var GalleriaModule = /** @class */ (function () {
    function GalleriaModule() {
    }
GalleriaModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: GalleriaModule });
GalleriaModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function GalleriaModule_Factory(t) { return new (t || GalleriaModule)(); }, imports: [[CommonModule, SharedModule], CommonModule, SharedModule] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(GalleriaModule, { declarations: function () { return [Galleria, GalleriaContent, GalleriaItemSlot, GalleriaItem, GalleriaThumbnails]; }, imports: function () { return [CommonModule, SharedModule]; }, exports: function () { return [CommonModule, Galleria, GalleriaContent, GalleriaItemSlot, GalleriaItem, GalleriaThumbnails, SharedModule]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(GalleriaModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule, SharedModule],
                exports: [CommonModule, Galleria, GalleriaContent, GalleriaItemSlot, GalleriaItem, GalleriaThumbnails, SharedModule],
                declarations: [Galleria, GalleriaContent, GalleriaItemSlot, GalleriaItem, GalleriaThumbnails]
            }]
    }], function () { return []; }, null); })();
    return GalleriaModule;
}());
export { GalleriaModule };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,