import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import { NgModule, Component, Input, ChangeDetectionStrategy } from '@angular/core';
import { CommonModule } from '@angular/common';
var ProgressSpinner = /** @class */ (function () {
    function ProgressSpinner() {
        this.strokeWidth = "2";
        this.fill = "none";
        this.animationDuration = "2s";
    }
    __decorate([
        Input()
    ], ProgressSpinner.prototype, "style", void 0);
    __decorate([
        Input()
    ], ProgressSpinner.prototype, "styleClass", void 0);
    __decorate([
        Input()
    ], ProgressSpinner.prototype, "strokeWidth", void 0);
    __decorate([
        Input()
    ], ProgressSpinner.prototype, "fill", void 0);
    __decorate([
        Input()
    ], ProgressSpinner.prototype, "animationDuration", void 0);
ProgressSpinner.ɵfac = function ProgressSpinner_Factory(t) { return new (t || ProgressSpinner)(); };
ProgressSpinner.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ProgressSpinner, selectors: [["p-progressSpinner"]], inputs: { strokeWidth: "strokeWidth", fill: "fill", animationDuration: "animationDuration", style: "style", styleClass: "styleClass" }, decls: 3, vars: 6, consts: [["role", "alert", "aria-busy", "true", 1, "ui-progress-spinner", 3, "ngStyle", "ngClass"], ["viewBox", "25 25 50 50", 1, "ui-progress-spinner-svg"], ["cx", "50", "cy", "50", "r", "20", "stroke-miterlimit", "10", 1, "ui-progress-spinner-circle"]], template: function ProgressSpinner_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵnamespaceSVG();
        ɵngcc0.ɵɵelementStart(1, "svg", 1);
        ɵngcc0.ɵɵelement(2, "circle", 2);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngStyle", ctx.style)("ngClass", ctx.styleClass);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵstyleProp("animation-duration", ctx.animationDuration);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵattribute("fill", ctx.fill)("stroke-width", ctx.strokeWidth);
    } }, directives: [ɵngcc1.NgStyle, ɵngcc1.NgClass], encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ProgressSpinner, [{
        type: Component,
        args: [{
                selector: 'p-progressSpinner',
                template: "\n        <div class=\"ui-progress-spinner\" [ngStyle]=\"style\" [ngClass]=\"styleClass\"  role=\"alert\" aria-busy=\"true\">\n            <svg class=\"ui-progress-spinner-svg\" viewBox=\"25 25 50 50\" [style.animation-duration]=\"animationDuration\">\n                <circle class=\"ui-progress-spinner-circle\" cx=\"50\" cy=\"50\" r=\"20\" [attr.fill]=\"fill\" [attr.stroke-width]=\"strokeWidth\" stroke-miterlimit=\"10\"/>\n            </svg>\n        </div>\n    ",
                changeDetection: ChangeDetectionStrategy.Default
            }]
    }], function () { return []; }, { strokeWidth: [{
            type: Input
        }], fill: [{
            type: Input
        }], animationDuration: [{
            type: Input
        }], style: [{
            type: Input
        }], styleClass: [{
            type: Input
        }] }); })();
    return ProgressSpinner;
}());
export { ProgressSpinner };
var ProgressSpinnerModule = /** @class */ (function () {
    function ProgressSpinnerModule() {
    }
ProgressSpinnerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ProgressSpinnerModule });
ProgressSpinnerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ProgressSpinnerModule_Factory(t) { return new (t || ProgressSpinnerModule)(); }, imports: [[CommonModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ProgressSpinnerModule, { declarations: function () { return [ProgressSpinner]; }, imports: function () { return [CommonModule]; }, exports: function () { return [ProgressSpinner]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ProgressSpinnerModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule],
                exports: [ProgressSpinner],
                declarations: [ProgressSpinner]
            }]
    }], function () { return []; }, null); })();
    return ProgressSpinnerModule;
}());
export { ProgressSpinnerModule };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvZ3Jlc3NzcGlubmVyLmpzIiwic291cmNlcyI6WyJwcmltZW5nLWx0cy9wcm9ncmVzc3NwaW5uZXIvcHJvZ3Jlc3NzcGlubmVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUEsT0FBTyxFQUFDLFFBQVEsRUFBQyxTQUFTLEVBQUMsS0FBSyxFQUFDLHVCQUF1QixFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQy9FLE9BQU8sRUFBQyxZQUFZLEVBQUMsTUFBTSxpQkFBaUIsQ0FBQztBQWE3QztBQUVvQixJQUZwQjtBQUE4QixRQU1qQixnQkFBVyxHQUFXLEdBQUcsQ0FBQztBQUN0QyxRQUNZLFNBQUksR0FBVyxNQUFNLENBQUM7QUFDbEMsUUFDWSxzQkFBaUIsR0FBVyxJQUFJLENBQUM7QUFDN0MsSUFDRCxDQUFDO0FBRUQsSUFaYTtBQUNYLFFBREcsS0FBSyxFQUFFO0FBQUUsa0RBQVU7QUFDdEIsSUFDVztBQUFjLFFBQXRCLEtBQUssRUFBRTtBQUFFLHVEQUFrQjtBQUM5QixJQUNXO0FBQWMsUUFBdEIsS0FBSyxFQUFFO0FBQUUsd0RBQXlCO0FBQ3JDLElBQ1c7QUFBYyxRQUF0QixLQUFLLEVBQUU7QUFBRSxpREFBcUI7QUFDakMsSUFDVztBQUFjLFFBQXRCLEtBQUssRUFBRTtBQUFFLDhEQUFnQztLQVZqQyxlQUFlLHlCQVgzQixTQUFTLENBQUMsZUFDUCxRQUFRLEVBQUUsbUJBQW1CO2FBQzdCLFFBQVEsRUFBRSxzZEFNVCxlQUNELGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxPQUFPLFdBQ25ELENBQUMsU0FDVztHQUFlLENBWTNCOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7b0JBQ0Q7QUFDQyxJQUZELHNCQUFDO0FBRUEsQ0FGQSxBQVpELElBWUM7QUFFRCxTQWRhLGVBQWU7QUFtQjVCO0FBQTBELElBQTFEO0FBQW9DLElBQUMsQ0FBQztLQUF6QixxQkFBcUIseUJBTGpDLFFBQVEsQ0FBQyxlQUNOLE9BQU8sRUFBRSxDQUFDO1VBQVksQ0FBQyxlQUN2QixPQUFPLEVBQUUsQ0FBQyxlQUFlLENBQUMsZUFDMUIsWUFBWSxFQUFFLENBQUMsZUFBZSxDQUFDLFdBQ2xDLENBQUMsU0FDVyxxQkFBcUIsQ0FBSTs7Ozs7Ozs7O2dEQUFDO0FBQUUsSUFBSiw0QkFBQztBQUFHLENBQUgsQUFBdEMsSUFBc0M7O0FBakNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBYUEsQUFBQSxBQU1BLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFFQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBRUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUVBLEFBQUEsQUFWQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBRUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUVBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFFQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBRUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQVZBLEFBQUEsQUFYQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQU1BLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFZQSxBQUFBLEFBQUEsQUFBQSxBQVpBLEFBWUEsQUFaQSxBQUFBLEFBbUJBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUxBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7TmdNb2R1bGUsQ29tcG9uZW50LElucHV0LENoYW5nZURldGVjdGlvblN0cmF0ZWd5fSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7Q29tbW9uTW9kdWxlfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ3AtcHJvZ3Jlc3NTcGlubmVyJyxcbiAgICB0ZW1wbGF0ZTogYFxuICAgICAgICA8ZGl2IGNsYXNzPVwidWktcHJvZ3Jlc3Mtc3Bpbm5lclwiIFtuZ1N0eWxlXT1cInN0eWxlXCIgW25nQ2xhc3NdPVwic3R5bGVDbGFzc1wiICByb2xlPVwiYWxlcnRcIiBhcmlhLWJ1c3k9XCJ0cnVlXCI+XG4gICAgICAgICAgICA8c3ZnIGNsYXNzPVwidWktcHJvZ3Jlc3Mtc3Bpbm5lci1zdmdcIiB2aWV3Qm94PVwiMjUgMjUgNTAgNTBcIiBbc3R5bGUuYW5pbWF0aW9uLWR1cmF0aW9uXT1cImFuaW1hdGlvbkR1cmF0aW9uXCI+XG4gICAgICAgICAgICAgICAgPGNpcmNsZSBjbGFzcz1cInVpLXByb2dyZXNzLXNwaW5uZXItY2lyY2xlXCIgY3g9XCI1MFwiIGN5PVwiNTBcIiByPVwiMjBcIiBbYXR0ci5maWxsXT1cImZpbGxcIiBbYXR0ci5zdHJva2Utd2lkdGhdPVwic3Ryb2tlV2lkdGhcIiBzdHJva2UtbWl0ZXJsaW1pdD1cIjEwXCIvPlxuICAgICAgICAgICAgPC9zdmc+XG4gICAgICAgIDwvZGl2PlxuICAgIGAsXG4gICAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5EZWZhdWx0XG59KVxuZXhwb3J0IGNsYXNzIFByb2dyZXNzU3Bpbm5lciB7XG5cbiAgICBASW5wdXQoKSBzdHlsZTogYW55O1xuICAgIFxuICAgIEBJbnB1dCgpIHN0eWxlQ2xhc3M6IHN0cmluZztcbiAgICBcbiAgICBASW5wdXQoKSBzdHJva2VXaWR0aDogc3RyaW5nID0gXCIyXCI7XG4gICAgXG4gICAgQElucHV0KCkgZmlsbDogc3RyaW5nID0gXCJub25lXCI7XG4gICAgXG4gICAgQElucHV0KCkgYW5pbWF0aW9uRHVyYXRpb246IHN0cmluZyA9IFwiMnNcIjtcbiAgICBcbn1cblxuQE5nTW9kdWxlKHtcbiAgICBpbXBvcnRzOiBbQ29tbW9uTW9kdWxlXSxcbiAgICBleHBvcnRzOiBbUHJvZ3Jlc3NTcGlubmVyXSxcbiAgICBkZWNsYXJhdGlvbnM6IFtQcm9ncmVzc1NwaW5uZXJdXG59KVxuZXhwb3J0IGNsYXNzIFByb2dyZXNzU3Bpbm5lck1vZHVsZSB7IH0iXX0=