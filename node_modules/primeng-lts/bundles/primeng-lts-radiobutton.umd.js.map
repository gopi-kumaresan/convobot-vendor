{"version":3,"file":"primeng-lts-radiobutton.umd.js","sources":["primeng-lts/radiobutton/radiobutton.ts"],"names":["NG_VALUE_ACCESSOR","forwardRef","Injectable","EventEmitter","NgControl","ChangeDetectorRef","Injector","Input","Output","ViewChild","Component","ChangeDetectionStrategy","NgModule","CommonModule"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,QAIa,oBAAoB,GAAQ;AACxC,QAAG,OAAO,EAAEA,uBAAiB;AAC7B,QAAG,WAAW,EAAEC,eAAU,CAAC,cAAM,OAAA,WAAW,GAAA,CAAC;AAC7C,QAAG,KAAK,EAAE,IAAI;AACd,KAAA,CAAC;AAKF;AACyB,QADzB;AAAmC,YACvB,cAAS,GAAU,EAAE,CAAC;AAElC,SAyBC;AAED,QA3BI,kCAAG,GAAH,UAAI,OAAkB,EAAE,QAAqB;AAChD,YAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC,CAAC;AAChD,SAAI;AAEJ,QAAG,qCAAM,GAAN,UAAO,QAAqB;AAC/B,YAAO,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,UAAC,CAAC;AAAK,gBAC1C,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,QAAQ,CAAC;AACpC,aAAQ,CAAC,CAAA;AACT,SAAI;AAEJ,QAAG,qCAAM,GAAN,UAAO,QAAqB;AAC/B,YADG,iBAMC;AAEL,YAPQ,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,UAAC,CAAC;AAAK,gBAC1B,IAAI,KAAI,CAAC,WAAW,CAAC,CAAC,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,QAAQ,EAAE;AACnE,oBAAe,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;AAC/C,iBAAY;AACZ,aAAQ,CAAC,CAAC;AACV,SAAI;AAEJ,QAAW,0CAAW,GAAnB,UAAoB,WAAqC,EAAE,QAAqB;AAAK,YACjF,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE;AACpC,gBAAW,OAAO,KAAK,CAAC;AACxB,aAAQ;AAET,YAAQ,OAAO,WAAW,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,KAAK,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,IAAI,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,QAAQ,CAAC,IAAI,CAAC;AACrH,SAAI;AAEL;SA7Ba,oBAAoB,6BAHhCC,eAAU,CAAC,mBACR,UAAU,EAAE,MAAM;WACrB,CAAC,aACW,oBAAoB,CA4BhC;;;;;gDACD;AACC,mCA3CD;AAAG,KAaH,IA4BC;AAED;AAEQ,QA+DJ,qBAAmB,EAAqB,EAAU,QAAkB,EAAU,QAA8B;AAChH,YADuB,OAAE,GAAF,EAAE,CAAmB;AAAE,YAAQ,aAAQ,GAAR,QAAQ,CAAU;AAAE,YAAQ,aAAQ,GAAR,QAAQ,CAAsB;AAAE,YAlBpG,YAAO,GAAsB,IAAIC,iBAAY,EAAE,CAAC;AAE9D,YAAc,YAAO,GAAsB,IAAIA,iBAAY,EAAE,CAAC;AAE9D,YAAc,WAAM,GAAsB,IAAIA,iBAAY,EAAE,CAAC;AAC5D,YAGU,kBAAa,GAAa,eAAQ,CAAC;AAC7C,YACU,mBAAc,GAAa,eAAQ,CAAC;AAC9C,SAOmH;AAEpH,QAAI,8BAAQ,GAAR;AACF,YAAM,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAACC,eAAS,CAAC,CAAC;AACnD,YAAO,IAAI,CAAC,SAAS,EAAE,CAAC;AACxB,YAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;AAC7C,SAAI;AAEJ,QAAG,iCAAW,GAAX;AAAe,YACX,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AAClC,SAAI;AACH,QACE,iCAAW,GAAX,UAAY,KAAK,EAAE,WAAW,EAAE,KAAK;AACxC,YAAO,KAAK,CAAC,cAAc,EAAE,CAAC;AAE/B,YAAQ,IAAI,IAAI,CAAC,QAAQ,EAAE;AAC1B,gBAAW,OAAO;AAClB,aAAQ;AAET,YAAQ,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;AAE3B,YAAQ,IAAI,KAAK,EAAE;AAClB,gBAAW,WAAW,CAAC,KAAK,EAAE,CAAC;AAC/B,aAAQ;AACR,SAAI;AACH,QACE,4BAAM,GAAN,UAAO,KAAK;AACf,YAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;AAC3B,gBAAW,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,OAAO,GAAG,IAAI,CAAC;AAC5D,gBAAW,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;AAC/B,gBAAW,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC1C,gBAAW,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AACtC,gBAAW,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACpC,aAAQ;AACR,SAAI;AACH,QACE,gCAAU,GAAV,UAAW,KAAU;AAAK,YACtB,IAAI,CAAC,OAAO,IAAI,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC;AAE7C,YAAQ,IAAI,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE;AACrE,gBAAW,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;AACpE,aAAQ;AACR,YACO,IAAI,CAAC,EAAE,CAAC,YAAY,EAAE,CAAC;AAC9B,SAAI;AACH,QACE,sCAAgB,GAAhB,UAAiB,EAAY;AAAK,YAC9B,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;AAC/B,SAAI;AAEJ,QAAG,uCAAiB,GAAjB,UAAkB,EAAY;AAAK,YAC/B,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;AAChC,SAAI;AACH,QACE,sCAAgB,GAAhB,UAAiB,GAAY;AAAK,YAC9B,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;AAC3B,SAAI;AACH,QACE,kCAAY,GAAZ,UAAa,KAAK;AACrB,YAAO,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;AAC3B,YAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAChC,SAAI;AAEJ,QAAG,iCAAW,GAAX,UAAY,KAAK;AACpB,YAAO,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;AAC5B,YAAO,IAAI,CAAC,cAAc,EAAE,CAAC;AAC7B,YAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC/B,SAAI;AACH,QACE,8BAAQ,GAAR,UAAS,KAAK;AACjB,YAAO,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;AAC1B,SAAI;AAEJ,QAAG,2BAAK,GAAL;AACC,YAAG,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;AACjD,SAAI;AAEJ,QAAW,+BAAS,GAAjB;AAAe,YACX,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,eAAe,EAAE;AACpF,gBAAW,IAAI,CAAC,cAAc,EAAE,CAAC;AACjC,aAAQ;AACR,YAAO,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,eAAe,EAAE;AAC/C,gBAAW,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,eAAe,CAAC;AAC5C,aAAQ;AACR,SAAI;AAEJ,QAAW,oCAAc,GAAtB;AAAe,YACX,MAAM,IAAI,KAAK,CAAC,sNAGf,CAAC,CAAC;AACV,SAAI;AAEL;AAGmB,oBAhGQC,sBAAiB;AAAK,oBAAeC,aAAQ;AAAK,oBAAe,oBAAoB;AAAI;AAEvG,QA5CA;AAEZ,YAFIC,UAAK,EAAE;AAAE,kDAAU;AAEvB,QAAY;AAAc,YAAtBA,UAAK,EAAE;AAAE,4DAAuB;AAEpC,QAAY;AACb,YADKA,UAAK,EAAE;AAAE,iDAAY;AAEzB,QAAY;AAAc,YAAtBA,UAAK,EAAE;AAAE,qDAAiB;AAC7B,QACW;AAAc,YAAtBA,UAAK,EAAE;AAAE,kDAAa;AAE1B,QAAY;AAAc,YAAtBA,UAAK,EAAE;AAAE,qDAAgB;AAE7B,QAAY;AAAc,YAAtBA,UAAK,EAAE;AAAE,oDAAe;AAE5B,QAAY;AAAc,YAAtBA,UAAK,EAAE;AAAE,2DAAsB;AAEnC,QAAY;AAAc,YAAtBA,UAAK,EAAE;AAAE,sDAAiB;AAC7B,QACW;AAEZ,YAFIA,UAAK,EAAE;AAAE,kDAAU;AAEvB,QAAY;AAAc,YAAtBA,UAAK,EAAE;AAAE,uDAAkB;AAE/B,QAAY;AAAc,YAAtBA,UAAK,EAAE;AAAE,4DAAuB;AAEpC,QAAa;AAAc,YAAvBC,WAAM,EAAE;AAAE,oDAA+C;AAE7D,QAAa;AAAc,YAAvBA,WAAM,EAAE;AAAE,oDAA+C;AAE7D,QAAa;AAAc,YAAvBA,WAAM,EAAE;AAAE,mDAA8C;AAC3D,QACmB;AAAc,YAA9BC,cAAS,CAAC,IAAI,CAAC;AAAE,2DAA0B;SAhCnC,WAAW,6BArBvBC,cAAS,CAAC,mBACP,QAAQ,EAAE,eAAe,mBACzB,QAAQ,EAAE;;;;;;;;gCAeT;OACD,SAAS,EAAE,CAAC,oBAAoB,CAAC;eACjC,eAAe,EAAEC;WAAuB,CAAC,OAAO,eACnD,CAAC,aACW,WAAW,CAwIvB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBACD;AACC,QAFD,kBAAC;AAEA,KA1ID,IAwIC;AAED;AAEiB,QAGjB;AAAgC,SAAE;SAArB,iBAAiB,6BAL7BC,aAAQ,CAAC;SACN,OAAO,EAAE,CAACC,mBAAY,CAAC,mBACvB,OAAO,EAAE,CAAC,WAAW,CAAC,mBACtB,YAAY,EAAE,CAAC,WAAW,CAAC,eAC9B,CAAC,aACW,iBAAiB,CAAI;;;;;;;;;gDAAC;AAAE,QAAJ,wBAAC;AAAG,KAArC;AAAM;AAAE;AAA0D;AAAwC;AAAoD;AAA0D;AAAE;AAAoE;AAAE;AAAO","sourcesContent":["import {NgModule,Component,Input,Output,ElementRef,EventEmitter,forwardRef,ViewChild,ChangeDetectorRef,ChangeDetectionStrategy, Injectable, OnInit, OnDestroy, Injector} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {NG_VALUE_ACCESSOR, ControlValueAccessor, NgControl} from '@angular/forms';\n\nexport const RADIO_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => RadioButton),\n    multi: true\n};\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class RadioControlRegistry {\n    private accessors: any[] = [];\n\n    add(control: NgControl, accessor: RadioButton) {\n        this.accessors.push([control, accessor]);\n    }\n\n    remove(accessor: RadioButton) {\n        this.accessors = this.accessors.filter((c) => {\n            return c[1] !== accessor;\n        })\n    }\n\n    select(accessor: RadioButton) {\n        this.accessors.forEach((c) => {\n            if (this.isSameGroup(c, accessor) && c[1] !== accessor) {\n                c[1].writeValue(accessor.value);\n            }\n        });\n    }\n\n    private isSameGroup(controlPair: [NgControl, RadioButton], accessor: RadioButton): boolean {\n        if (!controlPair[0].control) {\n            return false;\n        }\n\n        return controlPair[0].control.root === accessor.control.control.root && controlPair[1].name === accessor.name;\n    }\n}\n\n@Component({\n    selector: 'p-radioButton',\n    template: `\n        <div [ngStyle]=\"style\" [ngClass]=\"'ui-radiobutton ui-widget'\" [class]=\"styleClass\">\n            <div class=\"ui-helper-hidden-accessible\">\n                <input #rb type=\"radio\" [attr.id]=\"inputId\" [attr.name]=\"name\" [attr.value]=\"value\" [attr.tabindex]=\"tabindex\" [attr.aria-checked]=\"checked\" [attr.aria-label]=\"ariaLabel\"\n                [attr.aria-labelledby]=\"ariaLabelledBy\" [checked]=\"checked\" (change)=\"onChange($event)\" (focus)=\"onInputFocus($event)\" (blur)=\"onInputBlur($event)\" [disabled]=\"disabled\">\n            </div>\n            <div (click)=\"handleClick($event, rb, true)\" [attr.aria-checked]=\"checked\"\n                [ngClass]=\"{'ui-radiobutton-box ui-widget ui-state-default':true,\n                'ui-state-active':rb.checked,'ui-state-disabled':disabled,'ui-state-focus':focused}\">\n                <span class=\"ui-radiobutton-icon ui-clickable\" [ngClass]=\"{'pi pi-circle-on':rb.checked}\"></span>\n            </div>\n        </div>\n        <label (click)=\"select($event)\" [class]=\"labelStyleClass\"\n            [ngClass]=\"{'ui-radiobutton-label':true, 'ui-label-active':rb.checked, 'ui-label-disabled':disabled, 'ui-label-focus':focused}\"\n            *ngIf=\"label\" [attr.for]=\"inputId\">{{label}}</label>\n    `,\n    providers: [RADIO_VALUE_ACCESSOR],\n    changeDetection: ChangeDetectionStrategy.Default\n})\nexport class RadioButton implements ControlValueAccessor, OnInit, OnDestroy {\n\n    @Input() value: any;\n\n    @Input() formControlName: string;\n\n    @Input() name: string;\n\n    @Input() disabled: boolean;\n    \n    @Input() label: string;\n\n    @Input() tabindex: number;\n\n    @Input() inputId: string;\n\n    @Input() ariaLabelledBy: string;\n\n    @Input() ariaLabel: string;\n    \n    @Input() style: any;\n\n    @Input() styleClass: string;\n\n    @Input() labelStyleClass: string;\n\n    @Output() onClick: EventEmitter<any> = new EventEmitter();\n\n    @Output() onFocus: EventEmitter<any> = new EventEmitter();\n\n    @Output() onBlur: EventEmitter<any> = new EventEmitter();\n    \n    @ViewChild('rb') inputViewChild: ElementRef;\n            \n    public onModelChange: Function = () => {};\n    \n    public onModelTouched: Function = () => {};\n    \n    public checked: boolean;\n        \n    public focused: boolean;\n\n    control: NgControl;\n\n    constructor(public cd: ChangeDetectorRef, private injector: Injector, private registry: RadioControlRegistry) {}\n\n    ngOnInit() {\n        this.control = this.injector.get(NgControl);\n        this.checkName();\n        this.registry.add(this.control, this);\n    }\n\n    ngOnDestroy() {\n        this.registry.remove(this);\n    }\n    \n    handleClick(event, radioButton, focus) {\n        event.preventDefault();\n\n        if (this.disabled) {\n            return;\n        }\n\n        this.select(event);\n\n        if (focus) {\n            radioButton.focus();\n        }\n    }\n    \n    select(event) {\n        if (!this.disabled) {\n            this.inputViewChild.nativeElement.checked = true;\n            this.checked = true;\n            this.onModelChange(this.value);\n            this.registry.select(this);\n            this.onClick.emit(event);\n        }\n    }\n            \n    writeValue(value: any) : void {\n        this.checked = (value == this.value);\n\n        if (this.inputViewChild && this.inputViewChild.nativeElement) {\n            this.inputViewChild.nativeElement.checked = this.checked;\n        }\n        \n        this.cd.markForCheck();\n    }\n    \n    registerOnChange(fn: Function): void {\n        this.onModelChange = fn;\n    }\n\n    registerOnTouched(fn: Function): void {\n        this.onModelTouched = fn;\n    }\n    \n    setDisabledState(val: boolean): void {\n        this.disabled = val;\n    }\n    \n    onInputFocus(event) {\n        this.focused = true;\n        this.onFocus.emit(event);\n    }\n\n    onInputBlur(event) {\n        this.focused = false;\n        this.onModelTouched();\n        this.onBlur.emit(event);\n    }\n    \n    onChange(event) {\n        this.select(event);\n    }\n\n    focus() {\n        this.inputViewChild.nativeElement.focus();\n    }\n\n    private checkName() {\n        if (this.name && this.formControlName && this.name !== this.formControlName) {\n            this.throwNameError();\n        }\n        if (!this.name && this.formControlName) {\n            this.name = this.formControlName;\n        }\n    }\n\n    private throwNameError() {\n        throw new Error(`\n          If you define both a name and a formControlName attribute on your radio button, their values\n          must match. Ex: <p-radioButton formControlName=\"food\" name=\"food\"></p-radioButton>\n        `);\n    }\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [RadioButton],\n    declarations: [RadioButton]\n})\nexport class RadioButtonModule { }"]}