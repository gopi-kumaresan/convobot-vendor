{"version":3,"file":"primeng-lts-button.umd.js","sources":["primeng-lts/button/button.ts"],"names":["DomHandler","ElementRef","Input","Directive","EventEmitter","Output","Component","ChangeDetectionStrategy","NgModule","CommonModule"],"mappings":"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","sourcesContent":["import {NgModule,Directive,Component,ElementRef,EventEmitter,AfterViewInit,Output,OnDestroy,Input,ChangeDetectionStrategy} from '@angular/core';\nimport {DomHandler} from 'primeng-lts/dom';\nimport {CommonModule} from '@angular/common';\n\n@Directive({\n    selector: '[pButton]'\n})\nexport class ButtonDirective implements AfterViewInit, OnDestroy {\n\n    @Input() iconPos: 'left' | 'right' = 'left';\n    \n    @Input() cornerStyleClass: string = 'ui-corner-all';\n        \n    public _label: string;\n    \n    public _icon: string;\n            \n    public initialized: boolean;\n\n    public _initialStyleClass: string;\n\n    constructor(public el: ElementRef) {}\n    \n    ngAfterViewInit() {\n        this._initialStyleClass = this.el.nativeElement.className;\n        DomHandler.addMultipleClasses(this.el.nativeElement, this.getStyleClass());\n        if (this.icon) {\n            let iconElement = document.createElement(\"span\");\n            iconElement.setAttribute(\"aria-hidden\", \"true\");\n            let iconPosClass = (this.iconPos == 'right') ? 'ui-button-icon-right': 'ui-button-icon-left';\n            iconElement.className = iconPosClass  + ' ui-clickable ' + this.icon;\n            this.el.nativeElement.appendChild(iconElement);\n        }\n        \n        let labelElement = document.createElement(\"span\");\n        if (this.icon && !this.label) {\n            labelElement.setAttribute('aria-hidden', 'true');\n        }\n        labelElement.className = 'ui-button-text ui-clickable';\n        labelElement.appendChild(document.createTextNode(this.label||'ui-btn'));\n        this.el.nativeElement.appendChild(labelElement);\n        this.initialized = true;\n    }\n        \n    getStyleClass(): string {\n        let styleClass = 'ui-button ui-widget ui-state-default ' + this.cornerStyleClass;\n        if (this.icon) {\n            if (this.label != null && this.label != undefined && this.label != \"\") {\n                if (this.iconPos == 'left')\n                    styleClass = styleClass + ' ui-button-text-icon-left';\n                else\n                    styleClass = styleClass + ' ui-button-text-icon-right';\n            }\n            else {\n                styleClass = styleClass + ' ui-button-icon-only';\n            }\n        }\n        else {\n            if (this.label) {\n                styleClass = styleClass + ' ui-button-text-only';\n            }\n            else {\n                styleClass = styleClass + ' ui-button-text-empty';\n            }\n        }\n        \n        return styleClass;\n    }\n\n    setStyleClass() {\n        let styleClass = this.getStyleClass();\n        this.el.nativeElement.className = styleClass + ' ' + this._initialStyleClass;\n    }\n    \n    @Input() get label(): string {\n        return this._label;\n    }\n\n    set label(val: string) {\n        this._label = val;\n        \n        if (this.initialized) {\n            DomHandler.findSingle(this.el.nativeElement, '.ui-button-text').textContent = this._label || 'ui-btn';\n\n            if (!this.icon) {\n                if (this._label) {\n                    DomHandler.removeClass(this.el.nativeElement, 'ui-button-text-empty');\n                    DomHandler.addClass(this.el.nativeElement, 'ui-button-text-only');\n                }\n                else {\n                    DomHandler.addClass(this.el.nativeElement, 'ui-button-text-empty');\n                    DomHandler.removeClass(this.el.nativeElement, 'ui-button-text-only');\n                }\n            }\n\n            this.setStyleClass();\n        }\n    }\n    \n    @Input() get icon(): string {\n        return this._icon;\n    }\n\n    set icon(val: string) {\n        this._icon = val;\n        \n        if (this.initialized) {\n            let iconPosClass = (this.iconPos == 'right') ? 'ui-button-icon-right': 'ui-button-icon-left';\n            DomHandler.findSingle(this.el.nativeElement, '.ui-clickable').className =\n                iconPosClass + ' ui-clickable ' + this.icon;\n            this.setStyleClass();\n        }\n    }\n        \n    ngOnDestroy() {\n        while(this.el.nativeElement.hasChildNodes()) {\n            this.el.nativeElement.removeChild(this.el.nativeElement.lastChild);\n        }\n        \n        this.initialized = false;\n    }\n}\n\n@Component({\n    selector: 'p-button',\n    template: `\n        <button [attr.type]=\"type\" [class]=\"styleClass\" [ngStyle]=\"style\" [disabled]=\"disabled\"\n            [ngClass]=\"{'ui-button ui-widget ui-state-default ui-corner-all':true,\n                        'ui-button-icon-only': (icon && !label),\n                        'ui-button-text-icon-left': (icon && label && iconPos === 'left'),\n                        'ui-button-text-icon-right': (icon && label && iconPos === 'right'),\n                        'ui-button-text-only': (!icon && label),\n                        'ui-button-text-empty': (!icon && !label),\n                        'ui-state-disabled': disabled}\"\n                        (click)=\"onClick.emit($event)\" (focus)=\"onFocus.emit($event)\" (blur)=\"onBlur.emit($event)\">\n            <ng-content></ng-content>\n            <span [ngClass]=\"{'ui-clickable': true,\n                        'ui-button-icon-left': (iconPos === 'left'), \n                        'ui-button-icon-right': (iconPos === 'right')}\"\n                        [class]=\"icon\" *ngIf=\"icon\" [attr.aria-hidden]=\"true\"></span>\n            <span class=\"ui-button-text ui-clickable\" [attr.aria-hidden]=\"icon && !label\">{{label||'ui-btn'}}</span>\n        </button>\n    `,\n    changeDetection: ChangeDetectionStrategy.Default\n})\nexport class Button {\n\n    @Input() type: string;\n\n    @Input() iconPos: string = 'left';\n\n    @Input() icon: string;\n\n    @Input() label: string;\n\n    @Input() disabled: boolean;\n\n    @Input() style: any;\n\n    @Input() styleClass: string;\n\n    @Output() onClick: EventEmitter<any> = new EventEmitter();\n\n    @Output() onFocus: EventEmitter<any> = new EventEmitter();\n\n    @Output() onBlur: EventEmitter<any> = new EventEmitter();\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [ButtonDirective,Button],\n    declarations: [ButtonDirective,Button]\n})\nexport class ButtonModule { }\n"]}