!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@angular/common"),require("@angular/router")):"function"==typeof define&&define.amd?define("primeng-lts/menubar",["exports","@angular/core","@angular/common","@angular/router"],t):t(((e=e||self)["primeng-lts"]=e["primeng-lts"]||{},e["primeng-lts"].menubar={}),e.ng.core,e.ng.common,e.ng.router)}(this,(function(e,t,n,i){"use strict";var o=this&&this.__decorate||function(e,t,n,i){var o,r=arguments.length,a=r<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,n,i);else for(var l=e.length-1;l>=0;l--)(o=e[l])&&(a=(r<3?o(a):r>3?o(t,n,a):o(t,n))||a);return r>3&&a&&Object.defineProperty(t,n,a),a},r=function(){function e(e,n,i){this.el=e,this.renderer=n,this.cd=i,this.autoZIndex=!0,this.baseZIndex=0,this.leafClick=new t.EventEmitter,this.menuHoverActive=!1}return Object.defineProperty(e.prototype,"parentActive",{get:function(){return this._parentActive},set:function(e){this.root||(this._parentActive=e,e||(this.activeItem=null))},enumerable:!0,configurable:!0}),e.prototype.onItemMouseEnter=function(e,t){t.disabled||this.mobileActive?e.preventDefault():this.root?this.activeItem&&(this.activeItem=t):this.activeItem=t},e.prototype.onItemClick=function(e,t){t.disabled?e.preventDefault():(t.url||t.routerLink||e.preventDefault(),t.command&&t.command({originalEvent:e,item:t}),t.items&&(this.activeItem&&t===this.activeItem?(this.activeItem=null,this.unbindDocumentClickListener()):(this.activeItem=t,this.root&&this.bindDocumentClickListener())),t.items||this.onLeafClick())},e.prototype.onLeafClick=function(){this.activeItem=null,this.root&&this.unbindDocumentClickListener(),this.leafClick.emit()},e.prototype.bindDocumentClickListener=function(){var e=this;this.documentClickListener||(this.documentClickListener=function(t){e.el&&!e.el.nativeElement.contains(t.target)&&(e.activeItem=null,e.cd.markForCheck(),e.unbindDocumentClickListener())},document.addEventListener("click",this.documentClickListener))},e.prototype.unbindDocumentClickListener=function(){this.documentClickListener&&(document.removeEventListener("click",this.documentClickListener),this.documentClickListener=null)},e.prototype.ngOnDestroy=function(){this.unbindDocumentClickListener()},e.ctorParameters=function(){return[{type:t.ElementRef},{type:t.Renderer2},{type:t.ChangeDetectorRef}]},o([t.Input()],e.prototype,"item",void 0),o([t.Input()],e.prototype,"root",void 0),o([t.Input()],e.prototype,"autoDisplay",void 0),o([t.Input()],e.prototype,"autoZIndex",void 0),o([t.Input()],e.prototype,"baseZIndex",void 0),o([t.Input()],e.prototype,"mobileActive",void 0),o([t.Input()],e.prototype,"parentActive",null),o([t.Output()],e.prototype,"leafClick",void 0),e=o([t.Component({selector:"p-menubarSub",template:'\n        <ul [ngClass]="{\'ui-menubar-root-list\':root, \'ui-widget-content ui-corner-all ui-submenu-list ui-shadow\':!root}"  [attr.role]="root ? \'menubar\' : \'menu\'">\n            <ng-template ngFor let-child [ngForOf]="(root ? item : item.items)">\n                <li *ngIf="child.separator" class="ui-menu-separator ui-widget-content" [ngClass]="{\'ui-helper-hidden\': child.visible === false}" [ngStyle]="child.style" [class]="child.styleClass" role="separator">\n                <li *ngIf="!child.separator" [ngClass]="{\'ui-menuitem ui-corner-all\':true, \'ui-menu-parent\':child.items,\'ui-menuitem-active\':child==activeItem,\'ui-helper-hidden\': child.visible === false}" (mouseenter)="onItemMouseEnter($event,child)"  role="none">\n                    <a *ngIf="!child.routerLink" [attr.href]="child.url" [attr.data-automationid]="child.automationId" [attr.target]="child.target" [attr.title]="child.title" [attr.id]="child.id" role="menuitem" (click)="onItemClick($event, child)"\n                         [ngClass]="{\'ui-menuitem-link ui-corner-all\':true,\'ui-state-disabled\':child.disabled}" [attr.tabindex]="child.disabled ? null : \'0\'" [attr.aria-haspopup]="item.items != null" [attr.aria-expanded]="item === activeItem">\n                        <span class="ui-menuitem-icon" *ngIf="child.icon" [ngClass]="child.icon"></span>\n                        <span class="ui-menuitem-text">{{child.label}}</span>\n                        <span class="ui-submenu-icon pi pi-fw" *ngIf="child.items" [ngClass]="{\'pi-caret-down\':root,\'pi-caret-right\':!root}"></span>\n                    </a>\n                    <a *ngIf="child.routerLink" [routerLink]="child.routerLink" [attr.data-automationid]="child.automationId" [queryParams]="child.queryParams" [routerLinkActive]="\'ui-menuitem-link-active\'" [routerLinkActiveOptions]="child.routerLinkActiveOptions||{exact:false}"\n                        [attr.target]="child.target" [attr.title]="child.title" [attr.id]="child.id" [attr.tabindex]="child.disabled ? null : \'0\'" role="menuitem"\n                        (click)="onItemClick($event, child)" [ngClass]="{\'ui-menuitem-link ui-corner-all\':true,\'ui-state-disabled\':child.disabled}" [fragment]="child.fragment" [queryParamsHandling]="child.queryParamsHandling" [preserveFragment]="child.preserveFragment" [skipLocationChange]="child.skipLocationChange" [replaceUrl]="child.replaceUrl" [state]="child.state">\n                        <span class="ui-menuitem-icon" *ngIf="child.icon" [ngClass]="child.icon"></span>\n                        <span class="ui-menuitem-text">{{child.label}}</span>\n                        <span class="ui-submenu-icon pi pi-fw" *ngIf="child.items" [ngClass]="{\'pi-caret-down\':root,\'pi-caret-right\':!root}"></span>\n                    </a>\n                    <p-menubarSub class="ui-submenu" [parentActive]="child === activeItem" [item]="child" *ngIf="child.items" [mobileActive]="mobileActive" [autoDisplay]="true" (leafClick)="onLeafClick()"></p-menubarSub>\n                </li>\n            </ng-template>\n        </ul>\n    '})],e)}(),a=function(){function e(e,t){this.el=e,this.renderer=t,this.autoZIndex=!0,this.baseZIndex=0}return Object.defineProperty(e.prototype,"autoDisplay",{get:function(){return this._autoDisplay},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"utc",{set:function(e){console.log("AutoDisplay property is deprecated and functionality is not available.")},enumerable:!0,configurable:!0}),e.ctorParameters=function(){return[{type:t.ElementRef},{type:t.Renderer2}]},o([t.Input()],e.prototype,"model",void 0),o([t.Input()],e.prototype,"style",void 0),o([t.Input()],e.prototype,"styleClass",void 0),o([t.Input()],e.prototype,"autoZIndex",void 0),o([t.Input()],e.prototype,"baseZIndex",void 0),o([t.Input()],e.prototype,"autoDisplay",null),e=o([t.Component({selector:"p-menubar",template:'\n        <div [ngClass]="{\'ui-menubar ui-widget ui-widget-content ui-corner-all\':true}" [class]="styleClass" [ngStyle]="style">\n            <p-menubarSub [item]="model" root="root" [baseZIndex]="baseZIndex" [autoZIndex]="autoZIndex">\n                <ng-content></ng-content>\n            </p-menubarSub>\n            <div class="ui-menubar-custom">\n                <ng-content></ng-content>\n            </div>\n        </div>\n    ',changeDetection:t.ChangeDetectionStrategy.Default})],e)}(),l=function(){function e(){}return e=o([t.NgModule({imports:[n.CommonModule,i.RouterModule],exports:[a,i.RouterModule],declarations:[a,r]})],e)}();e.Menubar=a,e.MenubarModule=l,e.MenubarSub=r,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=primeng-lts-menubar.umd.min.js.map