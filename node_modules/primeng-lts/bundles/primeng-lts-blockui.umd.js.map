{"version":3,"file":"primeng-lts-blockui.umd.js","sources":["primeng-lts/blockui/blockui.ts"],"names":["DomHandler","ElementRef","Input","ViewChild","Component","ChangeDetectionStrategy","NgModule","CommonModule"],"mappings":"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","sourcesContent":["import {NgModule,Component,Input,AfterViewInit,OnDestroy,ElementRef,ViewChild,ChangeDetectionStrategy} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {DomHandler} from 'primeng-lts/dom';\n\n@Component({\n    selector: 'p-blockUI',\n    template: `\n        <div #mask [class]=\"styleClass\" [ngClass]=\"{'ui-blockui-document':!target, 'ui-blockui ui-widget-overlay': true}\" [ngStyle]=\"{display: blocked ? 'block' : 'none'}\">\n            <ng-content></ng-content>\n        </div>\n    `,\n    changeDetection: ChangeDetectionStrategy.Default\n})\nexport class BlockUI implements AfterViewInit,OnDestroy {\n\n    @Input() target: any;\n    \n    @Input() autoZIndex: boolean = true;\n    \n    @Input() baseZIndex: number = 0;\n    \n    @Input() styleClass: string;\n    \n    @ViewChild('mask') mask: ElementRef;\n    \n    _blocked: boolean;\n        \n    constructor(public el: ElementRef) {}\n    \n    @Input() get blocked(): boolean {\n        return this._blocked;\n    }\n    \n    set blocked(val: boolean) {\n        this._blocked = val;\n        \n        if (this.mask && this.mask.nativeElement) {\n            if (this._blocked)\n                this.block();\n            else\n                this.unblock();\n        }\n    }\n    \n    ngAfterViewInit() {\n        if (this.target && !this.target.getBlockableElement) {\n            throw 'Target of BlockUI must implement BlockableUI interface';\n        }\n    }\n        \n    block() {\n        if (this.target) {\n            this.target.getBlockableElement().appendChild(this.mask.nativeElement);\n            let style = this.target.style||{};\n            style.position = 'relative';\n            this.target.style = style;\n        }\n        else {\n            document.body.appendChild(this.mask.nativeElement);\n        }\n        \n        if (this.autoZIndex) {\n            this.mask.nativeElement.style.zIndex = String(this.baseZIndex + (++DomHandler.zindex));\n        }\n    }\n    \n    unblock() {\n        this.el.nativeElement.appendChild(this.mask.nativeElement);\n    }\n    \n    ngOnDestroy() {\n        this.unblock();\n    }\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [BlockUI],\n    declarations: [BlockUI]\n})\nexport class BlockUIModule { }"]}