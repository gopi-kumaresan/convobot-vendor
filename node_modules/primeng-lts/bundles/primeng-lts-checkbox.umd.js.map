{"version":3,"file":"primeng-lts-checkbox.umd.js","sources":["primeng-lts/checkbox/checkbox.ts"],"names":["NG_VALUE_ACCESSOR","forwardRef","EventEmitter","ChangeDetectorRef","Input","ViewChild","Output","Component","ChangeDetectionStrategy","NgModule","CommonModule"],"mappings":"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","sourcesContent":["import {NgModule,Component,Input,Output,EventEmitter,forwardRef,ChangeDetectorRef,ViewChild,ElementRef,ChangeDetectionStrategy} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {NG_VALUE_ACCESSOR, ControlValueAccessor, FormControl} from '@angular/forms';\n\nexport const CHECKBOX_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => Checkbox),\n  multi: true\n};\n\n@Component({\n    selector: 'p-checkbox',\n    template: `\n        <div [ngStyle]=\"style\" [ngClass]=\"{'ui-chkbox ui-widget': true,'ui-chkbox-readonly': readonly}\" [class]=\"styleClass\">\n            <div class=\"ui-helper-hidden-accessible\">\n                <input #cb type=\"checkbox\" [attr.id]=\"inputId\" [attr.name]=\"name\" [readonly]=\"readonly\" [value]=\"value\" [checked]=\"checked\" (focus)=\"onFocus()\" (blur)=\"onBlur()\"\n                [ngClass]=\"{'ui-state-focus':focused}\" (change)=\"handleChange($event)\" [disabled]=\"disabled\" [attr.tabindex]=\"tabindex\" [attr.aria-labelledby]=\"ariaLabelledBy\" [attr.aria-label]=\"ariaLabel\" [attr.aria-checked]=\"checked\"  [attr.required]=\"required\">\n            </div>\n            <div class=\"ui-chkbox-box ui-widget ui-corner-all ui-state-default\" (click)=\"onClick($event,cb,true)\" [ngClass]=\"{'ui-state-active':checked,'ui-state-disabled':disabled,'ui-state-focus':focused}\">\n                <span class=\"ui-chkbox-icon ui-clickable\" [ngClass]=\"checked ? checkboxIcon : null\"></span>\n            </div>\n        </div>\n        <label (click)=\"onClick($event,cb,true)\" [class]=\"labelStyleClass\"\n                [ngClass]=\"{'ui-chkbox-label': true, 'ui-label-active':checked, 'ui-label-disabled':disabled, 'ui-label-focus':focused}\"\n                *ngIf=\"label\" [attr.for]=\"inputId\">{{label}}</label>\n    `,\n    providers: [CHECKBOX_VALUE_ACCESSOR],\n    changeDetection: ChangeDetectionStrategy.Default\n})\nexport class Checkbox implements ControlValueAccessor {\n\n    @Input() value: any;\n\n    @Input() name: string;\n\n    @Input() disabled: boolean;\n    \n    @Input() binary: boolean;\n    \n    @Input() label: string;\n\n    @Input() ariaLabelledBy: string;\n\n    @Input() ariaLabel: string;\n\n    @Input() tabindex: number;\n\n    @Input() inputId: string;\n    \n    @Input() style: any;\n\n    @Input() styleClass: string;\n\n    @Input() labelStyleClass: string;\n    \n    @Input() formControl: FormControl;\n    \n    @Input() checkboxIcon: string = 'pi pi-check';\n    \n    @Input() readonly: boolean;\n\n    @Input() required: boolean;\n\n    @ViewChild('cb') inputViewChild: ElementRef;\n\n    @Output() onChange: EventEmitter<any> = new EventEmitter();\n    \n    model: any;\n    \n    onModelChange: Function = () => {};\n    \n    onModelTouched: Function = () => {};\n        \n    focused: boolean = false;\n    \n    checked: boolean = false;\n\n    constructor(private cd: ChangeDetectorRef) {}\n\n    onClick(event,checkbox,focus:boolean) {\n        event.preventDefault();\n        \n        if (this.disabled || this.readonly) {\n            return;\n        }\n        \n        this.checked = !this.checked;\n        this.updateModel(event);\n        \n        if (focus) {\n            checkbox.focus();\n        }\n    }\n    \n    updateModel(event) {\n        if (!this.binary) {\n            if (this.checked)\n                this.addValue();\n            else\n                this.removeValue();\n\n            this.onModelChange(this.model);\n            \n            if (this.formControl) {\n                this.formControl.setValue(this.model);\n            }\n        }\n        else {\n            this.onModelChange(this.checked);\n        }\n        \n        this.onChange.emit({checked:this.checked, originalEvent: event});\n    }\n    \n    handleChange(event)Â {\n        if (!this.readonly) {\n            this.checked = event.target.checked;\n            this.updateModel(event);\n        }\n    }\n\n    isChecked(): boolean {\n        if (this.binary)\n            return this.model;\n        else\n            return this.model && this.model.indexOf(this.value) > -1;\n    }\n\n    removeValue() {\n        this.model = this.model.filter(val => val !== this.value);\n    }\n\n    addValue() {\n        if (this.model)\n            this.model = [...this.model, this.value];\n        else\n            this.model = [this.value];\n    }\n    \n    onFocus() {\n        this.focused = true;\n    }\n\n    onBlur() {\n        this.focused = false;\n        this.onModelTouched();\n    }\n\n    focus() {\n        this.inputViewChild.nativeElement.focus();\n    }\n     \n    writeValue(model: any) : void {\n        this.model = model;\n        this.checked = this.isChecked();\n        this.cd.markForCheck();\n    }\n    \n    registerOnChange(fn: Function): void {\n        this.onModelChange = fn;\n    }\n\n    registerOnTouched(fn: Function): void {\n        this.onModelTouched = fn;\n    }\n    \n    setDisabledState(val: boolean): void {\n        this.disabled = val;\n    }\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [Checkbox],\n    declarations: [Checkbox]\n})\nexport class CheckboxModule { }\n"]}