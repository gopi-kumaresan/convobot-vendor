{"version":3,"file":"primeng-lts-messages.umd.js","sources":["primeng-lts/messages/messages.ts"],"names":["EventEmitter","MessageService","Optional","ElementRef","Input","ContentChildren","PrimeTemplate","Output","Component","trigger","state","style","transition","animate","ChangeDetectionStrategy","NgModule","CommonModule"],"mappings":"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","sourcesContent":["import {NgModule,Component,OnDestroy,Input,Output,EventEmitter,AfterContentInit,Optional,ElementRef,ChangeDetectionStrategy,ContentChildren,QueryList,TemplateRef} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {trigger,state,style,transition,animate} from '@angular/animations';\nimport {Message,PrimeTemplate,MessageService} from 'primeng-lts/api';\nimport {Subscription} from 'rxjs';\n\n@Component({\n    selector: 'p-messages',\n    template: `\n        <div *ngIf=\"hasMessages()\" class=\"ui-messages ui-widget ui-corner-all\"\n                    [ngClass]=\"getSeverityClass()\" role=\"alert\" [ngStyle]=\"style\" [class]=\"styleClass\"\n                    [@messageAnimation]=\"{value: 'visible', params: {showTransitionParams: showTransitionOptions, hideTransitionParams: hideTransitionOptions}}\">\n            <a tabindex=\"0\" class=\"ui-messages-close\" (click)=\"clear($event)\" (keydown.enter)=\"clear($event)\" *ngIf=\"closable\">\n                <i class=\"pi pi-times\"></i>\n            </a>\n            <span class=\"ui-messages-icon pi\" [ngClass]=\"icon\"></span>\n            <ng-container *ngTemplateOutlet=\"contentTemplate\"></ng-container>\n            <ul *ngIf=\"value && value.length\">\n                <li *ngFor=\"let msg of value\">\n                    <div *ngIf=\"!escape; else escapeOut\">\n                        <span *ngIf=\"msg.summary\" class=\"ui-messages-summary\" [innerHTML]=\"msg.summary\"></span>\n                        <span *ngIf=\"msg.detail\" class=\"ui-messages-detail\" [innerHTML]=\"msg.detail\"></span>\n                    </div>\n                    <ng-template #escapeOut>\n                        <span *ngIf=\"msg.summary\" class=\"ui-messages-summary\">{{msg.summary}}</span>\n                        <span *ngIf=\"msg.detail\" class=\"ui-messages-detail\">{{msg.detail}}</span>\n                    </ng-template>\n                </li>\n            </ul>\n        </div>\n    `,\n    animations: [\n        trigger('messageAnimation', [\n            state('visible', style({\n                transform: 'translateY(0)',\n                opacity: 1\n            })),\n            transition('void => *', [\n                style({transform: 'translateY(-25%)', opacity: 0}),\n                animate('{{showTransitionParams}}')\n            ]),\n            transition('* => void', [\n                animate(('{{hideTransitionParams}}'), style({\n                    opacity: 0,\n                    transform: 'translateY(-25%)'\n                }))\n            ])\n        ])\n    ],\n    changeDetection: ChangeDetectionStrategy.Default\n})\nexport class Messages implements AfterContentInit, OnDestroy {\n\n    @Input() value: Message[];\n\n    @Input() closable: boolean = true;\n\n    @Input() style: any;\n\n    @Input() styleClass: string;\n\n    @Input() enableService: boolean = true;\n\n    @Input() key: string;\n\n    @Input() escape: boolean = true;\n\n    @Input() severity: string;\n\n    @Input() showTransitionOptions: string = '300ms ease-out';\n\n    @Input() hideTransitionOptions: string = '250ms ease-in';\n\n    @ContentChildren(PrimeTemplate) templates: QueryList<any>;\n\n    @Output() valueChange: EventEmitter<Message[]> = new EventEmitter<Message[]>();\n\n    messageSubscription: Subscription;\n\n    clearSubscription: Subscription;\n\n    contentTemplate: TemplateRef<any>;\n\n    constructor(@Optional() public messageService: MessageService, public el: ElementRef) {}\n\n    ngAfterContentInit() {\n        this.templates.forEach((item) => {\n            switch(item.getType()) {\n                case 'content':\n                    this.contentTemplate = item.template;\n                break;\n\n                default:\n                    this.contentTemplate = item.template;\n                break;\n            }\n        });\n\n        if (this.messageService && this.enableService && !this.contentTemplate) {\n            this.messageSubscription = this.messageService.messageObserver.subscribe((messages: any) => {\n                if (messages) {\n                    if (messages instanceof Array) {\n                        let filteredMessages = messages.filter(m => this.key === m.key);\n                        this.value = this.value ? [...this.value, ...filteredMessages] : [...filteredMessages];\n                    }\n                    else if (this.key === messages.key) {\n                        this.value = this.value ? [...this.value, ...[messages]] : [messages];\n                    }\n                }\n            });\n\n            this.clearSubscription = this.messageService.clearObserver.subscribe(key => {\n                if (key) {\n                    if (this.key === key) {\n                        this.value = null;\n                    }\n                }\n                else {\n                    this.value = null;\n                }\n            });\n        }\n    }\n\n    hasMessages() {\n        let parentEl = this.el.nativeElement.parentElement;\n        if (parentEl && parentEl.offsetParent) {\n            return this.contentTemplate != null || this.value && this.value.length > 0;\n        }\n\n        return false;\n    }\n\n    getSeverityClass() {\n        if (this.severity) {\n            return 'ui-messages-' + this.severity;\n        }\n        else {\n            const msg = this.value[0];\n            if (msg) {\n                const severities = ['info', 'warn', 'error', 'success'];\n                const severity = severities.find(item => item === msg.severity);\n\n                return (severity || msg.severity) && `ui-messages-${severity ? severity : msg.severity}`;\n            }\n        }\n\n        return null;\n    }\n\n    clear(event) {\n        this.value = [];\n        this.valueChange.emit(this.value);\n\n        event.preventDefault();\n    }\n\n    get icon(): string {\n        const severity = this.severity || (this.hasMessages() ? this.value[0].severity : null);\n\n        if (this.hasMessages()) {\n            switch(severity) {\n                case 'success':\n                    return 'pi-check';\n                break;\n\n                case 'info':\n                    return 'pi-info-circle';\n                break;\n\n                case 'error':\n                    return 'pi-times';\n                break;\n\n                case 'warn':\n                    return 'pi-exclamation-triangle';\n                break;\n\n                default:\n                    if (severity && this.value[0].icon) {\n                        return this.value[0].icon;\n                    }\n                    else {\n                        return 'pi-info-circle';\n                    }\n                break;\n            }\n        }\n\n        return null;\n    }\n\n    ngOnDestroy() {\n        if (this.messageSubscription) {\n            this.messageSubscription.unsubscribe();\n        }\n\n        if (this.clearSubscription) {\n            this.clearSubscription.unsubscribe();\n        }\n    }\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [Messages],\n    declarations: [Messages]\n})\nexport class MessagesModule { }\n"]}