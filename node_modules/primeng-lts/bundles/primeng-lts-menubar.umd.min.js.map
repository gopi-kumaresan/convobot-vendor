{"version":3,"sources":["ng://primeng-lts/menubar/menubar.ts"],"names":["MenubarSub","el","renderer","cd","this","autoZIndex","baseZIndex","leafClick","EventEmitter","menuHoverActive","Object","defineProperty","prototype","_parentActive","value","root","activeItem","onItemMouseEnter","event","item","disabled","mobileActive","preventDefault","onItemClick","url","routerLink","command","originalEvent","items","unbindDocumentClickListener","bindDocumentClickListener","onLeafClick","emit","_this","documentClickListener","nativeElement","contains","target","markForCheck","document","addEventListener","removeEventListener","ngOnDestroy","ElementRef","Renderer2","ChangeDetectorRef","__decorate","Input","Output","Component","selector","template","Menubar","_autoDisplay","_utc","console","log","changeDetection","ChangeDetectionStrategy","Default","MenubarModule","NgModule","imports","CommonModule","RouterModule","exports","declarations"],"mappings":"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","sourcesContent":["import { NgModule, Component, ElementRef, Input, Renderer2, OnDestroy,ChangeDetectorRef, ChangeDetectionStrategy, EventEmitter, Output } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DomHandler } from 'primeng-lts/dom';\nimport { MenuItem } from 'primeng-lts/api';\nimport { RouterModule } from '@angular/router';\n\n@Component({\n    selector: 'p-menubarSub',\n    template: `\n        <ul [ngClass]=\"{'ui-menubar-root-list':root, 'ui-widget-content ui-corner-all ui-submenu-list ui-shadow':!root}\"  [attr.role]=\"root ? 'menubar' : 'menu'\">\n            <ng-template ngFor let-child [ngForOf]=\"(root ? item : item.items)\">\n                <li *ngIf=\"child.separator\" class=\"ui-menu-separator ui-widget-content\" [ngClass]=\"{'ui-helper-hidden': child.visible === false}\" [ngStyle]=\"child.style\" [class]=\"child.styleClass\" role=\"separator\">\n                <li *ngIf=\"!child.separator\" [ngClass]=\"{'ui-menuitem ui-corner-all':true, 'ui-menu-parent':child.items,'ui-menuitem-active':child==activeItem,'ui-helper-hidden': child.visible === false}\" (mouseenter)=\"onItemMouseEnter($event,child)\"  role=\"none\">\n                    <a *ngIf=\"!child.routerLink\" [attr.href]=\"child.url\" [attr.data-automationid]=\"child.automationId\" [attr.target]=\"child.target\" [attr.title]=\"child.title\" [attr.id]=\"child.id\" role=\"menuitem\" (click)=\"onItemClick($event, child)\"\n                         [ngClass]=\"{'ui-menuitem-link ui-corner-all':true,'ui-state-disabled':child.disabled}\" [attr.tabindex]=\"child.disabled ? null : '0'\" [attr.aria-haspopup]=\"item.items != null\" [attr.aria-expanded]=\"item === activeItem\">\n                        <span class=\"ui-menuitem-icon\" *ngIf=\"child.icon\" [ngClass]=\"child.icon\"></span>\n                        <span class=\"ui-menuitem-text\">{{child.label}}</span>\n                        <span class=\"ui-submenu-icon pi pi-fw\" *ngIf=\"child.items\" [ngClass]=\"{'pi-caret-down':root,'pi-caret-right':!root}\"></span>\n                    </a>\n                    <a *ngIf=\"child.routerLink\" [routerLink]=\"child.routerLink\" [attr.data-automationid]=\"child.automationId\" [queryParams]=\"child.queryParams\" [routerLinkActive]=\"'ui-menuitem-link-active'\" [routerLinkActiveOptions]=\"child.routerLinkActiveOptions||{exact:false}\"\n                        [attr.target]=\"child.target\" [attr.title]=\"child.title\" [attr.id]=\"child.id\" [attr.tabindex]=\"child.disabled ? null : '0'\" role=\"menuitem\"\n                        (click)=\"onItemClick($event, child)\" [ngClass]=\"{'ui-menuitem-link ui-corner-all':true,'ui-state-disabled':child.disabled}\" [fragment]=\"child.fragment\" [queryParamsHandling]=\"child.queryParamsHandling\" [preserveFragment]=\"child.preserveFragment\" [skipLocationChange]=\"child.skipLocationChange\" [replaceUrl]=\"child.replaceUrl\" [state]=\"child.state\">\n                        <span class=\"ui-menuitem-icon\" *ngIf=\"child.icon\" [ngClass]=\"child.icon\"></span>\n                        <span class=\"ui-menuitem-text\">{{child.label}}</span>\n                        <span class=\"ui-submenu-icon pi pi-fw\" *ngIf=\"child.items\" [ngClass]=\"{'pi-caret-down':root,'pi-caret-right':!root}\"></span>\n                    </a>\n                    <p-menubarSub class=\"ui-submenu\" [parentActive]=\"child === activeItem\" [item]=\"child\" *ngIf=\"child.items\" [mobileActive]=\"mobileActive\" [autoDisplay]=\"true\" (leafClick)=\"onLeafClick()\"></p-menubarSub>\n                </li>\n            </ng-template>\n        </ul>\n    `\n})\nexport class MenubarSub implements OnDestroy {\n\n    @Input() item: MenuItem;\n\n    @Input() root: boolean;\n\n    @Input() autoDisplay: boolean;\n\n    @Input() autoZIndex: boolean = true;\n\n    @Input() baseZIndex: number = 0;\n\n    @Input() mobileActive: boolean;\n\n    @Input() get parentActive():boolean \n    {\n        return this._parentActive;\n    }\n    set parentActive(value) {\n        if (!this.root) {\n            this._parentActive = value;\n\n            if (!value)\n                this.activeItem = null;\n        }\n    }\n\n    @Output() leafClick: EventEmitter<any> = new EventEmitter();\n\n    _parentActive: boolean;\n\n    documentClickListener: any;\n\n    menuHoverActive: boolean = false;\n\n    activeItem: any;\n\n    constructor(public el: ElementRef, public renderer: Renderer2, private cd: ChangeDetectorRef) { }\n\n    onItemMouseEnter(event, item) {\n        if (item.disabled || this.mobileActive) {\n            event.preventDefault();\n            return;\n        }\n\n        if (this.root) {\n            if (this.activeItem) {\n                this.activeItem = item;\n            }\n        }\n        else {\n            this.activeItem = item;\n        }\n    }\n\n    onItemClick(event, item) {\n        if (item.disabled) {\n            event.preventDefault();\n            return;\n        }\n\n        if (!item.url && !item.routerLink) {\n            event.preventDefault();\n        }\n\n        if (item.command) {\n            item.command({\n                originalEvent: event,\n                item: item\n            });\n        }\n        \n        if (item.items) {\n            if (this.activeItem && item === this.activeItem) {\n                this.activeItem = null;\n                this.unbindDocumentClickListener();\n            }\n            else {\n                this.activeItem = item;\n                if (this.root) {\n                    this.bindDocumentClickListener();\n                }\n            }\n        }\n\n        if (!item.items) {\n            this.onLeafClick();\n        }\n    }\n\n    onLeafClick() {\n        this.activeItem = null;\n        if (this.root) {\n            this.unbindDocumentClickListener();\n        }\n\n        this.leafClick.emit();\n    }\n\n    bindDocumentClickListener() {\n        if (!this.documentClickListener) {\n            this.documentClickListener = (event) => {\n                if (this.el && !this.el.nativeElement.contains(event.target)) {\n                    this.activeItem = null;\n                    this.cd.markForCheck();\n                    this.unbindDocumentClickListener();\n                }\n            };\n\n            document.addEventListener('click', this.documentClickListener);\n        }\n    }\n\n    unbindDocumentClickListener() {\n        if (this.documentClickListener) {\n            document.removeEventListener('click', this.documentClickListener);\n            this.documentClickListener = null;\n        }\n    }\n\n    ngOnDestroy() {\n        this.unbindDocumentClickListener();\n    }\n}\n\n@Component({\n    selector: 'p-menubar',\n    template: `\n        <div [ngClass]=\"{'ui-menubar ui-widget ui-widget-content ui-corner-all':true}\" [class]=\"styleClass\" [ngStyle]=\"style\">\n            <p-menubarSub [item]=\"model\" root=\"root\" [baseZIndex]=\"baseZIndex\" [autoZIndex]=\"autoZIndex\">\n                <ng-content></ng-content>\n            </p-menubarSub>\n            <div class=\"ui-menubar-custom\">\n                <ng-content></ng-content>\n            </div>\n        </div>\n    `,\n    changeDetection: ChangeDetectionStrategy.Default\n})\nexport class Menubar {\n\n    @Input() model: MenuItem[];\n\n    @Input() style: any;\n\n    @Input() styleClass: string;\n\n    @Input() autoZIndex: boolean = true;\n\n    @Input() baseZIndex: number = 0;\n\n    private _autoDisplay: boolean;\n\n    @Input() get autoDisplay(): boolean {\n        return this._autoDisplay;\n    }\n    set utc(_utc: boolean) {\n        console.log(\"AutoDisplay property is deprecated and functionality is not available.\");\n    }\n\n    constructor(public el: ElementRef, public renderer: Renderer2) { }\n}\n\n@NgModule({\n    imports: [CommonModule, RouterModule],\n    exports: [Menubar, RouterModule],\n    declarations: [Menubar, MenubarSub]\n})\nexport class MenubarModule { }\n"]}