{"version":3,"sources":["ng://primeng-lts/tieredmenu/tieredmenu.ts"],"names":["TieredMenuSub","el","renderer","cd","this","autoZIndex","baseZIndex","leafClick","EventEmitter","keydownItem","menuHoverActive","Object","defineProperty","prototype","_parentActive","value","root","activeItem","onItemMouseEnter","event","item","disabled","mobileActive","preventDefault","autoDisplay","popup","bindDocumentClickListener","onItemClick","url","routerLink","command","originalEvent","items","unbindDocumentClickListener","onLeafClick","emit","onItemKeyDown","listItem","currentTarget","parentElement","key","nextItem","findNextItem","children","focus","prevItem","findPrevItem","setTimeout","element","nextElementSibling","DomHandler","hasClass","previousElementSibling","onChildItemKeyDown","_this","documentClickListener","nativeElement","contains","target","markForCheck","document","addEventListener","removeEventListener","ngOnDestroy","ElementRef","Renderer2","ChangeDetectorRef","__decorate","Input","Output","Component","selector","template","TieredMenu","showTransitionOptions","hideTransitionOptions","toggle","visible","hide","show","preventDocumentDefault","parentActive","onOverlayAnimationStart","toState","container","moveOnTop","appendOverlay","absolutePosition","bindDocumentResizeListener","onOverlayHide","appendTo","body","appendChild","restoreOverlayAppend","style","zIndex","String","zindex","onWindowResize","listen","documentResizeListener","bind","window","unbindDocumentResizeListener","animations","trigger","state","transform","opacity","transition","animate","changeDetection","ChangeDetectionStrategy","Default","TieredMenuModule","NgModule","imports","CommonModule","RouterModule","exports","declarations"],"mappings":"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","sourcesContent":["import {NgModule,Component,ElementRef,OnDestroy,Input,Renderer2,Inject,forwardRef,ChangeDetectorRef,AfterViewInit,ChangeDetectionStrategy, EventEmitter, Output} from '@angular/core';\nimport {trigger,state,style,transition,animate,AnimationEvent} from '@angular/animations';\nimport {CommonModule} from '@angular/common';\nimport {DomHandler} from 'primeng-lts/dom';\nimport {MenuItem} from 'primeng-lts/api';\nimport {RouterModule} from '@angular/router';\n\n@Component({\n    selector: 'p-tieredMenuSub',\n    template: `\n        <ul [ngClass]=\"{'ui-widget-content ui-corner-all ui-shadow ui-submenu-list': !root}\" role=\"menubar\">\n            <ng-template ngFor let-child [ngForOf]=\"(root ? item : item.items)\">\n                <li *ngIf=\"child.separator\" class=\"ui-menu-separator ui-widget-content\" [ngClass]=\"{'ui-helper-hidden': child.visible === false}\" role=\"separator\">\n                <li *ngIf=\"!child.separator\" [ngClass]=\"{'ui-menuitem ui-widget ui-corner-all':true,'ui-menuitem-active':child==activeItem,'ui-helper-hidden': child.visible === false}\"\n                    [class]=\"child.styleClass\" [ngStyle]=\"child.style\" role=\"none\"\n                    (mouseenter)=\"onItemMouseEnter($event, child)\">\n                    <a *ngIf=\"!child.routerLink\" (keydown)=\"onItemKeyDown($event, child)\" [attr.href]=\"child.url\" class=\"ui-menuitem-link ui-corner-all\" [attr.target]=\"child.target\" [attr.tabindex]=\"child.disabled ? null : '0'\" [attr.title]=\"child.title\" [attr.id]=\"child.id\" \n                        [ngClass]=\"{'ui-state-disabled':child.disabled}\" (click)=\"onItemClick($event, child)\" role=\"menuitem\" [attr.aria-haspopup]=\"item.items != null\" [attr.aria-expanded]=\"item === activeItem\">\n                        <span class=\"ui-menuitem-icon\" *ngIf=\"child.icon\" [ngClass]=\"child.icon\"></span>\n                        <span class=\"ui-menuitem-text\">{{child.label}}</span>\n                        <span class=\"ui-submenu-icon pi pi-fw pi-caret-right\" *ngIf=\"child.items\"></span>\n                    </a>\n                    <a *ngIf=\"child.routerLink\" (keydown)=\"onItemKeyDown($event, child)\" [routerLink]=\"child.routerLink\" role=\"menuitem\" [queryParams]=\"child.queryParams\" [routerLinkActive]=\"'ui-menuitem-link-active'\" role=\"menuitem\" [attr.tabindex]=\"child.disabled ? null : '0'\"\n                        [routerLinkActiveOptions]=\"child.routerLinkActiveOptions||{exact:false}\"\n                        class=\"ui-menuitem-link ui-corner-all\" [attr.target]=\"child.target\" [attr.title]=\"child.title\" [attr.id]=\"child.id\"\n                        [ngClass]=\"{'ui-state-disabled':child.disabled}\" (click)=\"onItemClick($event, child)\"\n                        [fragment]=\"child.fragment\" [queryParamsHandling]=\"child.queryParamsHandling\" [preserveFragment]=\"child.preserveFragment\" [skipLocationChange]=\"child.skipLocationChange\" [replaceUrl]=\"child.replaceUrl\" [state]=\"child.state\">\n                        <span class=\"ui-menuitem-icon\" *ngIf=\"child.icon\" [ngClass]=\"child.icon\"></span>\n                        <span class=\"ui-menuitem-text\">{{child.label}}</span>\n                        <span class=\"ui-submenu-icon pi pi-fw pi-caret-right\" *ngIf=\"child.items\"></span>\n                    </a>\n                    <p-tieredMenuSub class=\"ui-submenu\" (keydownItem)=\"onChildItemKeyDown($event)\" [parentActive]=\"child === activeItem\" [item]=\"child\" *ngIf=\"child.items\" [mobileActive]=\"mobileActive\" [autoDisplay]=\"autoDisplay\" [popup]=\"popup\" (leafClick)=\"onLeafClick()\"></p-tieredMenuSub>\n                </li>\n            </ng-template>\n        </ul>\n    `\n})\nexport class TieredMenuSub implements OnDestroy {\n\n    @Input() item: MenuItem;\n    \n    @Input() root: boolean;\n\n    @Input() autoDisplay: boolean;\n\n    @Input() autoZIndex: boolean = true;\n\n    @Input() baseZIndex: number = 0;\n\n    @Input() mobileActive: boolean;\n    \n    @Input() popup: boolean;\n\n    @Input() get parentActive():boolean \n    {\n        return this._parentActive;\n    }\n    set parentActive(value) {\n        if (!this.root) {\n            this._parentActive = value;\n\n            if (!value)\n                this.activeItem = null;\n        }\n    }\n\n    @Output() leafClick: EventEmitter<any> = new EventEmitter();\n\n    @Output() keydownItem: EventEmitter<any> = new EventEmitter();\n\n    _parentActive: boolean;\n\n    documentClickListener: any;\n\n    menuHoverActive: boolean = false;\n\n    activeItem: any;\n\n    constructor(public el: ElementRef, public renderer: Renderer2, private cd: ChangeDetectorRef) { }\n\n    onItemMouseEnter(event, item) {\n        if (item.disabled || this.mobileActive) {\n            event.preventDefault();\n            return;\n        }\n\n        if (this.root) {\n            if (this.activeItem || this.autoDisplay || this.popup) {\n                this.activeItem = item;\n                this.bindDocumentClickListener();\n            }\n        }\n        else {\n            this.activeItem = item;\n        }\n    }\n\n    onItemClick(event, item) {\n        if (item.disabled) {\n            event.preventDefault();\n            return;\n        }\n\n        if (!item.url && !item.routerLink) {\n            event.preventDefault();\n        }\n\n        if (item.command) {\n            item.command({\n                originalEvent: event,\n                item: item\n            });\n        }\n\n        if (item.items) {\n            if (this.activeItem && item === this.activeItem) {\n                this.activeItem = null;\n                this.unbindDocumentClickListener();\n            }\n            else {\n                this.activeItem = item;\n                if (this.root) {\n                    this.bindDocumentClickListener();\n                }\n            }\n        }\n\n        if (!item.items) {\n            this.onLeafClick();\n        }\n    }\n\n    onLeafClick() {\n        this.activeItem = null;\n        if (this.root) {\n            this.unbindDocumentClickListener();\n        }\n\n        this.leafClick.emit();\n    }\n\n    onItemKeyDown(event, item) {\n        let listItem = event.currentTarget.parentElement;\n\n        switch (event.key) {\n            case 'ArrowDown':\n                var nextItem = this.findNextItem(listItem);\n                if (nextItem) {\n                    nextItem.children[0].focus();\n                }\n\n                event.preventDefault();\n            break;\n\n            case 'ArrowUp':\n                var prevItem = this.findPrevItem(listItem);\n                if (prevItem) {\n                    prevItem.children[0].focus();\n                }\n\n                event.preventDefault();\n            break;\n\n            case 'ArrowRight':\n                if (item.items) {\n                    this.activeItem = item;\n\n                    if (this.root) {\n                        this.bindDocumentClickListener();\n                    }\n\n                    setTimeout(() => {\n                        listItem.children[1].children[0].children[0].children[0].focus();\n                    }, 50);\n                }\n\n                event.preventDefault();\n            break;\n\n            default:\n            break;\n        }\n\n        this.keydownItem.emit({\n            originalEvent: event,\n            element: listItem\n        });\n    }\n\n    findNextItem(item) {\n        let nextItem = item.nextElementSibling;\n\n        if (nextItem)\n            return DomHandler.hasClass(nextItem, 'ui-state-disabled') || !DomHandler.hasClass(nextItem, 'ui-menuitem') ? this.findNextItem(nextItem) : nextItem;\n        else\n            return null;\n    }\n\n    findPrevItem(item) {\n        let prevItem = item.previousElementSibling;\n\n        if (prevItem)\n            return DomHandler.hasClass(prevItem, 'ui-state-disabled') || !DomHandler.hasClass(prevItem, 'ui-menuitem') ? this.findPrevItem(prevItem) : prevItem;\n        else\n            return null;\n    }\n\n    onChildItemKeyDown(event) {\n        if (event.originalEvent.key === 'ArrowLeft') {\n            this.activeItem = null;\n\n            if (this.root) {\n                this.unbindDocumentClickListener();\n            }\n\n            event.element.parentElement.parentElement.parentElement.children[0].focus();\n        }\n    }\n\n    bindDocumentClickListener() {\n        if (!this.documentClickListener) {\n            this.documentClickListener = (event) => {\n                if (this.el && !this.el.nativeElement.contains(event.target)) {\n                    this.activeItem = null;\n                    this.cd.markForCheck();\n                    this.unbindDocumentClickListener();\n                }\n            };\n\n            document.addEventListener('click', this.documentClickListener);\n        }\n    }\n\n    unbindDocumentClickListener() {\n        if (this.documentClickListener) {\n            document.removeEventListener('click', this.documentClickListener);\n            this.documentClickListener = null;\n        }\n    }\n\n    ngOnDestroy() {\n        this.unbindDocumentClickListener();\n    }\n}\n\n@Component({\n    selector: 'p-tieredMenu',\n    template: `\n        <div [ngClass]=\"{'ui-tieredmenu ui-widget ui-widget-content ui-corner-all':true, 'ui-tieredmenu-dynamic ui-shadow':popup}\" [class]=\"styleClass\" [ngStyle]=\"style\"\n            [@overlayAnimation]=\"{value: 'visible', params: {showTransitionParams: showTransitionOptions, hideTransitionParams: hideTransitionOptions}}\" [@.disabled]=\"popup !== true\" \n            (@overlayAnimation.start)=\"onOverlayAnimationStart($event)\" (click)=\"preventDocumentDefault=true\" *ngIf=\"!popup || visible\">\n            <p-tieredMenuSub [item]=\"model\" root=\"root\" [parentActive]=\"parentActive\" [baseZIndex]=\"baseZIndex\" [autoZIndex]=\"autoZIndex\" (leafClick)=\"onLeafClick()\" [autoDisplay]=\"autoDisplay\" [popup]=\"popup\"></p-tieredMenuSub>\n        </div>\n    `,\n    animations: [\n        trigger('overlayAnimation', [\n            state('void', style({\n                transform: 'translateY(5%)',\n                opacity: 0\n            })),\n            state('visible', style({\n                transform: 'translateY(0)',\n                opacity: 1\n            })),\n            transition('void => visible', animate('{{showTransitionParams}}')),\n            transition('visible => void', animate('{{hideTransitionParams}}'))\n        ])\n    ],\n    changeDetection: ChangeDetectionStrategy.Default\n})\nexport class TieredMenu implements OnDestroy {\n\n    @Input() model: MenuItem[];\n\n    @Input() popup: boolean;\n\n    @Input() style: any;\n\n    @Input() styleClass: string;\n    \n    @Input() appendTo: any;\n\n    @Input() autoZIndex: boolean = true;\n    \n    @Input() baseZIndex: number = 0;\n\n    @Input() autoDisplay: boolean;\n\n    @Input() showTransitionOptions: string = '225ms ease-out';\n\n    @Input() hideTransitionOptions: string = '195ms ease-in';\n\n    parentActive: boolean;\n\n    container: HTMLDivElement;\n    \n    documentClickListener: any;\n\n    documentResizeListener: any;\n    \n    preventDocumentDefault: boolean;\n\n    target: any;\n\n    visible: boolean;\n    \n    constructor(public el: ElementRef, public renderer: Renderer2) {}\n    \n    toggle(event) {\n        if (this.visible)\n            this.hide();\n        else\n            this.show(event);\n\n        this.preventDocumentDefault = true;\n    }\n    \n    show(event) {\n        this.target = event.currentTarget;\n        this.visible = true;\n        this.parentActive = true;\n        this.preventDocumentDefault = true;\n    }\n\n    onOverlayAnimationStart(event: AnimationEvent) {\n        switch(event.toState) {\n            case 'visible':\n                if (this.popup) {\n                    this.container = event.element;\n                    this.moveOnTop();\n                    this.appendOverlay();\n                    DomHandler.absolutePosition(this.container, this.target);\n                    this.bindDocumentClickListener();\n                    this.bindDocumentResizeListener();\n                }\n            break;\n\n            case 'void':\n                this.onOverlayHide();\n            break;\n        }\n    }\n    \n    appendOverlay() {\n        if (this.appendTo) {\n            if (this.appendTo === 'body')\n                document.body.appendChild(this.container);\n            else\n                DomHandler.appendChild(this.container, this.appendTo);\n        }\n    }\n\n    restoreOverlayAppend() {\n        if (this.container && this.appendTo) {\n            this.el.nativeElement.appendChild(this.container);\n        }\n    }\n    \n    moveOnTop() {\n        if (this.autoZIndex) {\n            this.container.style.zIndex = String(this.baseZIndex + (++DomHandler.zindex));\n        }\n    }\n\n    hide() {\n        this.visible = false;\n        this.parentActive = false;\n    }\n\n    onWindowResize() {\n        this.hide();\n    }\n\n    onLeafClick() {\n        if (this.popup) {\n            this.hide();\n        }\n\n        this.unbindDocumentClickListener();\n    }\n    \n    bindDocumentClickListener() {\n        if (!this.documentClickListener) {\n            this.documentClickListener = this.renderer.listen('document', 'click', () => {\n                if (!this.preventDocumentDefault && this.popup) {\n                    this.hide();\n                }\n\n                this.preventDocumentDefault = false;\n            });\n        }\n    }\n\n    unbindDocumentClickListener() {\n        if (this.documentClickListener) {\n            this.documentClickListener();\n            this.documentClickListener = null;\n        }\n    }\n\n    bindDocumentResizeListener() {\n        this.documentResizeListener = this.onWindowResize.bind(this);\n        window.addEventListener('resize', this.documentResizeListener);\n    }\n    \n    unbindDocumentResizeListener() {\n        if (this.documentResizeListener) {\n            window.removeEventListener('resize', this.documentResizeListener);\n            this.documentResizeListener = null;\n        }\n    }\n\n    onOverlayHide() {\n        this.unbindDocumentClickListener();\n        this.unbindDocumentResizeListener();\n        this.preventDocumentDefault = false;\n        this.target = null;\n    }\n    \n    ngOnDestroy() {\n        if (this.popup) {\n            this.restoreOverlayAppend();\n            this.onOverlayHide();\n        }\n    }\n\n}\n\n@NgModule({\n    imports: [CommonModule,RouterModule],\n    exports: [TieredMenu,RouterModule],\n    declarations: [TieredMenu,TieredMenuSub]\n})\nexport class TieredMenuModule { }\n"]}