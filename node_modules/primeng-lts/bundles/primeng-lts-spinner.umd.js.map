{"version":3,"file":"primeng-lts-spinner.umd.js","sources":["primeng-lts/spinner/spinner.ts"],"names":["NG_VALUE_ACCESSOR","forwardRef","EventEmitter","ElementRef","ChangeDetectorRef","Output","Input","ViewChild","Component","ChangeDetectionStrategy","NgModule","CommonModule","InputTextModule"],"mappings":"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","sourcesContent":["import {NgModule,Component,ElementRef,OnInit,Input,Output,EventEmitter,forwardRef,ViewChild,ChangeDetectorRef,ChangeDetectionStrategy} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {InputTextModule} from 'primeng-lts/inputtext';\nimport {NG_VALUE_ACCESSOR, ControlValueAccessor} from '@angular/forms';\n\nexport const SPINNER_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => Spinner),\n    multi: true\n};\n\n@Component({\n    selector: 'p-spinner',\n    template: `\n        <span class=\"ui-spinner ui-widget ui-corner-all\">\n            <input #inputfield type=\"text\" [attr.id]=\"inputId\" [value]=\"formattedValue||null\" [attr.name]=\"name\" [attr.aria-valumin]=\"min\" [attr.aria-valuemax]=\"max\" [attr.aria-valuenow]=\"value\" [attr.aria-labelledby]=\"ariaLabelledBy\"\n            [attr.size]=\"size\" [attr.maxlength]=\"maxlength\" [attr.tabindex]=\"tabindex\" [attr.placeholder]=\"placeholder\" [disabled]=\"disabled\" [readonly]=\"readonly\" [attr.required]=\"required\"\n            (keydown)=\"onInputKeydown($event)\" (blur)=\"onInputBlur($event)\" (input)=\"onInput($event)\" (change)=\"onInputChange($event)\" (focus)=\"onInputFocus($event)\"\n            [ngStyle]=\"inputStyle\" [class]=\"inputStyleClass\" [ngClass]=\"'ui-spinner-input ui-inputtext ui-widget ui-state-default ui-corner-all'\">\n            <button type=\"button\" [ngClass]=\"{'ui-spinner-button ui-spinner-up ui-corner-tr ui-button ui-widget ui-state-default':true,'ui-state-disabled':disabled}\" [disabled]=\"disabled||readonly\" tabindex=\"-1\" [attr.readonly]=\"readonly\"\n                (mouseleave)=\"onUpButtonMouseleave($event)\" (mousedown)=\"onUpButtonMousedown($event)\" (mouseup)=\"onUpButtonMouseup($event)\">\n                <span class=\"ui-spinner-button-icon pi pi-caret-up ui-clickable\"></span>\n            </button>\n            <button type=\"button\" [ngClass]=\"{'ui-spinner-button ui-spinner-down ui-corner-br ui-button ui-widget ui-state-default':true,'ui-state-disabled':disabled}\" [disabled]=\"disabled||readonly\" tabindex=\"-1\" [attr.readonly]=\"readonly\"\n                (mouseleave)=\"onDownButtonMouseleave($event)\" (mousedown)=\"onDownButtonMousedown($event)\" (mouseup)=\"onDownButtonMouseup($event)\">\n                <span class=\"ui-spinner-button-icon pi pi-caret-down ui-clickable\"></span>\n            </button>\n        </span>\n    `,\n    host: {\n        '[class.ui-inputwrapper-filled]': 'filled',\n        '[class.ui-inputwrapper-focus]': 'focus'\n    },\n    providers: [SPINNER_VALUE_ACCESSOR],\n    changeDetection: ChangeDetectionStrategy.Default\n})\nexport class Spinner implements OnInit,ControlValueAccessor {\n    \n    @Output() onChange: EventEmitter<any> = new EventEmitter();\n    \n    @Output() onFocus: EventEmitter<any> = new EventEmitter();\n\n    @Output() onBlur: EventEmitter<any> = new EventEmitter();\n\n    @Input() min: number;\n\n    @Input() max: number;\n    \n    @Input() maxlength: number;\n    \n    @Input() size: number;\n\n    @Input() placeholder: string;\n\n    @Input() inputId: string;\n\n    @Input() disabled: boolean;\n    \n    @Input() readonly: boolean;\n\n    @Input() tabindex: number;\n            \n    @Input() required: boolean;\n\n    @Input() name: string;\n\n    @Input() ariaLabelledBy: string;\n\n    @Input() inputStyle: any;\n\n    @Input() inputStyleClass: string;\n\n    @Input() formatInput: boolean;\n\n    @Input() decimalSeparator: string;\n\n    @Input() thousandSeparator: string;\n\n    @Input() precision: number;\n    \n    value: any;\n\n    _step: number = 1;\n\n    formattedValue: string;\n        \n    onModelChange: Function = () => {};\n    \n    onModelTouched: Function = () => {};\n    \n    keyPattern: RegExp = /[0-9\\+\\-]/;\n        \n    public timer: any;\n    \n    public focus: boolean;\n    \n    public filled: boolean;\n    \n    public negativeSeparator = '-';\n\n    localeDecimalSeparator: string;\n\n    localeThousandSeparator: string;\n\n    thousandRegExp: RegExp;\n\n    calculatedPrecision: number;\n    \n    @ViewChild('inputfield') inputfieldViewChild: ElementRef;\n\n    @Input() get step(): number {\n        return this._step;\n    }\n    set step(val:number) {\n        this._step = val;\n\n        if (this._step != null) {\n            let tokens = this.step.toString().split(/[,]|[.]/);\n            this.calculatedPrecision = tokens[1] ? tokens[1].length : undefined;\n        }\n    }\n    \n    constructor(public el: ElementRef, public cd: ChangeDetectorRef) {}\n\n    ngOnInit() {\n        if (this.formatInput) {\n            this.localeDecimalSeparator = (1.1).toLocaleString().substring(1, 2);\n            this.localeThousandSeparator = (1000).toLocaleString().substring(1, 2);\n            this.thousandRegExp = new RegExp(`[${this.thousandSeparator || this.localeThousandSeparator}]`, 'gim');\n\n            if (this.decimalSeparator && this.thousandSeparator && this.decimalSeparator === this.thousandSeparator) {\n                console.warn(\"thousandSeparator and decimalSeparator cannot have the same value.\");\n            }\n        }\n    }\n\n    repeat(event: Event, interval: number, dir: number) {\n        let i = interval||500;\n\n        this.clearTimer();\n        this.timer = setTimeout(() => {\n            this.repeat(event, 40, dir);\n        }, i);\n\n        this.spin(event, dir);\n    }\n    \n    spin(event: Event, dir: number) {\n        let step = this.step * dir;\n        let currentValue: number;\n        let precision = this.getPrecision();\n\n        if (this.value)\n            currentValue = (typeof this.value === 'string') ? this.parseValue(this.value) : this.value;\n        else\n            currentValue = 0;\n        \n        if (precision)\n            this.value = parseFloat(this.toFixed(currentValue + step, precision));\n        else\n            this.value = currentValue + step;\n    \n        if (this.maxlength !== undefined && this.value.toString().length > this.maxlength) {\n            this.value = currentValue;\n        }\n    \n        if (this.min !== undefined && this.value < this.min) {\n            this.value = this.min;\n        }\n\n        if (this.max !== undefined && this.value > this.max) {\n            this.value = this.max;\n        }\n        \n        this.formatValue();\n        this.onModelChange(this.value);\n        this.onChange.emit(event);\n    }\n\n    getPrecision() {\n        return this.precision === undefined ? this.calculatedPrecision : this.precision;\n    }\n    \n    toFixed(value: number, precision: number) {\n        let power = Math.pow(10, precision||0);\n        return String(Math.round(value * power) / power);\n    }\n    \n    onUpButtonMousedown(event: Event) {\n        if (!this.disabled) {\n            this.inputfieldViewChild.nativeElement.focus();\n            this.repeat(event, null, 1);\n            this.updateFilledState();\n            event.preventDefault();\n        }\n    }\n    \n    onUpButtonMouseup(event: Event) {\n        if (!this.disabled) {\n            this.clearTimer();\n        }\n    }\n    \n    onUpButtonMouseleave(event: Event) {\n        if (!this.disabled) {\n            this.clearTimer();\n        }\n    }\n    \n    onDownButtonMousedown(event: Event) {\n        if (!this.disabled) {\n            this.inputfieldViewChild.nativeElement.focus();\n            this.repeat(event, null, -1);\n            this.updateFilledState();\n            event.preventDefault();\n        }\n    }\n    \n    onDownButtonMouseup(event: Event) {\n        if (!this.disabled) {\n            this.clearTimer();\n        }\n    }\n    \n    onDownButtonMouseleave(event: Event) {\n        if (!this.disabled) {\n            this.clearTimer();\n        }\n    }\n    \n    onInputKeydown(event: KeyboardEvent) {\n        if (event.which == 38) {\n            this.spin(event, 1);\n            event.preventDefault();\n        }\n        else if (event.which == 40) {\n            this.spin(event, -1);\n            event.preventDefault();\n        }\n    }\n\n    onInputChange(event: Event) {\n        this.onChange.emit(event);\n    }\n\n    onInput(event: KeyboardEvent) {\n        this.value = this.parseValue((<HTMLInputElement> event.target).value);\n        this.onModelChange(this.value);\n        this.updateFilledState();\n    }\n        \n    onInputBlur(event) {\n        this.focus = false;\n        this.formatValue();\n        this.onModelTouched();\n        this.onBlur.emit(event);\n    }\n    \n    onInputFocus(event) {\n        this.focus = true;\n        this.onFocus.emit(event);\n    }\n    \n    parseValue(val: string): number {\n        let value: number;\n        let precision = this.getPrecision();\n                \n        if (val.trim() === '') {\n            value = null;\n        }\n        else {\n            if (this.formatInput) {\n                val = val.replace(this.thousandRegExp, '');\n            }\n\n            if (precision) {\n                val = this.formatInput ? val.replace(this.decimalSeparator || this.localeDecimalSeparator, '.') : val.replace(',', '.');\n                value = parseFloat(val);\n            }\n            else {\n                value = parseInt(val, 10);\n            }\n            \n            if (!isNaN(value)) {\n                if (this.max !== null && value > this.max) {\n                    value = this.max;\n                }\n\n                if (this.min !== null && value < this.min) {\n                    value = this.min;\n                }\n            }\n            else {\n                value = null;\n            }\n        }\n        \n        return value;\n    }\n\n    formatValue() {\n        let value = this.value;\n        let precision = this.getPrecision();\n\n        if (value != null) {\n            if (this.formatInput) {\n                value = value.toLocaleString(undefined, {maximumFractionDigits: 20});\n    \n                if (this.decimalSeparator && this.thousandSeparator) {\n                    value = value.split(this.localeDecimalSeparator);\n    \n                    if (precision && value[1]) {\n                        value[1] = (this.decimalSeparator || this.localeDecimalSeparator) + value[1];\n                    }\n    \n                    if (this.thousandSeparator && value[0].length > 3) {\n                        value[0] = value[0].replace(new RegExp(`[${this.localeThousandSeparator}]`, 'gim'), this.thousandSeparator);\n                    }\n    \n                    value = value.join('');\n                }\n            }\n    \n            this.formattedValue = value.toString();\n        }\n        else {\n            this.formattedValue = null;\n        }\n\n        if (this.inputfieldViewChild && this.inputfieldViewChild.nativeElement) {\n            this.inputfieldViewChild.nativeElement.value = this.formattedValue;\n        }\n    }\n            \n    clearTimer() {\n        if (this.timer) {\n            clearInterval(this.timer);\n        }\n    }\n    \n    writeValue(value: any) : void {\n        this.value = value;\n        this.formatValue();\n        this.updateFilledState();\n        this.cd.markForCheck();\n    }\n    \n    registerOnChange(fn: Function): void {\n        this.onModelChange = fn;\n    }\n\n    registerOnTouched(fn: Function): void {\n        this.onModelTouched = fn;\n    }\n    \n    setDisabledState(val: boolean): void {\n        this.disabled = val;\n    }\n    \n    updateFilledState() {\n        this.filled = (this.value !== undefined && this.value != null);\n    }\n}\n\n\n@NgModule({\n    imports: [CommonModule,InputTextModule],\n    exports: [Spinner],\n    declarations: [Spinner]\n})\nexport class SpinnerModule { }\n"]}