{"version":3,"sources":["ng://primeng-lts/colorpicker/colorpicker.ts"],"names":["COLORPICKER_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","ColorPicker","multi","el","renderer","cd","this","format","autoZIndex","baseZIndex","showTransitionOptions","hideTransitionOptions","onChange","EventEmitter","onShow","onHide","value","h","s","b","defaultColor","onModelChange","onModelTouched","Object","defineProperty","prototype","element","colorSelectorViewChild","colorHandleViewChild","hueViewChild","hueHandleViewChild","onHueMousedown","event","disabled","bindDocumentMousemoveListener","bindDocumentMouseupListener","hueDragging","pickHue","top","nativeElement","getBoundingClientRect","window","pageYOffset","document","documentElement","scrollTop","body","validateHSB","Math","floor","max","min","pageY","updateColorSelector","updateUI","updateModel","emit","originalEvent","getValueToUpdate","onColorMousedown","colorDragging","pickColor","rect","left","scrollLeft","saturation","pageX","brightness","val","HSBtoHEX","HSBtoRGB","writeValue","HEXtoHSB","RGBtoHSB","hsb","style","backgroundColor","inputBgColor","onInputFocus","show","overlayVisible","onOverlayAnimationStart","toState","inline","overlay","appendOverlay","zIndex","String","DomHandler","zindex","alignOverlay","bindDocumentClickListener","onOverlayHide","onOverlayAnimationEnd","appendTo","appendChild","restoreOverlayAppend","absolutePosition","inputViewChild","relativePosition","hide","onInputClick","selfClick","togglePanel","onInputKeydown","which","preventDefault","onPanelClick","registerOnChange","fn","registerOnTouched","setDisabledState","_this","documentClickListener","listen","unbindDocumentClickListener","markForCheck","documentMousemoveListener","unbindDocumentMousemoveListener","documentMouseupListener","unbindDocumentMouseupListener","validateRGB","rgb","r","g","validateHEX","hex","len","length","o","i","push","join","HEXtoRGB","hexValue","parseInt","indexOf","substring","delta","v","t1","t2","t3","round","RGBtoHEX","toString","key","ngOnDestroy","ElementRef","Renderer2","ChangeDetectorRef","__decorate","Input","Output","ViewChild","Component","selector","template","animations","trigger","state","transform","opacity","transition","animate","providers","changeDetection","ChangeDetectionStrategy","Default","ColorPickerModule","NgModule","imports","CommonModule","exports","declarations"],"mappings":"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","sourcesContent":["import { NgModule, Component, ElementRef, Input, Output, OnDestroy, EventEmitter, forwardRef, Renderer2, ViewChild, ChangeDetectorRef, ChangeDetectionStrategy } from '@angular/core';\nimport { trigger, state, style, transition, animate, AnimationEvent } from '@angular/animations';\nimport { CommonModule } from '@angular/common';\nimport { DomHandler } from 'primeng-lts/dom';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\nexport const COLORPICKER_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => ColorPicker),\n    multi: true\n};\n\n@Component({\n    selector: 'p-colorPicker',\n    template: `\n        <div [ngStyle]=\"style\" [class]=\"styleClass\" [ngClass]=\"{'ui-colorpicker ui-widget':true,'ui-colorpicker-overlay':!inline,'ui-colorpicker-dragging':colorDragging||hueDragging}\">\n            <input #input type=\"text\" *ngIf=\"!inline\" class=\"ui-colorpicker-preview ui-inputtext ui-state-default ui-corner-all\" readonly=\"readonly\" [ngClass]=\"{'ui-state-disabled': disabled}\"\n                (focus)=\"onInputFocus()\" (click)=\"onInputClick()\" (keydown)=\"onInputKeydown($event)\" [attr.id]=\"inputId\" [attr.tabindex]=\"tabindex\" [disabled]=\"disabled\"\n                [style.backgroundColor]=\"inputBgColor\">\n            <div *ngIf=\"inline || overlayVisible\" [ngClass]=\"{'ui-colorpicker-panel ui-corner-all': true, 'ui-colorpicker-overlay-panel ui-shadow':!inline, 'ui-state-disabled': disabled}\" (click)=\"onPanelClick()\"\n                [@overlayAnimation]=\"{value: 'visible', params: {showTransitionParams: showTransitionOptions, hideTransitionParams: hideTransitionOptions}}\" [@.disabled]=\"inline === true\" \n                (@overlayAnimation.start)=\"onOverlayAnimationStart($event)\" (@overlayAnimation.done)=\"onOverlayAnimationEnd($event)\">\n                <div class=\"ui-colorpicker-content\">\n                    <div #colorSelector class=\"ui-colorpicker-color-selector\" (mousedown)=\"onColorMousedown($event)\">\n                        <div class=\"ui-colorpicker-color\">\n                            <div #colorHandle class=\"ui-colorpicker-color-handle\"></div>\n                        </div>\n                    </div>\n                    <div #hue class=\"ui-colorpicker-hue\" (mousedown)=\"onHueMousedown($event)\">\n                        <div #hueHandle class=\"ui-colorpicker-hue-handle\"></div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    `,\n    animations: [\n        trigger('overlayAnimation', [\n            state('void', style({\n                transform: 'translateY(5%)',\n                opacity: 0\n            })),\n            state('visible', style({\n                transform: 'translateY(0)',\n                opacity: 1\n            })),\n            transition('void => visible', animate('{{showTransitionParams}}')),\n            transition('visible => void', animate('{{hideTransitionParams}}'))\n        ])\n    ],\n    providers: [COLORPICKER_VALUE_ACCESSOR],\n    changeDetection: ChangeDetectionStrategy.Default\n})\nexport class ColorPicker implements ControlValueAccessor, OnDestroy {\n\n    @Input() style: any;\n\n    @Input() styleClass: string;\n    \n    @Input() inline: boolean;\n    \n    @Input() format: string = 'hex';\n    \n    @Input() appendTo: any;\n    \n    @Input() disabled: boolean;\n    \n    @Input() tabindex: string;\n    \n    @Input() inputId: string;\n\n    @Input() autoZIndex: boolean = true;\n    \n    @Input() baseZIndex: number = 0;\n\n    @Input() showTransitionOptions: string = '225ms ease-out';\n\n    @Input() hideTransitionOptions: string = '195ms ease-in';\n    \n    @Output() onChange: EventEmitter<any> = new EventEmitter();\n\n    @Output() onShow: EventEmitter<any> = new EventEmitter();\n\n    @Output() onHide: EventEmitter<any> = new EventEmitter\n    \n    @ViewChild('input') inputViewChild: ElementRef;\n    \n    value: any = {h:0, s: 100, b: 100};\n    \n    inputBgColor: string;\n    \n    shown: boolean;\n    \n    overlayVisible: boolean;\n    \n    defaultColor: string = 'ff0000';\n    \n    onModelChange: Function = () => {};\n    \n    onModelTouched: Function = () => {};\n    \n    documentClickListener: Function;\n    \n    documentMousemoveListener: Function;\n    \n    documentMouseupListener: Function;\n    \n    documentHueMoveListener: Function;\n                \n    selfClick: boolean;\n    \n    colorDragging: boolean;\n    \n    hueDragging: boolean;\n\n    overlay: HTMLDivElement;\n\n    colorSelectorViewChild: ElementRef;\n    \n    colorHandleViewChild: ElementRef;\n    \n    hueViewChild: ElementRef;\n    \n    hueHandleViewChild: ElementRef;\n                \n    constructor(public el: ElementRef, public renderer: Renderer2, public cd: ChangeDetectorRef) {}\n        \n    @ViewChild('colorSelector') set colorSelector(element: ElementRef) {\n        this.colorSelectorViewChild = element;\n    }\n\n    @ViewChild('colorHandle') set colorHandle(element: ElementRef) {\n        this.colorHandleViewChild = element;\n    }\n\n    @ViewChild('hue') set hue(element: ElementRef) {\n        this.hueViewChild = element;\n    }\n\n    @ViewChild('hueHandle') set hueHandle(element: ElementRef) {\n        this.hueHandleViewChild = element;\n    }\n\n    onHueMousedown(event: MouseEvent) {\n        if (this.disabled) {\n            return;\n        }\n        \n        this.bindDocumentMousemoveListener();\n        this.bindDocumentMouseupListener();\n        \n        this.hueDragging = true;\n        this.pickHue(event);\n    }\n    \n    pickHue(event: MouseEvent) {\n        let top: number = this.hueViewChild.nativeElement.getBoundingClientRect().top + (window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0);\n        this.value = this.validateHSB({\n            h: Math.floor(360 * (150 - Math.max(0, Math.min(150, (event.pageY - top)))) / 150),\n            s: this.value.s,\n            b: this.value.b\n        });\n        \n        this.updateColorSelector();\n        this.updateUI();\n        this.updateModel();\n        this.onChange.emit({originalEvent: event, value: this.getValueToUpdate()});\n    }\n    \n    onColorMousedown(event: MouseEvent) {\n        if (this.disabled) {\n            return;\n        }\n        \n        this.bindDocumentMousemoveListener();\n        this.bindDocumentMouseupListener();\n        \n        this.colorDragging = true;\n        this.pickColor(event);\n    }\n    \n    pickColor(event: MouseEvent) {\n        let rect = this.colorSelectorViewChild.nativeElement.getBoundingClientRect();\n        let top = rect.top + (window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0);\n        let left = rect.left + document.body.scrollLeft;\n        let saturation = Math.floor(100 * (Math.max(0, Math.min(150, (event.pageX - left)))) / 150);\n        let brightness = Math.floor(100 * (150 - Math.max(0, Math.min(150, (event.pageY - top)))) / 150);\n        this.value = this.validateHSB({\n            h: this.value.h,\n            s: saturation,\n            b: brightness\n        });\n        \n        this.updateUI();\n        this.updateModel();\n        this.onChange.emit({originalEvent: event, value: this.getValueToUpdate()});\n    }\n    \n    getValueToUpdate() {\n        let val: any;\n        switch(this.format) {\n            case 'hex':\n                val = '#' + this.HSBtoHEX(this.value);\n            break;\n            \n            case 'rgb':\n                val = this.HSBtoRGB(this.value);\n            break;\n            \n            case 'hsb':\n                val = this.value;\n            break;\n        }\n        \n        return val;\n    }\n    \n    updateModel(): void {\n        this.onModelChange(this.getValueToUpdate());\n    }\n\n    writeValue(value: any): void {\n        if (value) {\n            switch(this.format) {\n                case 'hex':\n                    this.value = this.HEXtoHSB(value);\n                break;\n                \n                case 'rgb':\n                    this.value = this.RGBtoHSB(value);\n                break;\n                \n                case 'hsb':\n                    this.value = value;\n                break;\n            }\n        }\n        else {\n            this.value = this.HEXtoHSB(this.defaultColor);\n        }\n        \n        this.updateColorSelector();\n        this.updateUI();\n    }\n    \n    updateColorSelector() {\n        if (this.colorSelectorViewChild) {\n            const hsb: any = {};\n            hsb.s = 100;\n            hsb.b = 100;\n            hsb.h = this.value.h;\n\n            this.colorSelectorViewChild.nativeElement.style.backgroundColor = '#' + this.HSBtoHEX(hsb);\n        }\n    }\n        \n    updateUI() {\n        if (this.colorHandleViewChild && this.hueHandleViewChild.nativeElement) {\n            this.colorHandleViewChild.nativeElement.style.left =  Math.floor(150 * this.value.s / 100) + 'px';\n            this.colorHandleViewChild.nativeElement.style.top =  Math.floor(150 * (100 - this.value.b) / 100) + 'px';\n            this.hueHandleViewChild.nativeElement.style.top = Math.floor(150 - (150 * this.value.h / 360)) + 'px';\n\n        }\n\n        this.inputBgColor = '#' + this.HSBtoHEX(this.value);\n    }\n    \n    onInputFocus() {\n        this.onModelTouched();\n    }\n    \n    show() {\n        this.overlayVisible = true;\n    }\n\n    onOverlayAnimationStart(event: AnimationEvent) {\n        switch(event.toState) {\n            case 'visible':\n                if (!this.inline) {\n                    this.overlay = event.element;\n                    this.appendOverlay();\n                    if (this.autoZIndex) {\n                        this.overlay.style.zIndex = String(this.baseZIndex + (++DomHandler.zindex));\n                    }\n                    this.alignOverlay();\n                    this.bindDocumentClickListener();\n\n                    this.updateColorSelector();\n                    this.updateUI();\n                }\n            break;\n\n            case 'void':\n                this.onOverlayHide();\n            break;\n        }\n    }\n\n    onOverlayAnimationEnd(event: AnimationEvent) {\n        switch(event.toState) {\n            case 'visible':\n                if (!this.inline) {\n                    this.onShow.emit({})\n                }\n            break;\n\n            case 'void':\n                this.onHide.emit({})\n            break;\n        }\n    }\n\n    appendOverlay() {\n        if (this.appendTo) {\n            if (this.appendTo === 'body')\n                document.body.appendChild(this.overlay);\n            else\n                DomHandler.appendChild(this.overlay, this.appendTo);\n        }\n    }\n\n    restoreOverlayAppend() {\n        if (this.overlay && this.appendTo) {\n            this.el.nativeElement.appendChild(this.overlay);\n        }\n    }\n    \n    alignOverlay() {\n        if (this.appendTo)\n            DomHandler.absolutePosition(this.overlay, this.inputViewChild.nativeElement);\n        else\n            DomHandler.relativePosition(this.overlay, this.inputViewChild.nativeElement);\n    }\n    \n    hide() {\n        this.overlayVisible = false;\n    }\n         \n    onInputClick() {\n        this.selfClick = true;\n        this.togglePanel();\n    }\n    \n    togglePanel() {\n        if (!this.overlayVisible)\n            this.show();\n        else\n            this.hide();\n    }\n    \n    onInputKeydown(event: KeyboardEvent) {\n        switch(event.which) {\n            //space\n            case 32:\n                this.togglePanel();\n                event.preventDefault();\n            break;\n                        \n            //escape and tab\n            case 27:\n            case 9:\n                this.hide();\n            break;\n        }\n    }\n        \n    onPanelClick() {\n        this.selfClick = true;\n    }\n    \n    registerOnChange(fn: Function): void {\n        this.onModelChange = fn;\n    }\n\n    registerOnTouched(fn: Function): void {\n        this.onModelTouched = fn;\n    }\n    \n    setDisabledState(val: boolean): void {\n        this.disabled = val;\n    }\n    \n    bindDocumentClickListener() {\n        if (!this.documentClickListener) {\n            this.documentClickListener = this.renderer.listen('document', 'click', () => {\n                if (!this.selfClick) {\n                    this.overlayVisible = false;\n                    this.unbindDocumentClickListener();\n                }\n                \n                this.selfClick = false;\n                this.cd.markForCheck();\n            });\n        }    \n    }\n    \n    unbindDocumentClickListener() {\n        if (this.documentClickListener) {\n            this.documentClickListener();\n            this.documentClickListener = null;\n        }\n    }\n    \n    bindDocumentMousemoveListener() {\n        if (!this.documentMousemoveListener) {\n            this.documentMousemoveListener = this.renderer.listen('document', 'mousemove', (event: MouseEvent) => {\n                if (this.colorDragging) {\n                    this.pickColor(event);\n                }\n                \n                if (this.hueDragging) {\n                    this.pickHue(event);\n                }\n            });\n        }\n    }\n    \n    unbindDocumentMousemoveListener() {\n        if (this.documentMousemoveListener) {\n            this.documentMousemoveListener();\n            this.documentMousemoveListener = null;\n        }\n    }\n    \n    bindDocumentMouseupListener() {\n        if (!this.documentMouseupListener) {\n            this.documentMouseupListener = this.renderer.listen('document', 'mouseup', () => {\n                this.colorDragging = false;\n                this.hueDragging = false;\n                this.unbindDocumentMousemoveListener();\n                this.unbindDocumentMouseupListener();\n            });\n        }\n    }\n    \n    unbindDocumentMouseupListener() {\n        if (this.documentMouseupListener) {\n            this.documentMouseupListener();\n            this.documentMouseupListener = null;\n        }\n    }\n\n    validateHSB(hsb) {\n        return {\n            h: Math.min(360, Math.max(0, hsb.h)),\n            s: Math.min(100, Math.max(0, hsb.s)),\n            b: Math.min(100, Math.max(0, hsb.b))\n        };\n    }\n    \n    validateRGB(rgb) {\n        return {\n            r: Math.min(255, Math.max(0, rgb.r)),\n            g: Math.min(255, Math.max(0, rgb.g)),\n            b: Math.min(255, Math.max(0, rgb.b))\n        };\n    }\n    \n    validateHEX(hex) {\n        var len = 6 - hex.length;\n        if (len > 0) {\n            var o = [];\n            for (var i=0; i<len; i++) {\n                o.push('0');\n            }\n            o.push(hex);\n            hex = o.join('');\n        }\n        return hex;\n    }\n    \n    HEXtoRGB(hex) {\n        let hexValue = parseInt(((hex.indexOf('#') > -1) ? hex.substring(1) : hex), 16);\n        return {r: hexValue >> 16, g: (hexValue & 0x00FF00) >> 8, b: (hexValue & 0x0000FF)};\n    }\n    \n    HEXtoHSB(hex) {\n        return this.RGBtoHSB(this.HEXtoRGB(hex));\n    }\n    \n    RGBtoHSB(rgb) {\n        var hsb = {\n            h: 0,\n            s: 0,\n            b: 0\n        };\n        var min = Math.min(rgb.r, rgb.g, rgb.b);\n        var max = Math.max(rgb.r, rgb.g, rgb.b);\n        var delta = max - min;\n        hsb.b = max;\n        hsb.s = max != 0 ? 255 * delta / max : 0;\n        if (hsb.s != 0) {\n            if (rgb.r == max) {\n                hsb.h = (rgb.g - rgb.b) / delta;\n            } else if (rgb.g == max) {\n                hsb.h = 2 + (rgb.b - rgb.r) / delta;\n            } else {\n                hsb.h = 4 + (rgb.r - rgb.g) / delta;\n            }\n        } else {\n            hsb.h = -1;\n        }\n        hsb.h *= 60;\n        if (hsb.h < 0) {\n            hsb.h += 360;\n        }\n        hsb.s *= 100/255;\n        hsb.b *= 100/255;\n        return hsb;\n    }\n    \n    HSBtoRGB(hsb) {\n        var rgb = {\n            r: null, g: null, b: null\n        };\n        let h: number = hsb.h;\n        let s: number = hsb.s*255/100;\n        let v: number = hsb.b*255/100;\n        if (s == 0) {\n            rgb = {\n                r: v,\n                g: v,\n                b: v\n            }\n        } \n        else {\n            let t1: number = v;\n            let t2: number = (255-s)*v/255;\n            let t3: number = (t1-t2)*(h%60)/60;\n            if (h==360) h = 0;\n            if (h<60) {rgb.r=t1;\trgb.b=t2; rgb.g=t2+t3}\n            else if (h<120) {rgb.g=t1; rgb.b=t2;\trgb.r=t1-t3}\n            else if (h<180) {rgb.g=t1; rgb.r=t2;\trgb.b=t2+t3}\n            else if (h<240) {rgb.b=t1; rgb.r=t2;\trgb.g=t1-t3}\n            else if (h<300) {rgb.b=t1; rgb.g=t2;\trgb.r=t2+t3}\n            else if (h<360) {rgb.r=t1; rgb.g=t2;\trgb.b=t1-t3}\n            else {rgb.r=0; rgb.g=0;\trgb.b=0}\n        }\n        return {r:Math.round(rgb.r), g:Math.round(rgb.g), b:Math.round(rgb.b)};\n    }\n    \n    RGBtoHEX(rgb) {\n        var hex = [\n            rgb.r.toString(16),\n            rgb.g.toString(16),\n            rgb.b.toString(16)\n        ];\n        \n        for(var key in hex) {\n            if (hex[key].length == 1) {\n                hex[key] = '0' + hex[key];\n            }\n        }        \n\n        return hex.join('');\n    }\n    \n    HSBtoHEX(hsb) {\n        return this.RGBtoHEX(this.HSBtoRGB(hsb));\n    }\n\n    onOverlayHide() {\n        this.unbindDocumentClickListener();\n        this.overlay = null;\n    }\n    \n    ngOnDestroy() {\n        this.restoreOverlayAppend();\n        this.onOverlayHide();\n    }\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [ColorPicker],\n    declarations: [ColorPicker]\n})\nexport class ColorPickerModule { }\n"]}