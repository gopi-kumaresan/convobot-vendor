{"version":3,"sources":["ng://primeng-lts/inputtextarea/inputtextarea.ts"],"names":["InputTextarea","el","ngModel","control","cd","this","onResize","EventEmitter","prototype","ngOnInit","_this","ngModelSubscription","valueChanges","subscribe","updateState","ngControlSubscription","ngAfterViewInit","autoResize","resize","updateFilledState","detectChanges","onInput","e","filled","nativeElement","value","length","onFocus","onBlur","event","style","height","scrollHeight","parseFloat","maxHeight","overflowY","overflow","emit","ngOnDestroy","unsubscribe","ElementRef","NgModel","decorators","type","Optional","NgControl","ChangeDetectorRef","__decorate","Input","Output","HostListener","Directive","selector","host","[class.ui-inputtext]","[class.ui-corner-all]","[class.ui-inputtextarea-resizable]","[class.ui-state-default]","[class.ui-widget]","[class.ui-state-filled]","__param","InputTextareaModule","NgModule","imports","CommonModule","exports","declarations"],"mappings":"22BAAAA,EAAA,WA8BI,SAAAA,EAAmBC,EAAmCC,EAAqCC,EAA6BC,GAArGC,KAAAJ,GAAAA,EAAmCI,KAAAH,QAAAA,EAAqCG,KAAAF,QAAAA,EAA6BE,KAAAD,GAAAA,EAV9GC,KAAAC,SAA8B,IAAIC,EAAAA,aAyFhD,OA7EIP,EAAAQ,UAAAC,SAAA,WAAA,IAAAC,EAAAL,KACQA,KAAKH,UACLG,KAAKM,oBAAsBN,KAAKH,QAAQU,aAAaC,WAAU,WAC3DH,EAAKI,kBAITT,KAAKF,UACLE,KAAKU,sBAAwBV,KAAKF,QAAQS,aAAaC,WAAU,WAC7DH,EAAKI,mBAKjBd,EAAAQ,UAAAQ,gBAAA,WACQX,KAAKY,YACLZ,KAAKa,SAETb,KAAKc,oBACLd,KAAKD,GAAGgB,iBAIZpB,EAAAQ,UAAAa,QAAA,SAAQC,GACJjB,KAAKS,eAGTd,EAAAQ,UAAAW,kBAAA,WACId,KAAKkB,OAASlB,KAAKJ,GAAGuB,cAAcC,OAASpB,KAAKJ,GAAGuB,cAAcC,MAAMC,QAI7E1B,EAAAQ,UAAAmB,QAAA,SAAQL,GACAjB,KAAKY,YACLZ,KAAKa,OAAOI,IAKpBtB,EAAAQ,UAAAoB,OAAA,SAAON,GACCjB,KAAKY,YACLZ,KAAKa,OAAOI,IAIpBtB,EAAAQ,UAAAU,OAAA,SAAOW,GACHxB,KAAKJ,GAAGuB,cAAcM,MAAMC,OAAS,OACrC1B,KAAKJ,GAAGuB,cAAcM,MAAMC,OAAS1B,KAAKJ,GAAGuB,cAAcQ,aAAe,KAEtEC,WAAW5B,KAAKJ,GAAGuB,cAAcM,MAAMC,SAAWE,WAAW5B,KAAKJ,GAAGuB,cAAcM,MAAMI,YACzF7B,KAAKJ,GAAGuB,cAAcM,MAAMK,UAAY,SACxC9B,KAAKJ,GAAGuB,cAAcM,MAAMC,OAAS1B,KAAKJ,GAAGuB,cAAcM,MAAMI,WAGjE7B,KAAKJ,GAAGuB,cAAcM,MAAMM,SAAW,SAG3C/B,KAAKC,SAAS+B,KAAKR,GAAO,KAG9B7B,EAAAQ,UAAAM,YAAA,WACIT,KAAKc,oBAEDd,KAAKY,YACLZ,KAAKa,UAIblB,EAAAQ,UAAA8B,YAAA,WACQjC,KAAKM,qBACLN,KAAKM,oBAAoB4B,cAGzBlC,KAAKU,uBACLV,KAAKU,sBAAsBwB,wDA5EZC,EAAAA,kBAAwCC,EAAAA,QAAOC,WAAA,CAAA,CAAAC,KAAlCC,EAAAA,kBAAiEC,EAAAA,UAASH,WAAA,CAAA,CAAAC,KAArCC,EAAAA,kBAAmDE,EAAAA,qBAZnHC,EAAA,CAARC,EAAAA,0CAESD,EAAA,CAATE,EAAAA,yCAmCDF,EAAA,CADCG,EAAAA,aAAa,QAAS,CAAC,wCAUxBH,EAAA,CADCG,EAAAA,aAAa,QAAS,CAAC,wCAQxBH,EAAA,CADCG,EAAAA,aAAa,OAAQ,CAAC,uCAtDdlD,EAAa+C,EAAA,CAXzBI,EAAAA,UAAU,CACPC,SAAU,mBACVC,KAAM,CACFC,uBAAwB,OACxBC,wBAAyB,OACzBC,qCAAsC,aACtCC,2BAA4B,OAC5BC,oBAAqB,OACrBC,0BAA2B,YAiBKC,EAAA,EAAAhB,EAAAA,YAAqCgB,EAAA,EAAAhB,EAAAA,aAdhE5C,GAhBb,gBAoHA,SAAA6D,KAAmC,OAAtBA,EAAmBd,EAAA,CAL/Be,EAAAA,SAAS,CACNC,QAAS,CAACC,EAAAA,cACVC,QAAS,CAACjE,GACVkE,aAAc,CAAClE,MAEN6D","sourcesContent":["import {NgModule,Directive,ElementRef,HostListener,Input,Output,EventEmitter,Optional, OnInit, OnDestroy, AfterViewInit, ChangeDetectorRef} from '@angular/core';\nimport {NgModel, NgControl} from '@angular/forms';\nimport {CommonModule} from '@angular/common';\nimport { Subscription } from 'rxjs';\n\n@Directive({\n    selector: '[pInputTextarea]',\n    host: {\n        '[class.ui-inputtext]': 'true',\n        '[class.ui-corner-all]': 'true',\n        '[class.ui-inputtextarea-resizable]': 'autoResize',\n        '[class.ui-state-default]': 'true',\n        '[class.ui-widget]': 'true',\n        '[class.ui-state-filled]': 'filled'\n    }\n})\nexport class InputTextarea implements OnInit, AfterViewInit, OnDestroy {\n    \n    @Input() autoResize: boolean;\n    \n    @Output() onResize: EventEmitter<any> = new EventEmitter();\n        \n    filled: boolean;\n\n    cachedScrollHeight:number;\n\n    ngModelSubscription: Subscription;\n\n    ngControlSubscription: Subscription;\n\n    constructor(public el: ElementRef, @Optional() public ngModel: NgModel, @Optional() public control : NgControl, private cd: ChangeDetectorRef) {}\n        \n    ngOnInit() {\n        if (this.ngModel) {\n            this.ngModelSubscription = this.ngModel.valueChanges.subscribe(() =>{\n                this.updateState();\n            })\n        }\n\n        if (this.control) {\n            this.ngControlSubscription = this.control.valueChanges.subscribe(() => {\n                this.updateState();\n            });\n        }\n    }\n\n    ngAfterViewInit() {\n        if (this.autoResize)\n            this.resize();\n\n        this.updateFilledState();\n        this.cd.detectChanges();\n    }\n\n    @HostListener('input', ['$event'])\n    onInput(e) {\n        this.updateState();\n    }\n    \n    updateFilledState() {\n        this.filled = this.el.nativeElement.value && this.el.nativeElement.value.length\n    }\n    \n    @HostListener('focus', ['$event'])\n    onFocus(e) {\n        if (this.autoResize) {\n            this.resize(e);\n        }\n    }\n    \n    @HostListener('blur', ['$event'])\n    onBlur(e) {\n        if (this.autoResize) {\n            this.resize(e);\n        }\n    }\n    \n    resize(event?: Event) {\n        this.el.nativeElement.style.height = 'auto';\n        this.el.nativeElement.style.height = this.el.nativeElement.scrollHeight + 'px';\n\n        if (parseFloat(this.el.nativeElement.style.height) >= parseFloat(this.el.nativeElement.style.maxHeight)) {\n            this.el.nativeElement.style.overflowY = \"scroll\";\n            this.el.nativeElement.style.height = this.el.nativeElement.style.maxHeight;\n        }\n        else {\n            this.el.nativeElement.style.overflow = \"hidden\";\n        }\n\n        this.onResize.emit(event||{});\n    }\n\n    updateState() {\n        this.updateFilledState();\n            \n        if (this.autoResize) {\n            this.resize();\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.ngModelSubscription) {\n            this.ngModelSubscription.unsubscribe();\n        }\n\n        if (this.ngControlSubscription) {\n            this.ngControlSubscription.unsubscribe();\n        }\n    }\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [InputTextarea],\n    declarations: [InputTextarea]\n})\nexport class InputTextareaModule { }\n"]}