{"version":3,"sources":["ng://primeng-lts/overlaypanel/overlaypanel.ts"],"names":["OverlayPanel","el","renderer","cd","zone","this","dismissable","autoZIndex","baseZIndex","showTransitionOptions","hideTransitionOptions","onShow","EventEmitter","onHide","overlayVisible","render","isContainerClicked","prototype","ngAfterContentInit","_this","templates","forEach","item","getType","contentTemplate","template","markForCheck","onContainerClick","bindDocumentClickListener","documentClickListener","runOutsideAngular","documentEvent","DomHandler","isIOS","listen","event","container","contains","target","run","hide","unbindDocumentClickListener","toggle","hasTargetChanged","destroyCallback","show","currentTarget","appendContainer","appendTo","document","body","appendChild","restoreAppend","nativeElement","align","style","zIndex","String","zindex","absolutePosition","getOffset","top","addClass","Math","floor","left","onAnimationStart","toState","element","emit","bindDocumentResizeListener","onAnimationEnd","onContainerDestroy","onCloseClick","preventDefault","onWindowResize","documentResizeListener","bind","window","addEventListener","unbindDocumentResizeListener","removeEventListener","ngOnDestroy","ElementRef","Renderer2","ChangeDetectorRef","NgZone","__decorate","Input","Output","ContentChildren","PrimeTemplate","Component","selector","animations","trigger","state","transform","opacity","transition","animate","changeDetection","ChangeDetectionStrategy","Default","OverlayPanelModule","NgModule","imports","CommonModule","SharedModule","exports","declarations"],"mappings":"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","sourcesContent":["import {NgModule,Component,Input,Output,OnDestroy,EventEmitter,Renderer2,ElementRef,ChangeDetectorRef,NgZone,\n        ContentChildren,TemplateRef,AfterContentInit,QueryList,ChangeDetectionStrategy} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {DomHandler} from 'primeng-lts/dom';\nimport {PrimeTemplate, SharedModule} from 'primeng-lts/api';\nimport {trigger,state,style,transition,animate,AnimationEvent} from '@angular/animations';\n\n@Component({\n    selector: 'p-overlayPanel',\n    template: `\n        <div *ngIf=\"render\" [ngClass]=\"'ui-overlaypanel ui-widget ui-widget-content ui-corner-all ui-shadow'\" [ngStyle]=\"style\" [class]=\"styleClass\" (click)=\"onContainerClick()\"\n            [@animation]=\"{value: (overlayVisible ? 'open': 'close'), params: {showTransitionParams: showTransitionOptions, hideTransitionParams: hideTransitionOptions}}\" \n                (@animation.start)=\"onAnimationStart($event)\" (@animation.done)=\"onAnimationEnd($event)\">\n            <div class=\"ui-overlaypanel-content\">\n                <ng-content></ng-content>\n                <ng-container *ngTemplateOutlet=\"contentTemplate\"></ng-container>\n            </div>\n            <a tabindex=\"0\" *ngIf=\"showCloseIcon\" class=\"ui-overlaypanel-close ui-state-default\" (click)=\"onCloseClick($event)\" (keydown.enter)=\"hide()\" [attr.aria-label]=\"ariaCloseLabel\">\n                <span class=\"ui-overlaypanel-close-icon pi pi-times\"></span>\n            </a>\n        </div>\n    `,\n    animations: [\n        trigger('animation', [\n            state('void', style({\n                transform: 'translateY(5%)',\n                opacity: 0\n            })),\n            state('close', style({\n                transform: 'translateY(5%)',\n                opacity: 0\n            })),\n            state('open', style({\n                transform: 'translateY(0)',\n                opacity: 1\n            })),\n            transition('void => open', animate('{{showTransitionParams}}')),\n            transition('open => close', animate('{{hideTransitionParams}}'))\n        ])\n    ],\n    changeDetection: ChangeDetectionStrategy.Default\n})\nexport class OverlayPanel implements AfterContentInit, OnDestroy {\n\n    @Input() dismissable: boolean = true;\n\n    @Input() showCloseIcon: boolean;\n\n    @Input() style: any;\n\n    @Input() styleClass: string;\n    \n    @Input() appendTo: any;\n\n    @Input() autoZIndex: boolean = true;\n\n    @Input() ariaCloseLabel: string;\n    \n    @Input() baseZIndex: number = 0;\n    \n    @Input() showTransitionOptions: string = '225ms ease-out';\n\n    @Input() hideTransitionOptions: string = '195ms ease-in';\n\n    @Output() onShow: EventEmitter<any> = new EventEmitter();\n\n    @Output() onHide: EventEmitter<any> = new EventEmitter();\n\n    @ContentChildren(PrimeTemplate) templates: QueryList<any>;\n    \n    container: HTMLDivElement;\n\n    overlayVisible: boolean = false;\n\n    render: boolean = false;\n\n    isContainerClicked: boolean = true;\n\n    documentClickListener: any;\n            \n    target: any;\n    \n    willHide: boolean;\n        \n    documentResizeListener: any;\n\n    contentTemplate: TemplateRef<any>;\n\n    destroyCallback: Function;\n\n    constructor(public el: ElementRef, public renderer: Renderer2, private cd: ChangeDetectorRef, private zone: NgZone) {}\n        \n    ngAfterContentInit() {\n        this.templates.forEach((item) => {\n            switch(item.getType()) {\n                case 'content':\n                    this.contentTemplate = item.template;\n                break;\n\n                default:\n                    this.contentTemplate = item.template;\n                break;\n            }\n\n            this.cd.markForCheck();\n        });\n    }\n\n    onContainerClick() {\n        this.isContainerClicked = true;\n    }\n\n    bindDocumentClickListener() {\n        if (!this.documentClickListener && this.dismissable) {\n            this.zone.runOutsideAngular(() => {\n                let documentEvent = DomHandler.isIOS() ? 'touchstart' : 'click';\n                this.documentClickListener = this.renderer.listen('document', documentEvent, (event) => {\n                    if (!this.container.contains(event.target) && this.target !== event.target && !this.target.contains(event.target) && !this.isContainerClicked) {\n                        this.zone.run(() => {\n                            this.hide();\n                        });\n                    }\n\n                    this.isContainerClicked = false;\n                    this.cd.markForCheck();\n                });\n            });\n        }\n    }\n    \n    unbindDocumentClickListener() {\n        if (this.documentClickListener) {\n            this.documentClickListener();\n            this.documentClickListener = null;\n        }\n    }\n    \n    toggle(event, target?) {\n        if (this.overlayVisible) {\n            if (this.hasTargetChanged(event, target)) {\n                this.destroyCallback = () => {\n                    this.show(null, (target||event.currentTarget||event.target));\n                };\n            }\n\n            this.overlayVisible = false;\n        }\n        else {\n            this.show(event, target);\n        }\n    }\n\n    show(event, target?) {\n        this.target = target||event.currentTarget||event.target;\n        this.overlayVisible = true;\n        this.render = true;\n        this.cd.markForCheck();\n    }\n\n    hasTargetChanged(event, target) {\n        return this.target != null && this.target !== (target||event.currentTarget||event.target);\n    }\n\n    appendContainer() {\n        if (this.appendTo) {\n            if (this.appendTo === 'body')\n                document.body.appendChild(this.container);\n            else\n                DomHandler.appendChild(this.container, this.appendTo);\n        }\n    }\n\n    restoreAppend() {\n        if (this.container && this.appendTo) {\n            this.el.nativeElement.appendChild(this.container);\n        }\n    }\n\n    align() {\n        if (this.autoZIndex) {\n            this.container.style.zIndex = String(this.baseZIndex + (++DomHandler.zindex));\n        }\n        DomHandler.absolutePosition(this.container, this.target);\n        if (DomHandler.getOffset(this.container).top < DomHandler.getOffset(this.target).top) {\n            DomHandler.addClass(this.container, 'ui-overlaypanel-flipped');\n        }\n        if (Math.floor(DomHandler.getOffset(this.container).left) < Math.floor(DomHandler.getOffset(this.target).left) &&\n            DomHandler.getOffset(this.container).left > 0) {\n            DomHandler.addClass(this.container, 'ui-overlaypanel-shifted');\n        }\n    }\n\n    onAnimationStart(event: AnimationEvent) {\n        if (event.toState === 'open') {\n            this.container = event.element;\n            this.onShow.emit(null);\n            this.appendContainer();\n            this.align();\n            this.bindDocumentClickListener();\n            this.bindDocumentResizeListener();\n        }\n    }\n\n    onAnimationEnd(event: AnimationEvent) {\n        switch (event.toState) {\n            case 'void':\n                if (this.destroyCallback) {\n                    this.destroyCallback();\n                    this.destroyCallback = null;\n                }\n            break;\n            \n            case 'close':\n                this.onContainerDestroy();\n                this.onHide.emit({});\n                this.render = false;\n            break;     \n        }\n    }\n\n    hide() {\n        this.overlayVisible = false;\n        this.cd.markForCheck();\n    }\n\n    onCloseClick(event) {\n        this.hide();\n        event.preventDefault();\n    }\n\n    onWindowResize(event) {\n        this.hide();\n    }\n\n    bindDocumentResizeListener() {\n        this.documentResizeListener = this.onWindowResize.bind(this);\n        window.addEventListener('resize', this.documentResizeListener);\n    }\n    \n    unbindDocumentResizeListener() {\n        if (this.documentResizeListener) {\n            window.removeEventListener('resize', this.documentResizeListener);\n            this.documentResizeListener = null;\n        }\n    }\n\n    onContainerDestroy() {\n        this.target = null;\n        this.unbindDocumentClickListener();\n        this.unbindDocumentResizeListener();\n    }\n\n    ngOnDestroy() {\n        this.target = null;\n        this.destroyCallback = null;\n        if (this.container) {\n            this.restoreAppend();\n            this.onContainerDestroy();\n        }\n    }\n}\n\n@NgModule({\n    imports: [CommonModule, SharedModule],\n    exports: [OverlayPanel, SharedModule],\n    declarations: [OverlayPanel]\n})\nexport class OverlayPanelModule { }\n"]}