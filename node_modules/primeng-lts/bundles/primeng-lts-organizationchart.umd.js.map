{"version":3,"file":"primeng-lts-organizationchart.umd.js","sources":["primeng-lts/organizationchart/organizationchart.ts"],"names":["Inject","forwardRef","Input","Component","trigger","state","style","transition","animate","EventEmitter","ElementRef","Output","ContentChildren","PrimeTemplate","ChangeDetectionStrategy","NgModule","CommonModule","SharedModule"],"mappings":"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","sourcesContent":["import {NgModule,Component,ElementRef,Input,Output,AfterContentInit,EventEmitter,TemplateRef,\n        Inject,forwardRef,ContentChildren,QueryList,ChangeDetectionStrategy} from '@angular/core';\nimport {trigger,state,style,transition,animate} from '@angular/animations';\nimport {CommonModule} from '@angular/common';\nimport {SharedModule} from 'primeng-lts/api';\nimport {TreeNode} from 'primeng-lts/api';\nimport {PrimeTemplate} from 'primeng-lts/api';\n\n@Component({\n    selector: '[pOrganizationChartNode]',\n    template: `\n        <tr *ngIf=\"node\">\n            <td [attr.colspan]=\"colspan\">\n                <div class=\"ui-organizationchart-node-content ui-widget-content ui-corner-all {{node.styleClass}}\" \n                    [ngClass]=\"{'ui-organizationchart-selectable-node': chart.selectionMode && node.selectable !== false,'ui-state-highlight':isSelected()}\"\n                    (click)=\"onNodeClick($event,node)\">\n                    <div *ngIf=\"!chart.getTemplateForNode(node)\">{{node.label}}</div>\n                    <div *ngIf=\"chart.getTemplateForNode(node)\">\n                        <ng-container *ngTemplateOutlet=\"chart.getTemplateForNode(node); context: {$implicit: node}\"></ng-container>\n                    </div>\n                    <a *ngIf=\"!leaf\" tabindex=\"0\" class=\"ui-node-toggler\" (click)=\"toggleNode($event, node)\" (keydown.enter)=\"toggleNode($event, node)\">\n                        <i class=\"ui-node-toggler-icon pi\" [ngClass]=\"{'pi-chevron-down': node.expanded, 'pi-chevron-up': !node.expanded}\"></i>\n                    </a>\n                </div>\n            </td>\n        </tr>\n        <tr [ngClass]=\"!leaf&&node.expanded ? 'ui-organizationchart-node-visible' : 'ui-organizationchart-node-hidden'\" class=\"ui-organizationchart-lines\" [@childState]=\"'in'\">\n            <td [attr.colspan]=\"colspan\">\n                <div class=\"ui-organizationchart-line-down\"></div>\n            </td>\n        </tr>\n        <tr [ngClass]=\"!leaf&&node.expanded ? 'ui-organizationchart-node-visible' : 'ui-organizationchart-node-hidden'\" class=\"ui-organizationchart-lines\" [@childState]=\"'in'\">\n            <ng-container *ngIf=\"node.children && node.children.length === 1\">\n                <td [attr.colspan]=\"colspan\">\n                    <div class=\"ui-organizationchart-line-down\"></div>\n                </td>\n            </ng-container>\n            <ng-container *ngIf=\"node.children && node.children.length > 1\">\n                <ng-template ngFor let-child [ngForOf]=\"node.children\" let-first=\"first\" let-last=\"last\">\n                    <td class=\"ui-organizationchart-line-left\" [ngClass]=\"{'ui-organizationchart-line-top':!first}\">&nbsp;</td>\n                    <td class=\"ui-organizationchart-line-right\" [ngClass]=\"{'ui-organizationchart-line-top':!last}\">&nbsp;</td>\n                </ng-template>\n            </ng-container>\n        </tr>\n        <tr [ngClass]=\"!leaf&&node.expanded ? 'ui-organizationchart-node-visible' : 'ui-organizationchart-node-hidden'\" class=\"ui-organizationchart-nodes\" [@childState]=\"'in'\">\n            <td *ngFor=\"let child of node.children\" colspan=\"2\">\n                <table class=\"ui-organizationchart-table\" pOrganizationChartNode [node]=\"child\"></table>\n            </td>\n        </tr>\n    `,\n    animations: [\n        trigger('childState', [\n            state('in', style({opacity: 1})),\n           transition('void => *', [\n             style({opacity: 0}),\n             animate(150)\n           ]),\n           transition('* => void', [\n             animate(150, style({opacity:0}))\n           ])\n        ])\n    ]\n})\nexport class OrganizationChartNode {\n\n    @Input() node: TreeNode;\n        \n    @Input() root: boolean;\n    \n    @Input() first: boolean;\n    \n    @Input() last: boolean;\n\n    chart: OrganizationChart;\n        \n    constructor(@Inject(forwardRef(() => OrganizationChart)) chart) {\n        this.chart = chart as OrganizationChart;\n    }\n                \n    get leaf(): boolean {\n        return this.node.leaf == false ? false : !(this.node.children&&this.node.children.length);\n    }\n    \n    get colspan() {\n        return (this.node.children && this.node.children.length) ? this.node.children.length * 2: null;\n    }\n    \n    onNodeClick(event: Event, node: TreeNode) {\n        this.chart.onNodeClick(event, node)\n    }\n    \n    toggleNode(event: Event, node: TreeNode) {\n        node.expanded = !node.expanded;\n        if (node.expanded)\n            this.chart.onNodeExpand.emit({originalEvent: event, node: this.node});\n        else\n            this.chart.onNodeCollapse.emit({originalEvent: event, node: this.node});\n            \n        event.preventDefault();\n    }\n    \n    isSelected() {\n        return this.chart.isSelected(this.node);\n    }\n}\n\n@Component({\n    selector: 'p-organizationChart',\n    template: `\n        <div [ngStyle]=\"style\" [class]=\"styleClass\" [ngClass]=\"{'ui-organizationchart ui-widget': true, 'ui-organizationchart-preservespace': preserveSpace}\">\n            <table class=\"ui-organizationchart-table\" pOrganizationChartNode [node]=\"root\" *ngIf=\"root\"></table>\n        </div>\n    `,\n    changeDetection: ChangeDetectionStrategy.Default\n})\nexport class OrganizationChart implements AfterContentInit {\n            \n    @Input() value: TreeNode[];            \n\n    @Input() style: any;\n\n    @Input() styleClass: string;\n    \n    @Input() selectionMode: string;\n    \n    @Input() selection: any;\n\n    @Input() preserveSpace: boolean = true;\n    \n    @Output() selectionChange: EventEmitter<any> = new EventEmitter();\n    \n    @Output() onNodeSelect: EventEmitter<any> = new EventEmitter();\n    \n    @Output() onNodeUnselect: EventEmitter<any> = new EventEmitter();\n\n    @Output() onNodeExpand: EventEmitter<any> = new EventEmitter();\n\n    @Output() onNodeCollapse: EventEmitter<any> = new EventEmitter();\n    \n    @ContentChildren(PrimeTemplate) templates: QueryList<any>;\n    \n    public templateMap: any;\n    \n    constructor(public el: ElementRef) {}\n    \n    get root(): TreeNode {\n        return this.value && this.value.length ? this.value[0] : null;\n    }\n    \n    ngAfterContentInit() {\n        if (this.templates.length) {\n            this.templateMap = {};\n        }\n        \n        this.templates.forEach((item) => {\n            this.templateMap[item.getType()] = item.template;\n        });\n    }\n    \n    getTemplateForNode(node: TreeNode): TemplateRef<any> {\n        if (this.templateMap)\n            return node.type ? this.templateMap[node.type] : this.templateMap['default'];\n        else\n            return null;\n    }\n    \n    onNodeClick(event: Event, node: TreeNode) {\n        let eventTarget = (<Element> event.target);\n        \n        if (eventTarget.className && (eventTarget.className.indexOf('ui-node-toggler') !== -1 || eventTarget.className.indexOf('ui-node-toggler-icon') !== -1)) {\n            return;\n        }\n        else if (this.selectionMode) {\n            if (node.selectable === false) {\n                return;\n            }\n            \n            let index = this.findIndexInSelection(node);\n            let selected = (index >= 0);\n            \n            if (this.selectionMode === 'single') {\n                if (selected) {\n                    this.selection = null;\n                    this.onNodeUnselect.emit({originalEvent: event, node: node});\n                }\n                else {\n                    this.selection = node;\n                    this.onNodeSelect.emit({originalEvent: event, node: node});\n                }\n            }\n            else if (this.selectionMode === 'multiple') {\n                if (selected) {\n                    this.selection = this.selection.filter((val,i) => i!=index);\n                    this.onNodeUnselect.emit({originalEvent: event, node: node});\n                }\n                else {\n                    this.selection = [...this.selection||[],node];\n                    this.onNodeSelect.emit({originalEvent: event, node: node});\n                }\n            }\n            \n            this.selectionChange.emit(this.selection);\n        }\n    }\n    \n    findIndexInSelection(node: TreeNode) {\n        let index: number = -1;\n\n        if (this.selectionMode && this.selection) {\n            if (this.selectionMode === 'single') {\n                index = (this.selection == node) ? 0 : - 1;\n            }\n            else if (this.selectionMode === 'multiple') {\n                for(let i = 0; i  < this.selection.length; i++) {\n                    if (this.selection[i] == node) {\n                        index = i;\n                        break;\n                    }\n                }\n            }\n        }\n\n        return index;\n    }\n    \n    isSelected(node: TreeNode) {\n        return this.findIndexInSelection(node) != -1;         \n    }\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [OrganizationChart,SharedModule],\n    declarations: [OrganizationChart,OrganizationChartNode]\n})\nexport class OrganizationChartModule { }"]}