{"version":3,"file":"primeng-lts-panel.umd.js","sources":["primeng-lts/panel/panel.ts"],"names":["EventEmitter","ElementRef","Input","Output","ContentChild","Footer","Component","trigger","state","style","transition","animate","ChangeDetectionStrategy","NgModule","CommonModule","SharedModule"],"mappings":"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","sourcesContent":["import {NgModule,Component,Input,Output,EventEmitter,ElementRef,ContentChild,ChangeDetectionStrategy} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {SharedModule,Footer} from 'primeng-lts/api';\nimport {BlockableUI} from 'primeng-lts/api';\nimport {trigger,state,style,transition,animate} from '@angular/animations';\n\nlet idx: number = 0;\n\n@Component({\n    selector: 'p-panel',\n    template: `\n        <div [attr.id]=\"id\" [ngClass]=\"'ui-panel ui-widget ui-widget-content ui-corner-all'\" [ngStyle]=\"style\" [class]=\"styleClass\">\n            <div [ngClass]=\"{'ui-panel-titlebar ui-widget-header ui-helper-clearfix ui-corner-all': true, 'ui-panel-titlebar-clickable': (toggleable && toggler === 'header')}\" \n                *ngIf=\"showHeader\" (click)=\"onHeaderClick($event)\" [attr.id]=\"id + '-titlebar'\">\n                <span class=\"ui-panel-title\" *ngIf=\"header\" [attr.id]=\"id + '_header'\">{{header}}</span>\n                <ng-content select=\"p-header\"></ng-content>\n                <a *ngIf=\"toggleable\" [attr.id]=\"id + '-label'\" class=\"ui-panel-titlebar-icon ui-panel-titlebar-toggler ui-corner-all ui-state-default\" tabindex=\"0\"\n                    (click)=\"onIconClick($event)\" (keydown.enter)=\"onIconClick($event)\" [attr.aria-controls]=\"id + '-content'\" role=\"tab\" [attr.aria-expanded]=\"!collapsed\">\n                    <span [class]=\"collapsed ? expandIcon : collapseIcon\"></span>\n                </a>\n            </div>\n            <div [attr.id]=\"id + '-content'\" class=\"ui-panel-content-wrapper\" [@panelContent]=\"collapsed ? {value: 'hidden', params: {transitionParams: animating ? transitionOptions : '0ms', height: '0', opacity:'0'}} : {value: 'visible', params: {transitionParams: animating ? transitionOptions : '0ms', height: '*', opacity: '1'}}\" (@panelContent.done)=\"onToggleDone($event)\"\n                [ngClass]=\"{'ui-panel-content-wrapper-overflown': collapsed||animating}\"\n                role=\"region\" [attr.aria-hidden]=\"collapsed\" [attr.aria-labelledby]=\"id  + '-titlebar'\">\n                <div class=\"ui-panel-content ui-widget-content\">\n                    <ng-content></ng-content>\n                </div>\n                \n                <div class=\"ui-panel-footer ui-widget-content\" *ngIf=\"footerFacet\">\n                    <ng-content select=\"p-footer\"></ng-content>\n                </div>\n            </div>\n        </div>\n    `,\n    animations: [\n        trigger('panelContent', [\n            state('hidden', style({\n                height: '0',\n                opacity: 0\n            })),\n            state('void', style({\n                height: '{{height}}',\n                opacity: '{{opacity}}'\n            }), {params: {height: '0', opacity: '0'}}),\n            state('visible', style({\n                height: '*',\n                opacity: 1\n            })),\n            transition('visible <=> hidden', animate('{{transitionParams}}')),\n            transition('void => hidden', animate('{{transitionParams}}')),\n            transition('void => visible', animate('{{transitionParams}}'))\n        ])\n    ],\n    changeDetection: ChangeDetectionStrategy.Default\n})\nexport class Panel implements BlockableUI {\n\n    @Input() toggleable: boolean;\n\n    @Input() header: string;\n\n    @Input() collapsed: boolean = false;\n    \n    @Input() style: any;\n    \n    @Input() styleClass: string;\n    \n    @Input() expandIcon: string = 'pi pi-plus';\n    \n    @Input() collapseIcon: string = 'pi pi-minus';\n  \n    @Input() showHeader: boolean = true;\n\n    @Input() toggler: string = \"icon\";\n    \n    @Output() collapsedChange: EventEmitter<any> = new EventEmitter();\n\n    @Output() onBeforeToggle: EventEmitter<any> = new EventEmitter();\n\n    @Output() onAfterToggle: EventEmitter<any> = new EventEmitter();\n    \n    @Input() transitionOptions: string = '400ms cubic-bezier(0.86, 0, 0.07, 1)';\n\n    @ContentChild(Footer) footerFacet;\n    \n    animating: boolean;\n    \n    id: string = `ui-panel-${idx++}`;\n    \n    constructor(private el: ElementRef) {}\n\n    onHeaderClick(event: Event) {\n        if (this.toggler === 'header') {\n            this.toggle(event);\n        }\n    }\n\n    onIconClick(event: Event) {\n        if (this.toggler === 'icon') {\n            this.toggle(event);\n        }\n    }\n    \n    toggle(event: Event) {\n        if (this.animating) {\n            return false;\n        }\n        \n        this.animating = true;\n        this.onBeforeToggle.emit({originalEvent: event, collapsed: this.collapsed});\n        \n        if (this.toggleable) {\n            if (this.collapsed)\n                this.expand(event);\n            else\n                this.collapse(event);\n        }\n        \n        event.preventDefault();\n    }\n    \n    expand(event) {\n        this.collapsed = false;\n        this.collapsedChange.emit(this.collapsed);\n    }\n    \n    collapse(event) {\n        this.collapsed = true;\n        this.collapsedChange.emit(this.collapsed);\n    }\n    \n    getBlockableElement(): HTMLElementÂ {\n        return this.el.nativeElement.children[0];\n    }\n    \n    onToggleDone(event: Event) {\n        this.animating = false;\n        this.onAfterToggle.emit({originalEvent: event, collapsed: this.collapsed});\n    }\n\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [Panel,SharedModule],\n    declarations: [Panel]\n})\nexport class PanelModule { }\n"]}