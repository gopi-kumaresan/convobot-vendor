{"version":3,"file":"accordion.d.ts","sources":["accordion.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef, AfterContentInit, OnDestroy, EventEmitter, QueryList, ChangeDetectorRef, TemplateRef } from '@angular/core';\r\nimport { Header } from 'primeng-lts/api';\r\nimport { BlockableUI } from 'primeng-lts/api';\r\nimport { Subscription } from 'rxjs';\r\nexport declare class AccordionTab implements OnDestroy {\r\n    changeDetector: ChangeDetectorRef;\r\n    header: string;\r\n    disabled: boolean;\r\n    cache: boolean;\r\n    selectedChange: EventEmitter<any>;\r\n    transitionOptions: string;\r\n    headerFacet: QueryList<Header>;\r\n    templates: QueryList<any>;\r\n    private _selected;\r\n    private _animating;\r\n    selected: any;\r\n    animating: boolean;\r\n    contentTemplate: TemplateRef<any>;\r\n    id: string;\r\n    loaded: boolean;\r\n    accordion: Accordion;\r\n    constructor(accordion: any, changeDetector: ChangeDetectorRef);\r\n    ngAfterContentInit(): void;\r\n    toggle(event: any): boolean;\r\n    findTabIndex(): number;\r\n    readonly hasHeaderFacet: boolean;\r\n    onToggleDone(event: Event): void;\r\n    onKeydown(event: KeyboardEvent): void;\r\n    ngOnDestroy(): void;\r\n}\r\nexport declare class Accordion implements BlockableUI, AfterContentInit, OnDestroy {\r\n    el: ElementRef;\r\n    changeDetector: ChangeDetectorRef;\r\n    multiple: boolean;\r\n    onClose: EventEmitter<any>;\r\n    onOpen: EventEmitter<any>;\r\n    style: any;\r\n    styleClass: string;\r\n    expandIcon: string;\r\n    collapseIcon: string;\r\n    activeIndexChange: EventEmitter<any>;\r\n    tabList: QueryList<AccordionTab>;\r\n    tabListSubscription: Subscription;\r\n    private _activeIndex;\r\n    preventActiveIndexPropagation: boolean;\r\n    tabs: AccordionTab[];\r\n    constructor(el: ElementRef, changeDetector: ChangeDetectorRef);\r\n    ngAfterContentInit(): void;\r\n    initTabs(): any;\r\n    getBlockableElement(): HTMLElement;\r\n    activeIndex: any;\r\n    updateSelectionState(): void;\r\n    updateActiveIndex(): void;\r\n    ngOnDestroy(): void;\r\n}\r\nexport declare class AccordionModule {\r\n}\r\n"]}