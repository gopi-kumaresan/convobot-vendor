{"version":3,"file":"spinner.d.ts","sources":["spinner.d.ts"],"names":[],"mappings":"AAAA;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef, OnInit, EventEmitter, ChangeDetectorRef } from '@angular/core';\r\nimport { ControlValueAccessor } from '@angular/forms';\r\nexport declare const SPINNER_VALUE_ACCESSOR: any;\r\nexport declare class Spinner implements OnInit, ControlValueAccessor {\r\n    el: ElementRef;\r\n    cd: ChangeDetectorRef;\r\n    onChange: EventEmitter<any>;\r\n    onFocus: EventEmitter<any>;\r\n    onBlur: EventEmitter<any>;\r\n    min: number;\r\n    max: number;\r\n    maxlength: number;\r\n    size: number;\r\n    placeholder: string;\r\n    inputId: string;\r\n    disabled: boolean;\r\n    readonly: boolean;\r\n    tabindex: number;\r\n    required: boolean;\r\n    name: string;\r\n    ariaLabelledBy: string;\r\n    inputStyle: any;\r\n    inputStyleClass: string;\r\n    formatInput: boolean;\r\n    decimalSeparator: string;\r\n    thousandSeparator: string;\r\n    precision: number;\r\n    value: any;\r\n    _step: number;\r\n    formattedValue: string;\r\n    onModelChange: Function;\r\n    onModelTouched: Function;\r\n    keyPattern: RegExp;\r\n    timer: any;\r\n    focus: boolean;\r\n    filled: boolean;\r\n    negativeSeparator: string;\r\n    localeDecimalSeparator: string;\r\n    localeThousandSeparator: string;\r\n    thousandRegExp: RegExp;\r\n    calculatedPrecision: number;\r\n    inputfieldViewChild: ElementRef;\r\n    step: number;\r\n    constructor(el: ElementRef, cd: ChangeDetectorRef);\r\n    ngOnInit(): void;\r\n    repeat(event: Event, interval: number, dir: number): void;\r\n    spin(event: Event, dir: number): void;\r\n    getPrecision(): number;\r\n    toFixed(value: number, precision: number): string;\r\n    onUpButtonMousedown(event: Event): void;\r\n    onUpButtonMouseup(event: Event): void;\r\n    onUpButtonMouseleave(event: Event): void;\r\n    onDownButtonMousedown(event: Event): void;\r\n    onDownButtonMouseup(event: Event): void;\r\n    onDownButtonMouseleave(event: Event): void;\r\n    onInputKeydown(event: KeyboardEvent): void;\r\n    onInputChange(event: Event): void;\r\n    onInput(event: KeyboardEvent): void;\r\n    onInputBlur(event: any): void;\r\n    onInputFocus(event: any): void;\r\n    parseValue(val: string): number;\r\n    formatValue(): void;\r\n    clearTimer(): void;\r\n    writeValue(value: any): void;\r\n    registerOnChange(fn: Function): void;\r\n    registerOnTouched(fn: Function): void;\r\n    setDisabledState(val: boolean): void;\r\n    updateFilledState(): void;\r\n}\r\nexport declare class SpinnerModule {\r\n}\r\n"]}