{"version":3,"file":"primeng-lts-blockui.js","sources":["primeng-lts/blockui/blockui.ts","primeng-lts/blockui/primeng-lts-blockui.ts"],"names":[],"mappings":"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","sourcesContent":["import {NgModule,Component,Input,AfterViewInit,OnDestroy,ElementRef,ViewChild,ChangeDetectionStrategy} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {DomHandler} from 'primeng-lts/dom';\n\n@Component({\n    selector: 'p-blockUI',\n    template: `\n        <div #mask [class]=\"styleClass\" [ngClass]=\"{'ui-blockui-document':!target, 'ui-blockui ui-widget-overlay': true}\" [ngStyle]=\"{display: blocked ? 'block' : 'none'}\">\n            <ng-content></ng-content>\n        </div>\n    `,\n    changeDetection: ChangeDetectionStrategy.Default\n})\nexport class BlockUI implements AfterViewInit,OnDestroy {\n\n    @Input() target: any;\n    \n    @Input() autoZIndex: boolean = true;\n    \n    @Input() baseZIndex: number = 0;\n    \n    @Input() styleClass: string;\n    \n    @ViewChild('mask') mask: ElementRef;\n    \n    _blocked: boolean;\n        \n    constructor(public el: ElementRef) {}\n    \n    @Input() get blocked(): boolean {\n        return this._blocked;\n    }\n    \n    set blocked(val: boolean) {\n        this._blocked = val;\n        \n        if (this.mask && this.mask.nativeElement) {\n            if (this._blocked)\n                this.block();\n            else\n                this.unblock();\n        }\n    }\n    \n    ngAfterViewInit() {\n        if (this.target && !this.target.getBlockableElement) {\n            throw 'Target of BlockUI must implement BlockableUI interface';\n        }\n    }\n        \n    block() {\n        if (this.target) {\n            this.target.getBlockableElement().appendChild(this.mask.nativeElement);\n            let style = this.target.style||{};\n            style.position = 'relative';\n            this.target.style = style;\n        }\n        else {\n            document.body.appendChild(this.mask.nativeElement);\n        }\n        \n        if (this.autoZIndex) {\n            this.mask.nativeElement.style.zIndex = String(this.baseZIndex + (++DomHandler.zindex));\n        }\n    }\n    \n    unblock() {\n        this.el.nativeElement.appendChild(this.mask.nativeElement);\n    }\n    \n    ngOnDestroy() {\n        this.unblock();\n    }\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [BlockUI],\n    declarations: [BlockUI]\n})\nexport class BlockUIModule { }","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]}