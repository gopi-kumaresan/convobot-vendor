{"version":3,"file":"primeng-lts-inputtext.js","sources":["primeng-lts/inputtext/inputtext.ts","primeng-lts/inputtext/primeng-lts-inputtext.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,IAca,SAAS,GAAtB,MAAa,SAAS;AAAI,IAItB,YAAmB,EAAc,EAAqB,OAAgB;AAC1E,QADuB,OAAE,GAAF,EAAE,CAAY;AAAE,QAAmB,YAAO,GAAP,OAAO,CAAS;AAAE,KAAE;AAC7E,IACG,SAAS;AACZ,QAAO,IAAI,CAAC,iBAAiB,EAAE,CAAC;AAChC,KAAI;AACJ;AAC2G,IAExG,OAAO,CAAC,CAAC;AACZ,QAAO,IAAI,CAAC,iBAAiB,EAAE,CAAC;AAChC,KAAI;AACJ,IACG,iBAAiB;AACpB,QAAO,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,KAAK,IAAI,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM;AACvF,aAAwB,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;AAC5D,KAAI;AACJ,CAAA;;;;;;WAAA;AAED;AACwB,YAnBG,UAAU;AAAK,YAAyB,OAAO,uBAAlC,QAAQ;AAAO;AAQnD;AACH,IAFI,YAAY,CAAC,OAAO,EAAE,CAAC,QAAQ,CAAC,CAAC;AACtC,wCAEK;AAdQ,SAAS,qBAVrB,SAAS,CAAC,hBAUN,CAImC,WAAA,QAAQ,EAAE,CAAA;EAb9C,QAAQ,EAAE,ZAasC,GAJvC,SAAS,CAoBrB;UA7B2B,WACxB,IAAI,EAAE,eACF,1CA6BP,IAKY,eAAe,GAA5B,MAAa,eAAe;AAAI,CAAA,CAAA;cAlCF,EAAE,MAAM,eAC9B,uBAAuB,EAAE,MAAM,nEAiC1B,eAAe,qBAL3B,QAAQ,CAAC,WACN,OAAO,EAAE,CAAC;QA5BN,0BAA0B,EAAE,MAAM,eAClC,mBAAmB,EAAE,MAAM,eAC3B,yBAAyB,EAAE,QAAQ,WACtC,OACJ,CAAC,rJAwBwB,CAAC,WACvB,OAAO,EAAE,CAAC,SAAS,CAAC,WACpB,YAAY,EAAE,CAAC,SAAS,CAAC,OAC5B,CAAC,KACW,eAAe,CAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAAC;AAAE;ACzCnC;AACC;AACC,GAAC;AAEH;AAAE;AACU","sourcesContent":["import {NgModule,Directive,ElementRef,HostListener,DoCheck,Optional} from '@angular/core';\nimport {NgModel} from '@angular/forms';\nimport {CommonModule} from '@angular/common';\n\n@Directive({\n    selector: '[pInputText]',\n    host: {\n        '[class.ui-inputtext]': 'true',\n        '[class.ui-corner-all]': 'true',\n        '[class.ui-state-default]': 'true',\n        '[class.ui-widget]': 'true',\n        '[class.ui-state-filled]': 'filled'\n    }\n})\nexport class InputText implements DoCheck {\n\n    filled: boolean;\n\n    constructor(public el: ElementRef, @Optional() public ngModel: NgModel) {}\n        \n    ngDoCheck() {\n        this.updateFilledState();\n    }\n    \n    //To trigger change detection to manage ui-state-filled for material labels when there is no value binding\n    @HostListener('input', ['$event']) \n    onInput(e) {\n        this.updateFilledState();\n    }\n    \n    updateFilledState() {\n        this.filled = (this.el.nativeElement.value && this.el.nativeElement.value.length) ||\n                        (this.ngModel && this.ngModel.model);\n    }\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [InputText],\n    declarations: [InputText]\n})\nexport class InputTextModule { }","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]}