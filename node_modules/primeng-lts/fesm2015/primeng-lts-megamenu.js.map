{"version":3,"file":"primeng-lts-megamenu.js","sources":["primeng-lts/megamenu/megamenu.ts","primeng-lts/megamenu/primeng-lts-megamenu.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAwEa,QAAQ,GAArB,MAAa,QAAQ;AAErB,IAgBI,YAAmB,EAAc,EAAS,QAAmB;AACjE,QADuB,OAAE,GAAF,EAAE,CAAY;AAAE,QAAO,aAAQ,GAAR,QAAQ,CAAW;AAAE,QAVtD,gBAAW,GAAW,YAAY,CAAC;AAEhD,QAAa,eAAU,GAAY,IAAI,CAAC;AAExC,QAAa,eAAU,GAAW,CAAC,CAAC;AACnC,KAKoE;AACpE,IACG,gBAAgB,CAAC,KAAK,EAAE,IAAI,EAAE,QAAsB;AACvD,QAAO,IAAI,QAAQ,CAAC,QAAQ,EAAE;AAC9B,YAAW,OAAO;AAClB,SAAQ;AAET,QAAQ,IAAI,IAAI,CAAC,WAAW,EAAE;AAC7B,YAAW,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;AAC1C,YAAW,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;AACnC,SAAQ;AACR,QACO,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;AAE/B,QAAQ,IAAI,QAAQ,CAAC,KAAK,EAAE;AAC3B,YAAW,IAAI,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,kBAAkB,CAAC;AAC7D,YAAW,IAAI,OAAO,EAAE;AACxB,gBAAe,IAAI,IAAI,CAAC,UAAU,EAAE;AACpC,oBAAmB,OAAO,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,UAAU,IAAI,EAAE,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;AAC1F,iBAAgB;AAEjB,gBAAgB,IAAI,IAAI,CAAC,WAAW,KAAK,YAAY,EAAE;AACtD,oBAAmB,OAAO,CAAC,KAAK,CAAC,GAAG,GAAG,UAAU,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;AAC1F,oBAAmB,OAAO,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC;AAC9C,iBAAgB;AAChB,qBAAoB,IAAI,IAAI,CAAC,WAAW,KAAK,UAAU,EAAE;AACzD,oBAAmB,OAAO,CAAC,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC;AAC7C,oBAAmB,OAAO,CAAC,KAAK,CAAC,IAAI,GAAG,UAAU,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;AAC1F,iBAAgB;AAChB,aAAY;AACZ,SAAQ;AACR,KAAI;AACJ,IACG,gBAAgB,CAAC,KAAK,EAAE,IAAI;AAC/B,QAAO,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;AACrC,YAAW,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;AAClC,SAAQ,EAAE,IAAI,CAAC,CAAC;AAChB,KAAI;AACJ,IACG,SAAS,CAAC,KAAK,EAAE,IAA6B;AACjD,QAAO,IAAI,IAAI,CAAC,QAAQ,EAAE;AAC1B,YAAW,KAAK,CAAC,cAAc,EAAE,CAAC;AAClC,YAAW,OAAO;AAClB,SAAQ;AACR,QACO,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE;AACtB,YAAW,KAAK,CAAC,cAAc,EAAE,CAAC;AAClC,SAAQ;AACR,QACO,IAAI,IAAI,CAAC,OAAO,EAAE;AACzB,YAAW,IAAI,CAAC,OAAO,CAAC;AACxB,gBAAe,aAAa,EAAE,KAAK;AACnC,gBAAe,IAAI,EAAE,IAAI;AACzB,aAAY,CAAC,CAAC;AACd,SAAQ;AACR,QACO,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;AAC9B,KAAI;AACJ,IACG,cAAc,CAAC,QAAsB;AACxC,QAAO,IAAI,MAAM,GAAG,QAAQ,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC,MAAM,GAAE,CAAC,CAAC;AAC9D,QAAO,IAAI,WAAW,CAAC;AACvB,QAAO,QAAO,MAAM;AACpB,YAAW,KAAK,CAAC;AACjB,gBAAe,WAAW,GAAE,mBAAmB,CAAC;AAChD,gBAAW,MAAM;AACjB,YACW,KAAK,CAAC;AACjB,gBAAe,WAAW,GAAE,mBAAmB,CAAC;AAChD,gBAAW,MAAM;AACjB,YACW,KAAK,CAAC;AACjB,gBAAe,WAAW,GAAE,mBAAmB,CAAC;AAChD,gBAAW,MAAM;AACjB,YACW,KAAK,CAAC;AACjB,gBAAe,WAAW,GAAE,mBAAmB,CAAC;AAChD,gBAAW,MAAM;AACjB,YACW;AACX,gBAAe,WAAW,GAAE,oBAAoB,CAAC;AACjD,gBAAW,MAAM;AACjB,SAAQ;AACR,QACO,OAAO,WAAW,CAAC;AAC1B,KAAI;AACJ,CAAA;;;;;;;;;;;;;;;;;4JAAA;AAED;AACuB,YAzFI,UAAU;AAAK,YAAc,SAAS;AAAI;AAhBxD;AAAc,IAAtB,KAAK,EAAE;AAAE,uCAAqB;AAEtB;AAEZ,IAFI,KAAK,EAAE;AAAE,uCAAU;AAEX;AAAc,IAAtB,KAAK,EAAE;AAAE,4CAAkB;AAEnB;AAAc,IAAtB,KAAK,EAAE;AAAE,6CAAkC;AAEnC;AAAc,IAAtB,KAAK,EAAE;AAAE,4CAA0B;AAE3B;AAAc,IAAtB,KAAK,EAAE;AAAE,4CAAsB,CA6FpC;AAzGa,QAAQ,qBAlEpB,SAAS,CAAC,vCA4KV,IAKY,cAAc,GAA3B,MAAa,cAAc;AAAI,CAAA,CAAA;EAhL3B,QAAQ,EAAE,YAAY,WACtB,QAAQ,EAAE,5CA+KD,cAAc,qBAL1B,QAAQ,CAAC,WACN,OAAO,EAAE,CAAC;KAAY,EAAC,YAAY,CAAC,WACpC,OAAO,EAAE,CAAC,QAAQ,EAAC,YAAY,CAAC,WAChC,YAAY,EAAE,CAAC,QAAQ,CAAC,OAC3B,CAAC,KACW,cAAc,CAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAlH1B,WACD,eAAe,EAAE;MAAuB,CAAC,OAAO,OACnD,CAAC,KACW,QAAQ;AAwGpB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAO+B;AAAE;ACvLlC;AACC;AACC,GAAC;AAEH;AAAE;AACQ","sourcesContent":["import {NgModule,Component,ElementRef,Input,Renderer2,ChangeDetectionStrategy} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {DomHandler} from 'primeng-lts/dom';\nimport {MegaMenuItem,MenuItem} from 'primeng-lts/api';\nimport {RouterModule} from '@angular/router';\n\n@Component({\n    selector: 'p-megaMenu',\n    template: `\n        <div [class]=\"styleClass\" [ngStyle]=\"style\"\n            [ngClass]=\"{'ui-megamenu ui-widget ui-widget-content ui-corner-all':true,'ui-megamenu-horizontal': orientation == 'horizontal','ui-megamenu-vertical': orientation == 'vertical'}\">\n            <ul class=\"ui-megamenu-root-list\" role=\"menubar\">\n                <ng-template ngFor let-category [ngForOf]=\"model\">\n                    <li *ngIf=\"category.separator\" class=\"ui-menu-separator ui-widget-content\" [ngClass]=\"{'ui-helper-hidden': category.visible === false}\">\n                    <li *ngIf=\"!category.separator\" #item [ngClass]=\"{'ui-menuitem ui-corner-all':true,'ui-menuitem-active':item==activeItem, 'ui-helper-hidden': category.visible === false}\"\n                        (mouseenter)=\"onItemMouseEnter($event, item, category)\" (mouseleave)=\"onItemMouseLeave($event, item)\">\n   \n                        <a *ngIf=\"!category.routerLink\" [href]=\"category.url||'#'\" [attr.target]=\"category.target\" [attr.title]=\"category.title\" [attr.id]=\"category.id\" (click)=\"itemClick($event, category)\" [attr.tabindex]=\"category.tabindex ? category.tabindex : '0'\"\n                            [ngClass]=\"{'ui-menuitem-link ui-corner-all':true,'ui-state-disabled':category.disabled}\" [ngStyle]=\"category.style\" [class]=\"category.styleClass\">\n                            <span class=\"ui-menuitem-icon\" *ngIf=\"category.icon\" [ngClass]=\"category.icon\"></span>\n                            <span class=\"ui-menuitem-text\">{{category.label}}</span>\n                            <span *ngIf=\"category.items\" class=\"ui-submenu-icon pi pi-fw\" [ngClass]=\"{'pi-caret-down':orientation=='horizontal','pi-caret-right':orientation=='vertical'}\"></span>\n                        </a>\n                        <a *ngIf=\"category.routerLink\" [routerLink]=\"category.routerLink\" [queryParams]=\"category.queryParams\" [routerLinkActive]=\"'ui-menuitem-link-active'\" [routerLinkActiveOptions]=\"category.routerLinkActiveOptions||{exact:false}\" [attr.tabindex]=\"category.tabindex ? category.tabindex : '0'\" \n                            [attr.target]=\"category.target\" [attr.title]=\"category.title\" [attr.id]=\"category.id\"\n                            (click)=\"itemClick($event, category)\" [ngClass]=\"{'ui-menuitem-link ui-corner-all':true,'ui-state-disabled':category.disabled}\" [ngStyle]=\"category.style\" [class]=\"category.styleClass\"\n                            [fragment]=\"category.fragment\" [queryParamsHandling]=\"category.queryParamsHandling\" [preserveFragment]=\"category.preserveFragment\" [skipLocationChange]=\"category.skipLocationChange\" [replaceUrl]=\"category.replaceUrl\" [state]=\"category.state\">\n                            <span class=\"ui-menuitem-icon\" *ngIf=\"category.icon\" [ngClass]=\"category.icon\"></span>\n                            <span class=\"ui-menuitem-text\">{{category.label}}</span>\n                        </a>\n\n                        <div class=\"ui-megamenu-panel ui-widget-content ui-corner-all ui-shadow\" *ngIf=\"category.items\">\n                            <div class=\"ui-megamenu-grid\">\n                                <ng-template ngFor let-column [ngForOf]=\"category.items\">\n                                    <div [class]=\"getColumnClass(category)\">\n                                        <ng-template ngFor let-submenu [ngForOf]=\"column\">\n                                            <ul class=\"ui-megamenu-submenu\" role=\"menu\">\n                                                <li class=\"ui-widget-header ui-megamenu-submenu-header ui-corner-all\">{{submenu.label}}</li>\n                                                <ng-template ngFor let-item [ngForOf]=\"submenu.items\">\n                                                    <li *ngIf=\"item.separator\" class=\"ui-menu-separator ui-widget-content\" [ngClass]=\"{'ui-helper-hidden': item.visible === false}\" role=\"separator\">\n                                                    <li *ngIf=\"!item.separator\" class=\"ui-menuitem ui-corner-all\" [ngClass]=\"{'ui-helper-hidden': item.visible === false}\" role=\"none\">\n                                                        <a *ngIf=\"!item.routerLink\" role=\"menuitem\" [href]=\"item.url||'#'\" class=\"ui-menuitem-link ui-corner-all\" [attr.target]=\"item.target\" [attr.title]=\"item.title\" [attr.id]=\"item.id\" [attr.tabindex]=\"item.tabindex ? item.tabindex : '0'\"\n                                                            [ngClass]=\"{'ui-state-disabled':item.disabled}\" (click)=\"itemClick($event, item)\">\n                                                            <span class=\"ui-menuitem-icon\" *ngIf=\"item.icon\" [ngClass]=\"item.icon\"></span>\n                                                            <span class=\"ui-menuitem-text\">{{item.label}}</span>\n                                                        </a>\n                                                        <a *ngIf=\"item.routerLink\" role=\"menuitem\" [routerLink]=\"item.routerLink\" [queryParams]=\"item.queryParams\" [routerLinkActive]=\"'ui-menuitem-link-active'\" [attr.tabindex]=\"item.tabindex ? item.tabindex : '0'\"\n                                                            [routerLinkActiveOptions]=\"item.routerLinkActiveOptions||{exact:false}\" class=\"ui-menuitem-link ui-corner-all\" \n                                                             [attr.target]=\"item.target\" [attr.title]=\"item.title\" [attr.id]=\"item.id\"\n                                                            [ngClass]=\"{'ui-state-disabled':item.disabled}\" (click)=\"itemClick($event, item)\"\n                                                            [fragment]=\"item.fragment\" [queryParamsHandling]=\"item.queryParamsHandling\" [preserveFragment]=\"item.preserveFragment\" [skipLocationChange]=\"item.skipLocationChange\" [replaceUrl]=\"item.replaceUrl\" [state]=\"item.state\">\n                                                            <span class=\"ui-menuitem-icon\" *ngIf=\"item.icon\" [ngClass]=\"item.icon\"></span>\n                                                            <span class=\"ui-menuitem-text\">{{item.label}}</span>\n                                                        </a>\n                                                    </li>\n                                                </ng-template>\n                                            </ul>\n                                        </ng-template>\n                                    </div>\n                                </ng-template>\n                            </div>\n                        </div>\n                    </li>\n                </ng-template>\n                <li class=\"ui-menuitem ui-menuitem-custom ui-corner-all\" *ngIf=\"orientation === 'horizontal'\">\n                    <ng-content></ng-content>\n                </li>\n            </ul>\n        </div>\n    `,\n    changeDetection: ChangeDetectionStrategy.Default\n})\nexport class MegaMenu {\n\n    @Input() model: MegaMenuItem[];\n\n    @Input() style: any;\n\n    @Input() styleClass: string;\n    \n    @Input() orientation: string = 'horizontal';\n\n    @Input() autoZIndex: boolean = true;\n\n    @Input() baseZIndex: number = 0;\n    \n    activeItem: any;\n\n    hideTimeout: any;\n                \n    constructor(public el: ElementRef, public renderer: Renderer2) {}\n    \n    onItemMouseEnter(event, item, menuitem: MegaMenuItem) {\n        if (menuitem.disabled) {\n            return;\n        }\n\n        if (this.hideTimeout) {\n            clearTimeout(this.hideTimeout);\n            this.hideTimeout = null;\n        }\n        \n        this.activeItem = item;\n\n        if (menuitem.items) {\n            let submenu = item.children[0].nextElementSibling;\n            if (submenu) {\n                if (this.autoZIndex) {\n                    submenu.style.zIndex = String(this.baseZIndex + (++DomHandler.zindex));\n                }\n\n                if (this.orientation === 'horizontal') {\n                    submenu.style.top = DomHandler.getOuterHeight(item.children[0]) + 'px';\n                    submenu.style.left = '0px';\n                }\n                else if (this.orientation === 'vertical') {\n                    submenu.style.top = '0px';\n                    submenu.style.left = DomHandler.getOuterWidth(item.children[0]) + 'px';\n                }\n            }\n        }\n    }\n    \n    onItemMouseLeave(event, link) {\n        this.hideTimeout = setTimeout(() => {\n            this.activeItem = null;\n        }, 1000);\n    }\n    \n    itemClick(event, item: MenuItem | MegaMenuItem) {\n        if (item.disabled) {\n            event.preventDefault();\n            return;\n        }\n        \n        if (!item.url) {\n            event.preventDefault();\n        }\n        \n        if (item.command) {\n            item.command({\n                originalEvent: event,\n                item: item\n            });\n        }\n                        \n        this.activeItem = null;\n    }\n    \n    getColumnClass(menuitem: MegaMenuItem) {\n        let length = menuitem.items ? menuitem.items.length: 0;\n        let columnClass;\n        switch(length) {\n            case 2:\n                columnClass= 'ui-megamenu-col-6';\n            break;\n            \n            case 3:\n                columnClass= 'ui-megamenu-col-4';\n            break;\n            \n            case 4:\n                columnClass= 'ui-megamenu-col-3';\n            break;\n            \n            case 6:\n                columnClass= 'ui-megamenu-col-2';\n            break;\n                        \n            default:\n                columnClass= 'ui-megamenu-col-12';\n            break;\n        }\n        \n        return columnClass;\n    }\n}\n\n@NgModule({\n    imports: [CommonModule,RouterModule],\n    exports: [MegaMenu,RouterModule],\n    declarations: [MegaMenu]\n})\nexport class MegaMenuModule { }","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]}