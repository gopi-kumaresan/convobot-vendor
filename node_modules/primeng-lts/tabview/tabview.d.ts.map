{"version":3,"file":"tabview.d.ts","sources":["tabview.d.ts"],"names":[],"mappings":"AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef, OnDestroy, EventEmitter, AfterContentInit, QueryList, TemplateRef, EmbeddedViewRef, ViewContainerRef, ChangeDetectorRef } from '@angular/core';\r\nimport { BlockableUI } from 'primeng-lts/api';\r\nexport declare class TabViewNav {\r\n    tabs: TabPanel[];\r\n    orientation: string;\r\n    onTabClick: EventEmitter<any>;\r\n    onTabCloseClick: EventEmitter<any>;\r\n    getDefaultHeaderClass(tab: TabPanel): string;\r\n    clickTab(event: any, tab: TabPanel): void;\r\n    clickClose(event: any, tab: TabPanel): void;\r\n}\r\nexport declare class TabPanel implements AfterContentInit, OnDestroy {\r\n    viewContainer: ViewContainerRef;\r\n    private cd;\r\n    header: string;\r\n    disabled: boolean;\r\n    closable: boolean;\r\n    headerStyle: any;\r\n    headerStyleClass: string;\r\n    cache: boolean;\r\n    tooltip: any;\r\n    tooltipPosition: string;\r\n    tooltipPositionStyle: string;\r\n    tooltipStyleClass: string;\r\n    templates: QueryList<any>;\r\n    constructor(viewContainer: ViewContainerRef, cd: ChangeDetectorRef);\r\n    closed: boolean;\r\n    view: EmbeddedViewRef<any>;\r\n    _selected: boolean;\r\n    _leftIcon: string;\r\n    _rightIcon: string;\r\n    loaded: boolean;\r\n    id: string;\r\n    contentTemplate: TemplateRef<any>;\r\n    headerTemplate: TemplateRef<any>;\r\n    ngAfterContentInit(): void;\r\n    selected: boolean;\r\n    leftIcon: string;\r\n    rightIcon: string;\r\n    ngOnDestroy(): void;\r\n}\r\nexport declare class TabView implements AfterContentInit, BlockableUI {\r\n    el: ElementRef;\r\n    orientation: string;\r\n    style: any;\r\n    styleClass: string;\r\n    controlClose: boolean;\r\n    tabPanels: QueryList<TabPanel>;\r\n    onChange: EventEmitter<any>;\r\n    onClose: EventEmitter<any>;\r\n    activeIndexChange: EventEmitter<number>;\r\n    initialized: boolean;\r\n    tabs: TabPanel[];\r\n    _activeIndex: number;\r\n    preventActiveIndexPropagation: boolean;\r\n    constructor(el: ElementRef);\r\n    ngAfterContentInit(): void;\r\n    initTabs(): void;\r\n    open(event: Event, tab: TabPanel): void;\r\n    close(event: Event, tab: TabPanel): void;\r\n    closeTab(tab: TabPanel): void;\r\n    findSelectedTab(): TabPanel;\r\n    findTabIndex(tab: TabPanel): number;\r\n    getBlockableElement(): HTMLElement;\r\n    activeIndex: number;\r\n}\r\nexport declare class TabViewModule {\r\n}\r\n"]}