{"version":3,"file":"multiselect.d.ts","sources":["multiselect.d.ts"],"names":[],"mappingssourcesContent":["import { ElementRef, OnInit, AfterViewInit, AfterContentInit, AfterViewChecked, OnDestroy, Renderer2, EventEmitter, ChangeDetectorRef, TemplateRef, QueryList } from '@angular/core';\r\nimport { AnimationEvent } from '@angular/animations';\r\nimport { SelectItem } from 'primeng-lts/api';\r\nimport { ControlValueAccessor } from '@angular/forms';\r\nexport declare const MULTISELECT_VALUE_ACCESSOR: any;\r\nexport declare class MultiSelectItem {\r\n    option: any;\r\n    selected: boolean;\r\n    disabled: boolean;\r\n    visible: boolean;\r\n    itemSize: number;\r\n    template: TemplateRef<any>;\r\n    maxSelectionLimitReached: boolean;\r\n    onClick: EventEmitter<any>;\r\n    onKeydown: EventEmitter<any>;\r\n    onOptionClick(event: Event): void;\r\n    onOptionKeydown(event: Event): void;\r\n}\r\nexport declare class MultiSelect implements OnInit, AfterViewInit, AfterContentInit, AfterViewChecked, OnDestroy, ControlValueAccessor {\r\n    el: ElementRef;\r\n    renderer: Renderer2;\r\n    private cd;\r\n    scrollHeight: string;\r\n    _defaultLabel: string;\r\n    defaultLabel: string;\r\n    style: any;\r\n    styleClass: string;\r\n    panelStyle: any;\r\n    panelStyleClass: string;\r\n    inputId: string;\r\n    disabled: boolean;\r\n    readonly: boolean;\r\n    filter: boolean;\r\n    filterPlaceHolder: string;\r\n    filterLocale: string;\r\n    overlayVisible: boolean;\r\n    tabindex: number;\r\n    appendTo: any;\r\n    dataKey: string;\r\n    name: string;\r\n    ariaLabelledBy: string;\r\n    displaySelectedLabel: boolean;\r\n    maxSelectedLabels: number;\r\n    selectionLimit: number;\r\n    selectedItemsLabel: string;\r\n    showToggleAll: boolean;\r\n    emptyFilterMessage: string;\r\n    resetFilterOnHide: boolean;\r\n    dropdownIcon: string;\r\n    optionLabel: string;\r\n    showHeader: boolean;\r\n    autoZIndex: boolean;\r\n    baseZIndex: number;\r\n    filterBy: string;\r\n    virtualScroll: boolean;\r\n    itemSize: number;\r\n    showTransitionOptions: string;\r\n    hideTransitionOptions: string;\r\n    ariaFilterLabel: string;\r\n    filterMatchMode: string;\r\n    tooltip: string;\r\n    tooltipPosition: string;\r\n    tooltipPositionStyle: string;\r\n    tooltipStyleClass: string;\r\n    autofocusFilter: boolean;\r\n    containerViewChild: ElementRef;\r\n    filterInputChild: ElementRef;\r\n    accessibleViewChild: ElementRef;\r\n    footerFacet: any;\r\n    headerFacet: any;\r\n    templates: QueryList<any>;\r\n    onChange: EventEmitter<any>;\r\n    onFocus: EventEmitter<any>;\r\n    onBlur: EventEmitter<any>;\r\n    onClick: EventEmitter<any>;\r\n    onPanelShow: EventEmitter<any>;\r\n    onPanelHide: EventEmitter<any>;\r\n    value: any[];\r\n    onModelChange: Function;\r\n    onModelTouched: Function;\r\n    overlay: HTMLDivElement;\r\n    valuesAsString: string;\r\n    focus: boolean;\r\n    filled: boolean;\r\n    documentClickListener: any;\r\n    filterValue: string;\r\n    visibleOptions: SelectItem[];\r\n    disabledSelectedOptions: SelectItem[];\r\n    filtered: boolean;\r\n    itemTemplate: TemplateRef<any>;\r\n    selectedItemsTemplate: TemplateRef<any>;\r\n    headerCheckboxFocus: boolean;\r\n    _options: any[];\r\n    maxSelectionLimitReached: boolean;\r\n    documentResizeListener: any;\r\n    preventModelTouched: boolean;\r\n    constructor(el: ElementRef, renderer: Renderer2, cd: ChangeDetectorRef);\r\n    options: any[];\r\n    ngOnInit(): void;\r\n    ngAfterContentInit(): void;\r\n    ngAfterViewInit(): void;\r\n    ngAfterViewChecked(): void;\r\n    writeValue(value: any): void;\r\n    checkSelectionLimit(): void;\r\n    updateFilledState(): void;\r\n    registerOnChange(fn: Function): void;\r\n    registerOnTouched(fn: Function): void;\r\n    setDisabledState(val: boolean): void;\r\n    onOptionClick(event: any): void;\r\n    isSelected(value: any): boolean;\r\n    findSelectionIndex(val: any): number;\r\n    toggleAll(event: Event): void;\r\n    isAllChecked(): boolean;\r\n    isAllVisibleOptionsChecked(): boolean;\r\n    getEnabledOptionCount(): number;\r\n    setDisabledSelectedOptions(): void;\r\n    show(): void;\r\n    onOverlayAnimationStart(event: AnimationEvent): void;\r\n    appendOverlay(): void;\r\n    restoreOverlayAppend(): void;\r\n    alignOverlay(): void;\r\n    hide(): void;\r\n    close(event: any): void;\r\n    onMouseclick(event: any, input: any): void;\r\n    isOverlayClick(event: any): boolean;\r\n    isOutsideClicked(event: Event): boolean;\r\n    onInputFocus(event: any): void;\r\n    onInputBlur(event: any): void;\r\n    onOptionKeydown(event: any): void;\r\n    findNextItem(item: any): any;\r\n    findPrevItem(item: any): any;\r\n    onKeydown(event: KeyboardEvent): void;\r\n    updateLabel(): void;\r\n    findLabelByValue(val: any): string;\r\n    onFilter(): void;\r\n    activateFilter(): void;\r\n    isItemVisible(option: SelectItem): boolean;\r\n    getVisibleOptions(): SelectItem[];\r\n    onHeaderCheckboxFocus(): void;\r\n    onHeaderCheckboxBlur(): void;\r\n    bindDocumentClickListener(): void;\r\n    unbindDocumentClickListener(): void;\r\n    bindDocumentResizeListener(): void;\r\n    unbindDocumentResizeListener(): void;\r\n    onWindowResize(): void;\r\n    onOverlayHide(): void;\r\n    ngOnDestroy(): void;\r\n}\r\nexport declare class MultiSelectModule {\r\n}\r\n"]}