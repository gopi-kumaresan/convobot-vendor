{"version":3,"file":"togglebutton.d.ts","sources":["togglebutton.d.ts"],"names":[],"mappings":"AAAA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;;;AACA","sourcesContent":["import { EventEmitter, AfterViewInit, ElementRef } from '@angular/core';\nimport { ControlValueAccessor } from '@angular/forms';\nexport declare const TOGGLEBUTTON_VALUE_ACCESSOR: any;\nexport declare class ToggleButton implements ControlValueAccessor, AfterViewInit {\n    onLabel: string;\n    offLabel: string;\n    onIcon: string;\n    offIcon: string;\n    ariaLabelledBy: string;\n    disabled: boolean;\n    style: any;\n    styleClass: string;\n    inputId: string;\n    tabindex: number;\n    iconPos: string;\n    onChange: EventEmitter<any>;\n    checkboxViewChild: ElementRef;\n    checkbox: HTMLInputElement;\n    checked: boolean;\n    focus: boolean;\n    onModelChange: Function;\n    onModelTouched: Function;\n    ngAfterViewInit(): void;\n    toggle(event: Event): void;\n    onFocus(): void;\n    onBlur(): void;\n    writeValue(value: any): void;\n    registerOnChange(fn: Function): void;\n    registerOnTouched(fn: Function): void;\n    setDisabledState(val: boolean): void;\n    readonly hasOnLabel: boolean;\n    readonly hasOffLabel: boolean;\n}\nexport declare class ToggleButtonModule {\n}\n"]}