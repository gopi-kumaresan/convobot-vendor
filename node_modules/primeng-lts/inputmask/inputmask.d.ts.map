{"version":3,"file":"inputmask.d.ts","sources":["inputmask.d.ts"],"names":[],"mappings":"AAAA;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef, OnInit, OnDestroy, EventEmitter } from '@angular/core';\r\nimport { ControlValueAccessor } from '@angular/forms';\r\nexport declare const INPUTMASK_VALUE_ACCESSOR: any;\r\nexport declare class InputMask implements OnInit, OnDestroy, ControlValueAccessor {\r\n    el: ElementRef;\r\n    type: string;\r\n    slotChar: string;\r\n    autoClear: boolean;\r\n    style: any;\r\n    inputId: string;\r\n    styleClass: string;\r\n    placeholder: string;\r\n    size: number;\r\n    maxlength: number;\r\n    tabindex: string;\r\n    title: string;\r\n    ariaLabel: string;\r\n    ariaRequired: boolean;\r\n    disabled: boolean;\r\n    readonly: boolean;\r\n    unmask: boolean;\r\n    name: string;\r\n    required: boolean;\r\n    characterPattern: string;\r\n    autoFocus: boolean;\r\n    autocomplete: string;\r\n    inputViewChild: ElementRef;\r\n    onComplete: EventEmitter<any>;\r\n    onFocus: EventEmitter<any>;\r\n    onBlur: EventEmitter<any>;\r\n    onInput: EventEmitter<any>;\r\n    onKeydown: EventEmitter<any>;\r\n    value: any;\r\n    _mask: string;\r\n    onModelChange: Function;\r\n    onModelTouched: Function;\r\n    input: HTMLInputElement;\r\n    filled: boolean;\r\n    defs: any;\r\n    tests: any[];\r\n    partialPosition: any;\r\n    firstNonMaskPos: number;\r\n    lastRequiredNonMaskPos: any;\r\n    len: number;\r\n    oldVal: string;\r\n    buffer: any;\r\n    defaultBuffer: string;\r\n    focusText: string;\r\n    caretTimeoutId: any;\r\n    androidChrome: boolean;\r\n    focused: boolean;\r\n    constructor(el: ElementRef);\r\n    ngOnInit(): void;\r\n    mask: string;\r\n    initMask(): void;\r\n    writeValue(value: any): void;\r\n    registerOnChange(fn: Function): void;\r\n    registerOnTouched(fn: Function): void;\r\n    setDisabledState(val: boolean): void;\r\n    caret(first?: number, last?: number): {\r\n        begin: any;\r\n        end: any;\r\n    };\r\n    isCompleted(): boolean;\r\n    getPlaceholder(i: number): string;\r\n    seekNext(pos: any): any;\r\n    seekPrev(pos: any): any;\r\n    shiftL(begin: number, end: number): void;\r\n    shiftR(pos: any): void;\r\n    handleAndroidInput(e: any): void;\r\n    onInputBlur(e: any): void;\r\n    onInputKeydown(e: any): void;\r\n    onKeyPress(e: any): void;\r\n    clearBuffer(start: any, end: any): void;\r\n    writeBuffer(): void;\r\n    checkVal(allow?: boolean): any;\r\n    onInputFocus(event: any): void;\r\n    onInputChange(event: any): void;\r\n    handleInputChange(event: any): void;\r\n    getUnmaskedValue(): string;\r\n    updateModel(e: any): void;\r\n    updateFilledState(): void;\r\n    focus(): void;\r\n    ngOnDestroy(): void;\r\n}\r\nexport declare class InputMaskModule {\r\n}\r\n"]}