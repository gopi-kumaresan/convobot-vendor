{"version":3,"file":"primeng-lts-captcha.js","sources":["primeng-lts/captcha/captcha.ts","primeng-lts/captcha/primeng-lts-captcha.ts"],"names":[],"mappings":"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","sourcesContent":["import {NgModule,AfterViewInit,Component,EventEmitter,Input,NgZone,OnDestroy,Output,ElementRef,ChangeDetectionStrategy} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\n@Component({\n    selector: 'p-captcha',\n    template: `<div></div>`,\n    changeDetection: ChangeDetectionStrategy.Default\n})\nexport class Captcha implements AfterViewInit,OnDestroy {\n\n    @Input() siteKey: string = null;\n        \n    @Input() theme = 'light';\n    \n    @Input() type = 'image';\n    \n    @Input() size = 'normal';\n    \n    @Input() tabindex = 0;\n     \n    @Input() initCallback = \"initRecaptcha\";\n    \n    @Output() onResponse: EventEmitter<any> = new EventEmitter();\n    \n    @Output() onExpire: EventEmitter<any> = new EventEmitter();\n    \n    private _instance: any = null;\n\n    private _language: any = null;\n\n    @Input() get language(): string {\n        return this._language;\n    }\n\n    set language(language: string) {\n        this._language = language;\n        this.init();\n    }\n\n    constructor(public el: ElementRef, public _zone: NgZone) {}\n    \n    ngAfterViewInit() {\n        if ((<any>window).grecaptcha) {\n            if (!(<any>window).grecaptcha.render){\n                setTimeout(() =>{\n                    this.init();\n                },100)\n            }\n            else {\n                this.init();\n            }\n        }\n        else {\n            (<any>window)[this.initCallback] = () => {\n              this.init();\n            }\n        } \n    }\n    \n    init()Â {\n        this._instance = (<any>window).grecaptcha.render(this.el.nativeElement.children[0], {\n            'sitekey': this.siteKey,\n            'theme': this.theme,\n            'type': this.type,\n            'size': this.size,\n            'tabindex': this.tabindex,\n            'hl': this.language,\n            'callback': (response: string) => {this._zone.run(() => this.recaptchaCallback(response))},\n            'expired-callback': () => {this._zone.run(() => this.recaptchaExpiredCallback())}\n        });\n    }\n    \n    reset() {\n        if (this._instance === null)\n            return;\n        \n        (<any>window).grecaptcha.reset(this._instance);\n    }\n    \n    getResponse(): String {\n        if (this._instance === null)\n            return null;\n        \n        return (<any>window).grecaptcha.getResponse(this._instance);\n    }\n    \n    recaptchaCallback(response: string) {\n        this.onResponse.emit({\n            response: response\n        });\n    }\n\n    recaptchaExpiredCallback() {\n        this.onExpire.emit();\n    }\n    \n    ngOnDestroy() {\n        if (this._instance != null) {\n          (<any>window).grecaptcha.reset(this._instance);\n        }\n    }\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [Captcha],\n    declarations: [Captcha]\n})\nexport class CaptchaModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]}