{"version":3,"file":"primeng-lts-togglebutton.js","sources":["primeng-lts/togglebutton/togglebutton.ts","primeng-lts/togglebutton/primeng-lts-togglebutton.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,IAIa,2BAA2B,GAAQ;AAC/C,IAAC,OAAO,EAAE,iBAAiB;AAC3B,IAAC,WAAW,EAAE,UAAU,CAAC,cAAM,OAAA,YAAY,GAAA,CAAC;AAC5C,IAAC,KAAK,EAAE,IAAI;AACZ,CAAA,CAAC;AAsBF;AAAiD,IAAjD;AAA2B,QAEd,YAAO,GAAW,KAAK,CAAC;AAErC,QAAa,aAAQ,GAAW,IAAI,CAAC;AAErC,QAgBa,YAAO,GAAW,MAAM,CAAC;AAEtC,QAAc,aAAQ,GAAsB,IAAI,YAAY,EAAE,CAAC;AAC9D,QAKG,YAAO,GAAY,KAAK,CAAC;AAE7B,QAAI,UAAK,GAAY,KAAK,CAAC;AAC1B,QACG,kBAAa,GAAa,eAAQ,CAAC;AACtC,QACG,mBAAc,GAAa,eAAQ,CAAC;AACvC,KAsDA;AAED,IAvDI,sCAAe,GAAf;AAAe,QACX,IAAI,IAAI,CAAC,iBAAiB,EAAC;AAClC,YAAW,IAAI,CAAC,QAAQ,GAAsB,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC;AACnF,SAAQ;AACR,KAAI;AACH,IACE,6BAAM,GAAN,UAAO,KAAY;AACtB,QAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;AAC3B,YAAW,IAAI,CAAC,OAAO,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC;AACxC,YAAW,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AAC5C,YAAW,IAAI,CAAC,cAAc,EAAE,CAAC;AACjC,YAAW,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;AAC9B,gBAAe,aAAa,EAAE,KAAK;AACnC,gBAAe,OAAO,EAAE,IAAI,CAAC,OAAO;AACpC,aAAY,CAAC,CAAC;AACd,YAAW,IAAI,IAAI,CAAC,QAAQ,EAAE;AAC9B,gBAAe,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;AACrC,aAAY;AACZ,SAAQ;AACR,KAAI;AAEJ,IAAG,8BAAO,GAAP;AACD,QAAK,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;AACzB,KAAI;AACH,IACE,6BAAM,GAAN;AACA,QAAI,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;AAC1B,QAAO,IAAI,CAAC,cAAc,EAAE,CAAC;AAC7B,KAAI;AACH,IACE,iCAAU,GAAV,UAAW,KAAU;AAAK,QACtB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;AAC5B,KAAI;AACH,IACE,uCAAgB,GAAhB,UAAiB,EAAY;AAAK,QAC9B,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;AAC/B,KAAI;AAEJ,IAAG,wCAAiB,GAAjB,UAAkB,EAAY;AAAK,QAC/B,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;AAChC,KAAI;AACH,IACE,uCAAgB,GAAhB,UAAiB,GAAY;AAAK,QAC9B,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;AAC3B,KAAI;AACH,IACE,sBAAI,oCAAU;AAAK,aAAnB;AAAe,YACX,OAAO,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;AACtD,SAAI;AACH;AACsB;AACJ,OAHf;AACJ,IACG,sBAAI,qCAAW;AAAK,aAApB;AAAe,YACX,OAAO,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;AACtD,SAAI;AAEL;AAEc;AACD,OALR;AACJ,IAzFY;AAAc,QAAtB,KAAK,EAAE;AAAE,iDAAuB;AAEpC,IAAY;AAAc,QAAtB,KAAK,EAAE;AAAE,kDAAuB;AAEpC,IAAY;AAAc,QAAtB,KAAK,EAAE;AAAE,gDAAc;AAE3B,IAAY;AAAc,QAAtB,KAAK,EAAE;AAAE,iDAAe;AAE5B,IAAY;AAAc,QAAtB,KAAK,EAAE;AAAE,wDAAsB;AAEnC,IAAY;AAAc,QAAtB,KAAK,EAAE;AAAE,kDAAiB;AAE9B,IAAY;AAEZ,QAFI,KAAK,EAAE;AAAE,+CAAU;AAEvB,IAAY;AAAc,QAAtB,KAAK,EAAE;AAAE,oDAAkB;AAE/B,IAAY;AAAc,QAAtB,KAAK,EAAE;AAAE,iDAAe;AAE5B,IAAY;AAAc,QAAtB,KAAK,EAAE;AAAE,kDAAgB;AAE7B,IAAY;AAAc,QAAtB,KAAK,EAAE;AAAE,iDAAwB;AAErC,IAAa;AAAc,QAAvB,MAAM,EAAE;AAAE,kDAAgD;AAC7D,IACyB;AAAc,QAApC,SAAS,CAAC,UAAU,CAAC;AAAE,2DAA6B;KA1B5C,YAAY,yBApBxB,SAAS,CAAC,eACP,QAAQ,EAAE;CAAgB,eAC1B,QAAQ,EAAE;;;;;;;;;4CAcT;UACD,SAAS,EAAE,CAAC,2BAA2B,CAAC,eACxC,eAAe,EAAE,uBAAuB,CAAC,OAAO,WACnD,CAAC,SACW,YAAY,CA2FxB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBACD;AACC,IAFD,mBAAC;AAEA,CA7FD,IA2FC;AAED;AAEc,IAGd;AAAiC,KAAE;KAAtB,kBAAkB,yBAL9B,QAAQ,CAAC,eACN,OAAO;AAAE,CAAC,YAAY,CAAC,eACvB,OAAO,EAAE,CAAC,YAAY,CAAC,eACvB,YAAY,EAAE,CAAC,YAAY,CAAC,WAC/B,CAAC,SACW,kBAAkB,CAAI;;;;;;;;;gDACnC;AAAE,IADgC,yBAAC;AACjC,CADF;AAAM;AChIN;AACC;AACC,GAAC;AAEH;AAAE;AAC6C","sourcesContent":["import {NgModule,Component,Input,Output,EventEmitter,forwardRef,AfterViewInit,ViewChild,ElementRef,ChangeDetectionStrategy} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {NG_VALUE_ACCESSOR, ControlValueAccessor} from '@angular/forms';\n\nexport const TOGGLEBUTTON_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => ToggleButton),\n  multi: true\n};\n\n@Component({\n    selector: 'p-toggleButton',\n    template: `\n        <div [ngClass]=\"{'ui-button ui-togglebutton ui-widget ui-state-default ui-corner-all': true, 'ui-button-text-only': (!onIcon && !offIcon), \n                'ui-button-text-icon-left': (onIcon && offIcon && hasOnLabel && hasOffLabel && iconPos === 'left'), \n                'ui-button-text-icon-right': (onIcon && offIcon && hasOnLabel && hasOffLabel && iconPos === 'right'),'ui-button-icon-only': (onIcon && offIcon && !hasOnLabel && !hasOffLabel),\n                'ui-state-active': checked,'ui-state-focus':focus,'ui-state-disabled':disabled}\" [ngStyle]=\"style\" [class]=\"styleClass\" \n                (click)=\"toggle($event)\" (keydown.enter)=\"toggle($event)\">\n            <div class=\"ui-helper-hidden-accessible\">\n                <input #checkbox type=\"checkbox\" [attr.id]=\"inputId\" [checked]=\"checked\" (focus)=\"onFocus()\" (blur)=\"onBlur()\" [attr.tabindex]=\"tabindex\"\n                    role=\"button\" [attr.aria-pressed]=\"checked\" [attr.aria-labelledby]=\"ariaLabelledBy\" [disabled]=\"disabled\">\n            </div>\n            <span *ngIf=\"onIcon||offIcon\" class=\"ui-button-icon-left\" [class]=\"checked ? this.onIcon : this.offIcon\" [ngClass]=\"{'ui-button-icon-left': (iconPos === 'left'), \n            'ui-button-icon-right': (iconPos === 'right')}\"></span>\n            <span class=\"ui-button-text ui-unselectable-text\">{{checked ? hasOnLabel ? onLabel : 'ui-btn' : hasOffLabel ? offLabel : 'ui-btn'}}</span>\n        </div>\n    `,\n    providers: [TOGGLEBUTTON_VALUE_ACCESSOR],\n    changeDetection: ChangeDetectionStrategy.Default\n})\nexport class ToggleButton implements ControlValueAccessor,AfterViewInit {\n\n    @Input() onLabel: string = 'Yes';\n\n    @Input() offLabel: string = 'No';\n\n    @Input() onIcon: string;\n\n    @Input() offIcon: string;\n\n    @Input() ariaLabelledBy: string;\n\n    @Input() disabled: boolean;\n\n    @Input() style: any;\n\n    @Input() styleClass: string;\n\n    @Input() inputId: string;\n\n    @Input() tabindex: number;\n\n    @Input() iconPos: string = 'left';\n\n    @Output() onChange: EventEmitter<any> = new EventEmitter();\n    \n    @ViewChild('checkbox') checkboxViewChild: ElementRef;\n    \n    checkbox: HTMLInputElement;\n    \n    checked: boolean = false;\n\n    focus: boolean = false;\n    \n    onModelChange: Function = () => {};\n    \n    onModelTouched: Function = () => {};\n    \n    ngAfterViewInit() {\n        if (this.checkboxViewChild){\n            this.checkbox = <HTMLInputElement> this.checkboxViewChild.nativeElement;\n        }\n    }\n    \n    toggle(event: Event) {\n        if (!this.disabled) {\n            this.checked = !this.checked;\n            this.onModelChange(this.checked);\n            this.onModelTouched();\n            this.onChange.emit({\n                originalEvent: event,\n                checked: this.checked\n            });\n            if (this.checkbox) {\n                this.checkbox.focus();\n            }\n        }\n    }\n\n    onFocus() {\n        this.focus = true;\n    }\n    \n    onBlur() {\n        this.focus = false;\n        this.onModelTouched();\n    }\n    \n    writeValue(value: any) : void {\n        this.checked = value;\n    }\n    \n    registerOnChange(fn: Function): void {\n        this.onModelChange = fn;\n    }\n\n    registerOnTouched(fn: Function): void {\n        this.onModelTouched = fn;\n    }\n    \n    setDisabledState(val: boolean): void {\n        this.disabled = val;\n    }\n    \n    get hasOnLabel():boolean {\n        return this.onLabel && this.onLabel.length > 0;\n    }\n    \n    get hasOffLabel():boolean {\n        return this.onLabel && this.onLabel.length > 0;\n    }\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [ToggleButton],\n    declarations: [ToggleButton]\n})\nexport class ToggleButtonModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]}