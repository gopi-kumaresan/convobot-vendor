{"version":3,"file":"primeng-lts-inputtextarea.js","sources":["primeng-lts/inputtextarea/inputtextarea.ts","primeng-lts/inputtextarea/primeng-lts-inputtextarea.ts"],"names":[],"mappings":"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","sourcesContent":["import {NgModule,Directive,ElementRef,HostListener,Input,Output,EventEmitter,Optional, OnInit, OnDestroy, AfterViewInit, ChangeDetectorRef} from '@angular/core';\nimport {NgModel, NgControl} from '@angular/forms';\nimport {CommonModule} from '@angular/common';\nimport { Subscription } from 'rxjs';\n\n@Directive({\n    selector: '[pInputTextarea]',\n    host: {\n        '[class.ui-inputtext]': 'true',\n        '[class.ui-corner-all]': 'true',\n        '[class.ui-inputtextarea-resizable]': 'autoResize',\n        '[class.ui-state-default]': 'true',\n        '[class.ui-widget]': 'true',\n        '[class.ui-state-filled]': 'filled'\n    }\n})\nexport class InputTextarea implements OnInit, AfterViewInit, OnDestroy {\n    \n    @Input() autoResize: boolean;\n    \n    @Output() onResize: EventEmitter<any> = new EventEmitter();\n        \n    filled: boolean;\n\n    cachedScrollHeight:number;\n\n    ngModelSubscription: Subscription;\n\n    ngControlSubscription: Subscription;\n\n    constructor(public el: ElementRef, @Optional() public ngModel: NgModel, @Optional() public control : NgControl, private cd: ChangeDetectorRef) {}\n        \n    ngOnInit() {\n        if (this.ngModel) {\n            this.ngModelSubscription = this.ngModel.valueChanges.subscribe(() =>{\n                this.updateState();\n            })\n        }\n\n        if (this.control) {\n            this.ngControlSubscription = this.control.valueChanges.subscribe(() => {\n                this.updateState();\n            });\n        }\n    }\n\n    ngAfterViewInit() {\n        if (this.autoResize)\n            this.resize();\n\n        this.updateFilledState();\n        this.cd.detectChanges();\n    }\n\n    @HostListener('input', ['$event'])\n    onInput(e) {\n        this.updateState();\n    }\n    \n    updateFilledState() {\n        this.filled = this.el.nativeElement.value && this.el.nativeElement.value.length\n    }\n    \n    @HostListener('focus', ['$event'])\n    onFocus(e) {\n        if (this.autoResize) {\n            this.resize(e);\n        }\n    }\n    \n    @HostListener('blur', ['$event'])\n    onBlur(e) {\n        if (this.autoResize) {\n            this.resize(e);\n        }\n    }\n    \n    resize(event?: Event) {\n        this.el.nativeElement.style.height = 'auto';\n        this.el.nativeElement.style.height = this.el.nativeElement.scrollHeight + 'px';\n\n        if (parseFloat(this.el.nativeElement.style.height) >= parseFloat(this.el.nativeElement.style.maxHeight)) {\n            this.el.nativeElement.style.overflowY = \"scroll\";\n            this.el.nativeElement.style.height = this.el.nativeElement.style.maxHeight;\n        }\n        else {\n            this.el.nativeElement.style.overflow = \"hidden\";\n        }\n\n        this.onResize.emit(event||{});\n    }\n\n    updateState() {\n        this.updateFilledState();\n            \n        if (this.autoResize) {\n            this.resize();\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.ngModelSubscription) {\n            this.ngModelSubscription.unsubscribe();\n        }\n\n        if (this.ngControlSubscription) {\n            this.ngControlSubscription.unsubscribe();\n        }\n    }\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [InputTextarea],\n    declarations: [InputTextarea]\n})\nexport class InputTextareaModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]}