{"version":3,"file":"primeng-lts-inputtext.js","sources":["primeng-lts/inputtext/inputtext.ts","primeng-lts/inputtext/primeng-lts-inputtext.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA;AAA8C,IAkB1C,mBAAmB,EAAc,EAAqB,OAAgB;AAC1E,QADuB,OAAE,GAAF,EAAE,CAAY;AAAE,QAAmB,YAAO,GAAP,OAAO,CAAS;AAAE,KAAE;AAC7E,IACG,6BAAS,GAAT;AACH,QAAO,IAAI,CAAC,iBAAiB,EAAE,CAAC;AAChC,KAAI;AACH;AAC2G,IAEzG,2BAAO,GAAP,UAAQ,CAAC;AACZ,QAAO,IAAI,CAAC,iBAAiB,EAAE,CAAC;AAChC,KAAI;AACH,IACE,qCAAiB,GAAjB;AAAe,QACX,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,KAAK,IAAI,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM;AACvF,aAAwB,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;AAC5D,KAAI;AAEL;AAGa,gBApBc,UAAU;AAAK,gBAAyB,OAAO,uBAAlC,QAAQ;AAAO;AAAW,IAQ9D;AACH,QAFI,YAAY,CAAC,OAAO,EAAE,CAAC,QAAQ,CAAC,CAAC;AACtC,4CAEK;AACH,IAfW,SAAS,yBAVrB,SAAS,CAAC,pBAUF,CAI+B,WAAA,QAAQ,EAAE,CAAA;UAb9C,QAAQ,lBAawC,OAJvC,SAAS,CAoBrB;CA7Ba,cAAc,eACxB,IAAI,EAAE,mBACF,sBAAsB,EAAE,MAAM,mBAC9B,uBAAuB,EAAE,MAAM,mBAC/B;SAA0B,EAAE,MAAM,mBAClC,mBAAmB,EAAE,MAAM,mBAC3B,yBAAyB,EAAE,QAAQ,eACtC,WACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;oBAsBF;AACC,IAFD,gBAAC;AAEA,CAtBD,IAoBC;AAED;AAEW,IAGX;AAA8B,KAAE;KAAnB,eAAe,yBAL3B,QAAQ,CAAC,eACN;CAAO,EAAE,CAAC,YAAY,CAAC,eACvB,OAAO,EAAE,CAAC,SAAS,CAAC,eACpB,YAAY,EAAE,CAAC,SAAS,CAAC,WAC5B,CAAC,SACW,eAAe,CAAI;;;;;;;;;gDAAC;AAAE,IAAJ,sBAAC;AAAG,CAAnC;AAAM;ACzCN;AACC;AACC,GAAC;AAEH;AAAE;AACU","sourcesContent":["import {NgModule,Directive,ElementRef,HostListener,DoCheck,Optional} from '@angular/core';\nimport {NgModel} from '@angular/forms';\nimport {CommonModule} from '@angular/common';\n\n@Directive({\n    selector: '[pInputText]',\n    host: {\n        '[class.ui-inputtext]': 'true',\n        '[class.ui-corner-all]': 'true',\n        '[class.ui-state-default]': 'true',\n        '[class.ui-widget]': 'true',\n        '[class.ui-state-filled]': 'filled'\n    }\n})\nexport class InputText implements DoCheck {\n\n    filled: boolean;\n\n    constructor(public el: ElementRef, @Optional() public ngModel: NgModel) {}\n        \n    ngDoCheck() {\n        this.updateFilledState();\n    }\n    \n    //To trigger change detection to manage ui-state-filled for material labels when there is no value binding\n    @HostListener('input', ['$event']) \n    onInput(e) {\n        this.updateFilledState();\n    }\n    \n    updateFilledState() {\n        this.filled = (this.el.nativeElement.value && this.el.nativeElement.value.length) ||\n                        (this.ngModel && this.ngModel.model);\n    }\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [InputText],\n    declarations: [InputText]\n})\nexport class InputTextModule { }","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]}