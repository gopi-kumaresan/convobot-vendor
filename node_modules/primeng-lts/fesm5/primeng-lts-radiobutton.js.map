{"version":3,"file":"primeng-lts-radiobutton.js","sources":["primeng-lts/radiobutton/radiobutton.ts","primeng-lts/radiobutton/primeng-lts-radiobutton.ts"],"names":[],"mappings":"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","sourcesContent":["import {NgModule,Component,Input,Output,ElementRef,EventEmitter,forwardRef,ViewChild,ChangeDetectorRef,ChangeDetectionStrategy, Injectable, OnInit, OnDestroy, Injector} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {NG_VALUE_ACCESSOR, ControlValueAccessor, NgControl} from '@angular/forms';\n\nexport const RADIO_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => RadioButton),\n    multi: true\n};\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class RadioControlRegistry {\n    private accessors: any[] = [];\n\n    add(control: NgControl, accessor: RadioButton) {\n        this.accessors.push([control, accessor]);\n    }\n\n    remove(accessor: RadioButton) {\n        this.accessors = this.accessors.filter((c) => {\n            return c[1] !== accessor;\n        })\n    }\n\n    select(accessor: RadioButton) {\n        this.accessors.forEach((c) => {\n            if (this.isSameGroup(c, accessor) && c[1] !== accessor) {\n                c[1].writeValue(accessor.value);\n            }\n        });\n    }\n\n    private isSameGroup(controlPair: [NgControl, RadioButton], accessor: RadioButton): boolean {\n        if (!controlPair[0].control) {\n            return false;\n        }\n\n        return controlPair[0].control.root === accessor.control.control.root && controlPair[1].name === accessor.name;\n    }\n}\n\n@Component({\n    selector: 'p-radioButton',\n    template: `\n        <div [ngStyle]=\"style\" [ngClass]=\"'ui-radiobutton ui-widget'\" [class]=\"styleClass\">\n            <div class=\"ui-helper-hidden-accessible\">\n                <input #rb type=\"radio\" [attr.id]=\"inputId\" [attr.name]=\"name\" [attr.value]=\"value\" [attr.tabindex]=\"tabindex\" [attr.aria-checked]=\"checked\" [attr.aria-label]=\"ariaLabel\"\n                [attr.aria-labelledby]=\"ariaLabelledBy\" [checked]=\"checked\" (change)=\"onChange($event)\" (focus)=\"onInputFocus($event)\" (blur)=\"onInputBlur($event)\" [disabled]=\"disabled\">\n            </div>\n            <div (click)=\"handleClick($event, rb, true)\" [attr.aria-checked]=\"checked\"\n                [ngClass]=\"{'ui-radiobutton-box ui-widget ui-state-default':true,\n                'ui-state-active':rb.checked,'ui-state-disabled':disabled,'ui-state-focus':focused}\">\n                <span class=\"ui-radiobutton-icon ui-clickable\" [ngClass]=\"{'pi pi-circle-on':rb.checked}\"></span>\n            </div>\n        </div>\n        <label (click)=\"select($event)\" [class]=\"labelStyleClass\"\n            [ngClass]=\"{'ui-radiobutton-label':true, 'ui-label-active':rb.checked, 'ui-label-disabled':disabled, 'ui-label-focus':focused}\"\n            *ngIf=\"label\" [attr.for]=\"inputId\">{{label}}</label>\n    `,\n    providers: [RADIO_VALUE_ACCESSOR],\n    changeDetection: ChangeDetectionStrategy.Default\n})\nexport class RadioButton implements ControlValueAccessor, OnInit, OnDestroy {\n\n    @Input() value: any;\n\n    @Input() formControlName: string;\n\n    @Input() name: string;\n\n    @Input() disabled: boolean;\n    \n    @Input() label: string;\n\n    @Input() tabindex: number;\n\n    @Input() inputId: string;\n\n    @Input() ariaLabelledBy: string;\n\n    @Input() ariaLabel: string;\n    \n    @Input() style: any;\n\n    @Input() styleClass: string;\n\n    @Input() labelStyleClass: string;\n\n    @Output() onClick: EventEmitter<any> = new EventEmitter();\n\n    @Output() onFocus: EventEmitter<any> = new EventEmitter();\n\n    @Output() onBlur: EventEmitter<any> = new EventEmitter();\n    \n    @ViewChild('rb') inputViewChild: ElementRef;\n            \n    public onModelChange: Function = () => {};\n    \n    public onModelTouched: Function = () => {};\n    \n    public checked: boolean;\n        \n    public focused: boolean;\n\n    control: NgControl;\n\n    constructor(public cd: ChangeDetectorRef, private injector: Injector, private registry: RadioControlRegistry) {}\n\n    ngOnInit() {\n        this.control = this.injector.get(NgControl);\n        this.checkName();\n        this.registry.add(this.control, this);\n    }\n\n    ngOnDestroy() {\n        this.registry.remove(this);\n    }\n    \n    handleClick(event, radioButton, focus) {\n        event.preventDefault();\n\n        if (this.disabled) {\n            return;\n        }\n\n        this.select(event);\n\n        if (focus) {\n            radioButton.focus();\n        }\n    }\n    \n    select(event) {\n        if (!this.disabled) {\n            this.inputViewChild.nativeElement.checked = true;\n            this.checked = true;\n            this.onModelChange(this.value);\n            this.registry.select(this);\n            this.onClick.emit(event);\n        }\n    }\n            \n    writeValue(value: any) : void {\n        this.checked = (value == this.value);\n\n        if (this.inputViewChild && this.inputViewChild.nativeElement) {\n            this.inputViewChild.nativeElement.checked = this.checked;\n        }\n        \n        this.cd.markForCheck();\n    }\n    \n    registerOnChange(fn: Function): void {\n        this.onModelChange = fn;\n    }\n\n    registerOnTouched(fn: Function): void {\n        this.onModelTouched = fn;\n    }\n    \n    setDisabledState(val: boolean): void {\n        this.disabled = val;\n    }\n    \n    onInputFocus(event) {\n        this.focused = true;\n        this.onFocus.emit(event);\n    }\n\n    onInputBlur(event) {\n        this.focused = false;\n        this.onModelTouched();\n        this.onBlur.emit(event);\n    }\n    \n    onChange(event) {\n        this.select(event);\n    }\n\n    focus() {\n        this.inputViewChild.nativeElement.focus();\n    }\n\n    private checkName() {\n        if (this.name && this.formControlName && this.name !== this.formControlName) {\n            this.throwNameError();\n        }\n        if (!this.name && this.formControlName) {\n            this.name = this.formControlName;\n        }\n    }\n\n    private throwNameError() {\n        throw new Error(`\n          If you define both a name and a formControlName attribute on your radio button, their values\n          must match. Ex: <p-radioButton formControlName=\"food\" name=\"food\"></p-radioButton>\n        `);\n    }\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [RadioButton],\n    declarations: [RadioButton]\n})\nexport class RadioButtonModule { }","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]}