import { EventEmitter, ElementRef, Renderer2, ChangeDetectorRef, Input, Output, Component, ChangeDetectionStrategy, NgModule } from '@angular/core';
import { trigger, state, style, transition, animate } from '@angular/animations';
import { CommonModule } from '@angular/common';
import { DomHandler } from 'primeng-lts/dom';
import { RouterModule } from '@angular/router';

import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from '@angular/router';

var _c0 = function (a0) { return { "ui-helper-hidden": a0 }; };
function TieredMenuSub_ng_template_1_li_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "li", 4);
} if (rf & 2) {
    var child_r1 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(1, _c0, child_r1.visible === false));
} }
function TieredMenuSub_ng_template_1_li_1_a_1_span_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "span", 13);
} if (rf & 2) {
    var child_r1 = ɵngcc0.ɵɵnextContext(3).$implicit;
    ɵngcc0.ɵɵproperty("ngClass", child_r1.icon);
} }
function TieredMenuSub_ng_template_1_li_1_a_1_span_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "span", 14);
} }
var _c1 = function (a0) { return { "ui-state-disabled": a0 }; };
function TieredMenuSub_ng_template_1_li_1_a_1_Template(rf, ctx) { if (rf & 1) {
    var _r13 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "a", 9);
    ɵngcc0.ɵɵlistener("keydown", function TieredMenuSub_ng_template_1_li_1_a_1_Template_a_keydown_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r13); var child_r1 = ɵngcc0.ɵɵnextContext(2).$implicit; var ctx_r11 = ɵngcc0.ɵɵnextContext(); return ctx_r11.onItemKeyDown($event, child_r1); })("click", function TieredMenuSub_ng_template_1_li_1_a_1_Template_a_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r13); var child_r1 = ɵngcc0.ɵɵnextContext(2).$implicit; var ctx_r14 = ɵngcc0.ɵɵnextContext(); return ctx_r14.onItemClick($event, child_r1); });
    ɵngcc0.ɵɵtemplate(1, TieredMenuSub_ng_template_1_li_1_a_1_span_1_Template, 1, 1, "span", 10);
    ɵngcc0.ɵɵelementStart(2, "span", 11);
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(4, TieredMenuSub_ng_template_1_li_1_a_1_span_4_Template, 1, 0, "span", 12);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var child_r1 = ɵngcc0.ɵɵnextContext(2).$implicit;
    var ctx_r5 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(11, _c1, child_r1.disabled));
    ɵngcc0.ɵɵattribute("href", child_r1.url, ɵngcc0.ɵɵsanitizeUrl)("target", child_r1.target)("tabindex", child_r1.disabled ? null : "0")("title", child_r1.title)("id", child_r1.id)("aria-haspopup", ctx_r5.item.items != null)("aria-expanded", ctx_r5.item === ctx_r5.activeItem);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", child_r1.icon);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(child_r1.label);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", child_r1.items);
} }
function TieredMenuSub_ng_template_1_li_1_a_2_span_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "span", 13);
} if (rf & 2) {
    var child_r1 = ɵngcc0.ɵɵnextContext(3).$implicit;
    ɵngcc0.ɵɵproperty("ngClass", child_r1.icon);
} }
function TieredMenuSub_ng_template_1_li_1_a_2_span_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "span", 14);
} }
var _c2 = function () { return { exact: false }; };
function TieredMenuSub_ng_template_1_li_1_a_2_Template(rf, ctx) { if (rf & 1) {
    var _r22 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "a", 15);
    ɵngcc0.ɵɵlistener("keydown", function TieredMenuSub_ng_template_1_li_1_a_2_Template_a_keydown_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r22); var child_r1 = ɵngcc0.ɵɵnextContext(2).$implicit; var ctx_r20 = ɵngcc0.ɵɵnextContext(); return ctx_r20.onItemKeyDown($event, child_r1); })("click", function TieredMenuSub_ng_template_1_li_1_a_2_Template_a_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r22); var child_r1 = ɵngcc0.ɵɵnextContext(2).$implicit; var ctx_r23 = ɵngcc0.ɵɵnextContext(); return ctx_r23.onItemClick($event, child_r1); });
    ɵngcc0.ɵɵtemplate(1, TieredMenuSub_ng_template_1_li_1_a_2_span_1_Template, 1, 1, "span", 10);
    ɵngcc0.ɵɵelementStart(2, "span", 11);
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(4, TieredMenuSub_ng_template_1_li_1_a_2_span_4_Template, 1, 0, "span", 12);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var child_r1 = ɵngcc0.ɵɵnextContext(2).$implicit;
    ɵngcc0.ɵɵproperty("routerLink", child_r1.routerLink)("queryParams", child_r1.queryParams)("routerLinkActive", "ui-menuitem-link-active")("routerLinkActiveOptions", child_r1.routerLinkActiveOptions || ɵngcc0.ɵɵpureFunction0(18, _c2))("ngClass", ɵngcc0.ɵɵpureFunction1(19, _c1, child_r1.disabled))("fragment", child_r1.fragment)("queryParamsHandling", child_r1.queryParamsHandling)("preserveFragment", child_r1.preserveFragment)("skipLocationChange", child_r1.skipLocationChange)("replaceUrl", child_r1.replaceUrl)("state", child_r1.state);
    ɵngcc0.ɵɵattribute("tabindex", child_r1.disabled ? null : "0")("target", child_r1.target)("title", child_r1.title)("id", child_r1.id);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", child_r1.icon);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(child_r1.label);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", child_r1.items);
} }
function TieredMenuSub_ng_template_1_li_1_p_tieredMenuSub_3_Template(rf, ctx) { if (rf & 1) {
    var _r27 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "p-tieredMenuSub", 16);
    ɵngcc0.ɵɵlistener("keydownItem", function TieredMenuSub_ng_template_1_li_1_p_tieredMenuSub_3_Template_p_tieredMenuSub_keydownItem_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r27); var ctx_r26 = ɵngcc0.ɵɵnextContext(3); return ctx_r26.onChildItemKeyDown($event); })("leafClick", function TieredMenuSub_ng_template_1_li_1_p_tieredMenuSub_3_Template_p_tieredMenuSub_leafClick_0_listener() { ɵngcc0.ɵɵrestoreView(_r27); var ctx_r28 = ɵngcc0.ɵɵnextContext(3); return ctx_r28.onLeafClick(); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var child_r1 = ɵngcc0.ɵɵnextContext(2).$implicit;
    var ctx_r7 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("parentActive", child_r1 === ctx_r7.activeItem)("item", child_r1)("mobileActive", ctx_r7.mobileActive)("autoDisplay", ctx_r7.autoDisplay)("popup", ctx_r7.popup);
} }
var _c3 = function (a1, a2) { return { "ui-menuitem ui-widget ui-corner-all": true, "ui-menuitem-active": a1, "ui-helper-hidden": a2 }; };
function TieredMenuSub_ng_template_1_li_1_Template(rf, ctx) { if (rf & 1) {
    var _r32 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "li", 5);
    ɵngcc0.ɵɵlistener("mouseenter", function TieredMenuSub_ng_template_1_li_1_Template_li_mouseenter_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r32); var child_r1 = ɵngcc0.ɵɵnextContext().$implicit; var ctx_r30 = ɵngcc0.ɵɵnextContext(); return ctx_r30.onItemMouseEnter($event, child_r1); });
    ɵngcc0.ɵɵtemplate(1, TieredMenuSub_ng_template_1_li_1_a_1_Template, 5, 13, "a", 6);
    ɵngcc0.ɵɵtemplate(2, TieredMenuSub_ng_template_1_li_1_a_2_Template, 5, 21, "a", 7);
    ɵngcc0.ɵɵtemplate(3, TieredMenuSub_ng_template_1_li_1_p_tieredMenuSub_3_Template, 1, 5, "p-tieredMenuSub", 8);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var child_r1 = ɵngcc0.ɵɵnextContext().$implicit;
    var ctx_r3 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassMap(child_r1.styleClass);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction2(7, _c3, child_r1 == ctx_r3.activeItem, child_r1.visible === false))("ngStyle", child_r1.style);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !child_r1.routerLink);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", child_r1.routerLink);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", child_r1.items);
} }
function TieredMenuSub_ng_template_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, TieredMenuSub_ng_template_1_li_0_Template, 1, 3, "li", 2);
    ɵngcc0.ɵɵtemplate(1, TieredMenuSub_ng_template_1_li_1_Template, 4, 10, "li", 3);
} if (rf & 2) {
    var child_r1 = ctx.$implicit;
    ɵngcc0.ɵɵproperty("ngIf", child_r1.separator);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !child_r1.separator);
} }
var _c4 = function (a0) { return { "ui-widget-content ui-corner-all ui-shadow ui-submenu-list": a0 }; };
var _c5 = function (a1) { return { "ui-tieredmenu ui-widget ui-widget-content ui-corner-all": true, "ui-tieredmenu-dynamic ui-shadow": a1 }; };
var _c6 = function (a0, a1) { return { showTransitionParams: a0, hideTransitionParams: a1 }; };
var _c7 = function (a1) { return { value: "visible", params: a1 }; };
function TieredMenu_div_0_Template(rf, ctx) { if (rf & 1) {
    var _r2 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 1);
    ɵngcc0.ɵɵlistener("@overlayAnimation.start", function TieredMenu_div_0_Template_div_animation_overlayAnimation_start_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r2); var ctx_r1 = ɵngcc0.ɵɵnextContext(); return ctx_r1.onOverlayAnimationStart($event); })("click", function TieredMenu_div_0_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r2); var ctx_r3 = ɵngcc0.ɵɵnextContext(); return ctx_r3.preventDocumentDefault = true; });
    ɵngcc0.ɵɵelementStart(1, "p-tieredMenuSub", 2);
    ɵngcc0.ɵɵlistener("leafClick", function TieredMenu_div_0_Template_p_tieredMenuSub_leafClick_1_listener() { ɵngcc0.ɵɵrestoreView(_r2); var ctx_r4 = ɵngcc0.ɵɵnextContext(); return ctx_r4.onLeafClick(); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassMap(ctx_r0.styleClass);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(12, _c5, ctx_r0.popup))("ngStyle", ctx_r0.style)("@overlayAnimation", ɵngcc0.ɵɵpureFunction1(17, _c7, ɵngcc0.ɵɵpureFunction2(14, _c6, ctx_r0.showTransitionOptions, ctx_r0.hideTransitionOptions)))("@.disabled", ctx_r0.popup !== true);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("item", ctx_r0.model)("parentActive", ctx_r0.parentActive)("baseZIndex", ctx_r0.baseZIndex)("autoZIndex", ctx_r0.autoZIndex)("autoDisplay", ctx_r0.autoDisplay)("popup", ctx_r0.popup);
} }
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var TieredMenuSub = /** @class */ (function () {
    function TieredMenuSub(el, renderer, cd) {
        this.el = el;
        this.renderer = renderer;
        this.cd = cd;
        this.autoZIndex = true;
        this.baseZIndex = 0;
        this.leafClick = new EventEmitter();
        this.keydownItem = new EventEmitter();
        this.menuHoverActive = false;
    }
    Object.defineProperty(TieredMenuSub.prototype, "parentActive", {
        get: function () {
            return this._parentActive;
        },
        set: function (value) {
            if (!this.root) {
                this._parentActive = value;
                if (!value)
                    this.activeItem = null;
            }
        },
        enumerable: true,
        configurable: true
    });
    TieredMenuSub.prototype.onItemMouseEnter = function (event, item) {
        if (item.disabled || this.mobileActive) {
            event.preventDefault();
            return;
        }
        if (this.root) {
            if (this.activeItem || this.autoDisplay || this.popup) {
                this.activeItem = item;
                this.bindDocumentClickListener();
            }
        }
        else {
            this.activeItem = item;
        }
    };
    TieredMenuSub.prototype.onItemClick = function (event, item) {
        if (item.disabled) {
            event.preventDefault();
            return;
        }
        if (!item.url && !item.routerLink) {
            event.preventDefault();
        }
        if (item.command) {
            item.command({
                originalEvent: event,
                item: item
            });
        }
        if (item.items) {
            if (this.activeItem && item === this.activeItem) {
                this.activeItem = null;
                this.unbindDocumentClickListener();
            }
            else {
                this.activeItem = item;
                if (this.root) {
                    this.bindDocumentClickListener();
                }
            }
        }
        if (!item.items) {
            this.onLeafClick();
        }
    };
    TieredMenuSub.prototype.onLeafClick = function () {
        this.activeItem = null;
        if (this.root) {
            this.unbindDocumentClickListener();
        }
        this.leafClick.emit();
    };
    TieredMenuSub.prototype.onItemKeyDown = function (event, item) {
        var listItem = event.currentTarget.parentElement;
        switch (event.key) {
            case 'ArrowDown':
                var nextItem = this.findNextItem(listItem);
                if (nextItem) {
                    nextItem.children[0].focus();
                }
                event.preventDefault();
                break;
            case 'ArrowUp':
                var prevItem = this.findPrevItem(listItem);
                if (prevItem) {
                    prevItem.children[0].focus();
                }
                event.preventDefault();
                break;
            case 'ArrowRight':
                if (item.items) {
                    this.activeItem = item;
                    if (this.root) {
                        this.bindDocumentClickListener();
                    }
                    setTimeout(function () {
                        listItem.children[1].children[0].children[0].children[0].focus();
                    }, 50);
                }
                event.preventDefault();
                break;
            default:
                break;
        }
        this.keydownItem.emit({
            originalEvent: event,
            element: listItem
        });
    };
    TieredMenuSub.prototype.findNextItem = function (item) {
        var nextItem = item.nextElementSibling;
        if (nextItem)
            return DomHandler.hasClass(nextItem, 'ui-state-disabled') || !DomHandler.hasClass(nextItem, 'ui-menuitem') ? this.findNextItem(nextItem) : nextItem;
        else
            return null;
    };
    TieredMenuSub.prototype.findPrevItem = function (item) {
        var prevItem = item.previousElementSibling;
        if (prevItem)
            return DomHandler.hasClass(prevItem, 'ui-state-disabled') || !DomHandler.hasClass(prevItem, 'ui-menuitem') ? this.findPrevItem(prevItem) : prevItem;
        else
            return null;
    };
    TieredMenuSub.prototype.onChildItemKeyDown = function (event) {
        if (event.originalEvent.key === 'ArrowLeft') {
            this.activeItem = null;
            if (this.root) {
                this.unbindDocumentClickListener();
            }
            event.element.parentElement.parentElement.parentElement.children[0].focus();
        }
    };
    TieredMenuSub.prototype.bindDocumentClickListener = function () {
        var _this = this;
        if (!this.documentClickListener) {
            this.documentClickListener = function (event) {
                if (_this.el && !_this.el.nativeElement.contains(event.target)) {
                    _this.activeItem = null;
                    _this.cd.markForCheck();
                    _this.unbindDocumentClickListener();
                }
            };
            document.addEventListener('click', this.documentClickListener);
        }
    };
    TieredMenuSub.prototype.unbindDocumentClickListener = function () {
        if (this.documentClickListener) {
            document.removeEventListener('click', this.documentClickListener);
            this.documentClickListener = null;
        }
    };
    TieredMenuSub.prototype.ngOnDestroy = function () {
        this.unbindDocumentClickListener();
    };
    TieredMenuSub.ctorParameters = function () { return [
        { type: ElementRef },
        { type: Renderer2 },
        { type: ChangeDetectorRef }
    ]; };
    __decorate([
        Input()
    ], TieredMenuSub.prototype, "item", void 0);
    __decorate([
        Input()
    ], TieredMenuSub.prototype, "root", void 0);
    __decorate([
        Input()
    ], TieredMenuSub.prototype, "autoDisplay", void 0);
    __decorate([
        Input()
    ], TieredMenuSub.prototype, "autoZIndex", void 0);
    __decorate([
        Input()
    ], TieredMenuSub.prototype, "baseZIndex", void 0);
    __decorate([
        Input()
    ], TieredMenuSub.prototype, "mobileActive", void 0);
    __decorate([
        Input()
    ], TieredMenuSub.prototype, "popup", void 0);
    __decorate([
        Input()
    ], TieredMenuSub.prototype, "parentActive", null);
    __decorate([
        Output()
    ], TieredMenuSub.prototype, "leafClick", void 0);
    __decorate([
        Output()
    ], TieredMenuSub.prototype, "keydownItem", void 0);
TieredMenuSub.ɵfac = function TieredMenuSub_Factory(t) { return new (t || TieredMenuSub)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };
TieredMenuSub.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: TieredMenuSub, selectors: [["p-tieredMenuSub"]], inputs: { autoZIndex: "autoZIndex", baseZIndex: "baseZIndex", parentActive: "parentActive", item: "item", root: "root", autoDisplay: "autoDisplay", mobileActive: "mobileActive", popup: "popup" }, outputs: { leafClick: "leafClick", keydownItem: "keydownItem" }, decls: 2, vars: 4, consts: [["role", "menubar", 3, "ngClass"], ["ngFor", "", 3, "ngForOf"], ["class", "ui-menu-separator ui-widget-content", "role", "separator", 3, "ngClass", 4, "ngIf"], ["role", "none", 3, "ngClass", "class", "ngStyle", "mouseenter", 4, "ngIf"], ["role", "separator", 1, "ui-menu-separator", "ui-widget-content", 3, "ngClass"], ["role", "none", 3, "ngClass", "ngStyle", "mouseenter"], ["class", "ui-menuitem-link ui-corner-all", "role", "menuitem", 3, "ngClass", "keydown", "click", 4, "ngIf"], ["role", "menuitem", "role", "menuitem", "class", "ui-menuitem-link ui-corner-all", 3, "routerLink", "queryParams", "routerLinkActive", "routerLinkActiveOptions", "ngClass", "fragment", "queryParamsHandling", "preserveFragment", "skipLocationChange", "replaceUrl", "state", "keydown", "click", 4, "ngIf"], ["class", "ui-submenu", 3, "parentActive", "item", "mobileActive", "autoDisplay", "popup", "keydownItem", "leafClick", 4, "ngIf"], ["role", "menuitem", 1, "ui-menuitem-link", "ui-corner-all", 3, "ngClass", "keydown", "click"], ["class", "ui-menuitem-icon", 3, "ngClass", 4, "ngIf"], [1, "ui-menuitem-text"], ["class", "ui-submenu-icon pi pi-fw pi-caret-right", 4, "ngIf"], [1, "ui-menuitem-icon", 3, "ngClass"], [1, "ui-submenu-icon", "pi", "pi-fw", "pi-caret-right"], ["role", "menuitem", "role", "menuitem", 1, "ui-menuitem-link", "ui-corner-all", 3, "routerLink", "queryParams", "routerLinkActive", "routerLinkActiveOptions", "ngClass", "fragment", "queryParamsHandling", "preserveFragment", "skipLocationChange", "replaceUrl", "state", "keydown", "click"], [1, "ui-submenu", 3, "parentActive", "item", "mobileActive", "autoDisplay", "popup", "keydownItem", "leafClick"]], template: function TieredMenuSub_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "ul", 0);
        ɵngcc0.ɵɵtemplate(1, TieredMenuSub_ng_template_1_Template, 2, 2, "ng-template", 1);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(2, _c4, !ctx.root));
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.root ? ctx.item : ctx.item.items);
    } }, directives: [ɵngcc1.NgClass, ɵngcc1.NgForOf, ɵngcc1.NgIf, ɵngcc1.NgStyle, ɵngcc2.RouterLinkWithHref, ɵngcc2.RouterLinkActive, TieredMenuSub], encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TieredMenuSub, [{
        type: Component,
        args: [{
                selector: 'p-tieredMenuSub',
                template: "\n        <ul [ngClass]=\"{'ui-widget-content ui-corner-all ui-shadow ui-submenu-list': !root}\" role=\"menubar\">\n            <ng-template ngFor let-child [ngForOf]=\"(root ? item : item.items)\">\n                <li *ngIf=\"child.separator\" class=\"ui-menu-separator ui-widget-content\" [ngClass]=\"{'ui-helper-hidden': child.visible === false}\" role=\"separator\">\n                <li *ngIf=\"!child.separator\" [ngClass]=\"{'ui-menuitem ui-widget ui-corner-all':true,'ui-menuitem-active':child==activeItem,'ui-helper-hidden': child.visible === false}\"\n                    [class]=\"child.styleClass\" [ngStyle]=\"child.style\" role=\"none\"\n                    (mouseenter)=\"onItemMouseEnter($event, child)\">\n                    <a *ngIf=\"!child.routerLink\" (keydown)=\"onItemKeyDown($event, child)\" [attr.href]=\"child.url\" class=\"ui-menuitem-link ui-corner-all\" [attr.target]=\"child.target\" [attr.tabindex]=\"child.disabled ? null : '0'\" [attr.title]=\"child.title\" [attr.id]=\"child.id\" \n                        [ngClass]=\"{'ui-state-disabled':child.disabled}\" (click)=\"onItemClick($event, child)\" role=\"menuitem\" [attr.aria-haspopup]=\"item.items != null\" [attr.aria-expanded]=\"item === activeItem\">\n                        <span class=\"ui-menuitem-icon\" *ngIf=\"child.icon\" [ngClass]=\"child.icon\"></span>\n                        <span class=\"ui-menuitem-text\">{{child.label}}</span>\n                        <span class=\"ui-submenu-icon pi pi-fw pi-caret-right\" *ngIf=\"child.items\"></span>\n                    </a>\n                    <a *ngIf=\"child.routerLink\" (keydown)=\"onItemKeyDown($event, child)\" [routerLink]=\"child.routerLink\" role=\"menuitem\" [queryParams]=\"child.queryParams\" [routerLinkActive]=\"'ui-menuitem-link-active'\" role=\"menuitem\" [attr.tabindex]=\"child.disabled ? null : '0'\"\n                        [routerLinkActiveOptions]=\"child.routerLinkActiveOptions||{exact:false}\"\n                        class=\"ui-menuitem-link ui-corner-all\" [attr.target]=\"child.target\" [attr.title]=\"child.title\" [attr.id]=\"child.id\"\n                        [ngClass]=\"{'ui-state-disabled':child.disabled}\" (click)=\"onItemClick($event, child)\"\n                        [fragment]=\"child.fragment\" [queryParamsHandling]=\"child.queryParamsHandling\" [preserveFragment]=\"child.preserveFragment\" [skipLocationChange]=\"child.skipLocationChange\" [replaceUrl]=\"child.replaceUrl\" [state]=\"child.state\">\n                        <span class=\"ui-menuitem-icon\" *ngIf=\"child.icon\" [ngClass]=\"child.icon\"></span>\n                        <span class=\"ui-menuitem-text\">{{child.label}}</span>\n                        <span class=\"ui-submenu-icon pi pi-fw pi-caret-right\" *ngIf=\"child.items\"></span>\n                    </a>\n                    <p-tieredMenuSub class=\"ui-submenu\" (keydownItem)=\"onChildItemKeyDown($event)\" [parentActive]=\"child === activeItem\" [item]=\"child\" *ngIf=\"child.items\" [mobileActive]=\"mobileActive\" [autoDisplay]=\"autoDisplay\" [popup]=\"popup\" (leafClick)=\"onLeafClick()\"></p-tieredMenuSub>\n                </li>\n            </ng-template>\n        </ul>\n    "
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ChangeDetectorRef }]; }, { autoZIndex: [{
            type: Input
        }], baseZIndex: [{
            type: Input
        }], leafClick: [{
            type: Output
        }], keydownItem: [{
            type: Output
        }], parentActive: [{
            type: Input
        }], item: [{
            type: Input
        }], root: [{
            type: Input
        }], autoDisplay: [{
            type: Input
        }], mobileActive: [{
            type: Input
        }], popup: [{
            type: Input
        }] }); })();
    return TieredMenuSub;
}());
var TieredMenu = /** @class */ (function () {
    function TieredMenu(el, renderer) {
        this.el = el;
        this.renderer = renderer;
        this.autoZIndex = true;
        this.baseZIndex = 0;
        this.showTransitionOptions = '225ms ease-out';
        this.hideTransitionOptions = '195ms ease-in';
    }
    TieredMenu.prototype.toggle = function (event) {
        if (this.visible)
            this.hide();
        else
            this.show(event);
        this.preventDocumentDefault = true;
    };
    TieredMenu.prototype.show = function (event) {
        this.target = event.currentTarget;
        this.visible = true;
        this.parentActive = true;
        this.preventDocumentDefault = true;
    };
    TieredMenu.prototype.onOverlayAnimationStart = function (event) {
        switch (event.toState) {
            case 'visible':
                if (this.popup) {
                    this.container = event.element;
                    this.moveOnTop();
                    this.appendOverlay();
                    DomHandler.absolutePosition(this.container, this.target);
                    this.bindDocumentClickListener();
                    this.bindDocumentResizeListener();
                }
                break;
            case 'void':
                this.onOverlayHide();
                break;
        }
    };
    TieredMenu.prototype.appendOverlay = function () {
        if (this.appendTo) {
            if (this.appendTo === 'body')
                document.body.appendChild(this.container);
            else
                DomHandler.appendChild(this.container, this.appendTo);
        }
    };
    TieredMenu.prototype.restoreOverlayAppend = function () {
        if (this.container && this.appendTo) {
            this.el.nativeElement.appendChild(this.container);
        }
    };
    TieredMenu.prototype.moveOnTop = function () {
        if (this.autoZIndex) {
            this.container.style.zIndex = String(this.baseZIndex + (++DomHandler.zindex));
        }
    };
    TieredMenu.prototype.hide = function () {
        this.visible = false;
        this.parentActive = false;
    };
    TieredMenu.prototype.onWindowResize = function () {
        this.hide();
    };
    TieredMenu.prototype.onLeafClick = function () {
        if (this.popup) {
            this.hide();
        }
        this.unbindDocumentClickListener();
    };
    TieredMenu.prototype.bindDocumentClickListener = function () {
        var _this = this;
        if (!this.documentClickListener) {
            this.documentClickListener = this.renderer.listen('document', 'click', function () {
                if (!_this.preventDocumentDefault && _this.popup) {
                    _this.hide();
                }
                _this.preventDocumentDefault = false;
            });
        }
    };
    TieredMenu.prototype.unbindDocumentClickListener = function () {
        if (this.documentClickListener) {
            this.documentClickListener();
            this.documentClickListener = null;
        }
    };
    TieredMenu.prototype.bindDocumentResizeListener = function () {
        this.documentResizeListener = this.onWindowResize.bind(this);
        window.addEventListener('resize', this.documentResizeListener);
    };
    TieredMenu.prototype.unbindDocumentResizeListener = function () {
        if (this.documentResizeListener) {
            window.removeEventListener('resize', this.documentResizeListener);
            this.documentResizeListener = null;
        }
    };
    TieredMenu.prototype.onOverlayHide = function () {
        this.unbindDocumentClickListener();
        this.unbindDocumentResizeListener();
        this.preventDocumentDefault = false;
        this.target = null;
    };
    TieredMenu.prototype.ngOnDestroy = function () {
        if (this.popup) {
            this.restoreOverlayAppend();
            this.onOverlayHide();
        }
    };
    TieredMenu.ctorParameters = function () { return [
        { type: ElementRef },
        { type: Renderer2 }
    ]; };
    __decorate([
        Input()
    ], TieredMenu.prototype, "model", void 0);
    __decorate([
        Input()
    ], TieredMenu.prototype, "popup", void 0);
    __decorate([
        Input()
    ], TieredMenu.prototype, "style", void 0);
    __decorate([
        Input()
    ], TieredMenu.prototype, "styleClass", void 0);
    __decorate([
        Input()
    ], TieredMenu.prototype, "appendTo", void 0);
    __decorate([
        Input()
    ], TieredMenu.prototype, "autoZIndex", void 0);
    __decorate([
        Input()
    ], TieredMenu.prototype, "baseZIndex", void 0);
    __decorate([
        Input()
    ], TieredMenu.prototype, "autoDisplay", void 0);
    __decorate([
        Input()
    ], TieredMenu.prototype, "showTransitionOptions", void 0);
    __decorate([
        Input()
    ], TieredMenu.prototype, "hideTransitionOptions", void 0);
TieredMenu.ɵfac = function TieredMenu_Factory(t) { return new (t || TieredMenu)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2)); };
TieredMenu.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: TieredMenu, selectors: [["p-tieredMenu"]], inputs: { autoZIndex: "autoZIndex", baseZIndex: "baseZIndex", showTransitionOptions: "showTransitionOptions", hideTransitionOptions: "hideTransitionOptions", model: "model", popup: "popup", style: "style", styleClass: "styleClass", appendTo: "appendTo", autoDisplay: "autoDisplay" }, decls: 1, vars: 1, consts: [[3, "ngClass", "class", "ngStyle", "click", 4, "ngIf"], [3, "ngClass", "ngStyle", "click"], ["root", "root", 3, "item", "parentActive", "baseZIndex", "autoZIndex", "autoDisplay", "popup", "leafClick"]], template: function TieredMenu_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, TieredMenu_div_0_Template, 2, 19, "div", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", !ctx.popup || ctx.visible);
    } }, directives: [ɵngcc1.NgIf, ɵngcc1.NgClass, ɵngcc1.NgStyle, TieredMenuSub], encapsulation: 2, data: { animation: [
            trigger('overlayAnimation', [
                state('void', style({
                    transform: 'translateY(5%)',
                    opacity: 0
                })),
                state('visible', style({
                    transform: 'translateY(0)',
                    opacity: 1
                })),
                transition('void => visible', animate('{{showTransitionParams}}')),
                transition('visible => void', animate('{{hideTransitionParams}}'))
            ])
        ] } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TieredMenu, [{
        type: Component,
        args: [{
                selector: 'p-tieredMenu',
                template: "\n        <div [ngClass]=\"{'ui-tieredmenu ui-widget ui-widget-content ui-corner-all':true, 'ui-tieredmenu-dynamic ui-shadow':popup}\" [class]=\"styleClass\" [ngStyle]=\"style\"\n            [@overlayAnimation]=\"{value: 'visible', params: {showTransitionParams: showTransitionOptions, hideTransitionParams: hideTransitionOptions}}\" [@.disabled]=\"popup !== true\" \n            (@overlayAnimation.start)=\"onOverlayAnimationStart($event)\" (click)=\"preventDocumentDefault=true\" *ngIf=\"!popup || visible\">\n            <p-tieredMenuSub [item]=\"model\" root=\"root\" [parentActive]=\"parentActive\" [baseZIndex]=\"baseZIndex\" [autoZIndex]=\"autoZIndex\" (leafClick)=\"onLeafClick()\" [autoDisplay]=\"autoDisplay\" [popup]=\"popup\"></p-tieredMenuSub>\n        </div>\n    ",
                animations: [
                    trigger('overlayAnimation', [
                        state('void', style({
                            transform: 'translateY(5%)',
                            opacity: 0
                        })),
                        state('visible', style({
                            transform: 'translateY(0)',
                            opacity: 1
                        })),
                        transition('void => visible', animate('{{showTransitionParams}}')),
                        transition('visible => void', animate('{{hideTransitionParams}}'))
                    ])
                ],
                changeDetection: ChangeDetectionStrategy.Default
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }]; }, { autoZIndex: [{
            type: Input
        }], baseZIndex: [{
            type: Input
        }], showTransitionOptions: [{
            type: Input
        }], hideTransitionOptions: [{
            type: Input
        }], model: [{
            type: Input
        }], popup: [{
            type: Input
        }], style: [{
            type: Input
        }], styleClass: [{
            type: Input
        }], appendTo: [{
            type: Input
        }], autoDisplay: [{
            type: Input
        }] }); })();
    return TieredMenu;
}());
var TieredMenuModule = /** @class */ (function () {
    function TieredMenuModule() {
    }
TieredMenuModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: TieredMenuModule });
TieredMenuModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function TieredMenuModule_Factory(t) { return new (t || TieredMenuModule)(); }, imports: [[CommonModule, RouterModule], RouterModule] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TieredMenuModule, { declarations: function () { return [TieredMenu, TieredMenuSub]; }, imports: function () { return [CommonModule, RouterModule]; }, exports: function () { return [TieredMenu, RouterModule]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TieredMenuModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule, RouterModule],
                exports: [TieredMenu, RouterModule],
                declarations: [TieredMenu, TieredMenuSub]
            }]
    }], function () { return []; }, null); })();
    return TieredMenuModule;
}());

/**
 * Generated bundle index. Do not edit.
 */

export { TieredMenu, TieredMenuModule, TieredMenuSub };


//# sourceMappingURL=primeng-lts-tieredmenu.js.map