{"version":3,"file":"primeng-lts-blockui.js","sources":["primeng-lts/blockui/blockui.ts","primeng-lts/blockui/primeng-lts-blockui.ts"],"names":[],"mappings":"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","sourcesContent":["import {NgModule,Component,Input,AfterViewInit,OnDestroy,ElementRef,ViewChild,ChangeDetectionStrategy} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {DomHandler} from 'primeng-lts/dom';\n\n@Component({\n    selector: 'p-blockUI',\n    template: `\n        <div #mask [class]=\"styleClass\" [ngClass]=\"{'ui-blockui-document':!target, 'ui-blockui ui-widget-overlay': true}\" [ngStyle]=\"{display: blocked ? 'block' : 'none'}\">\n            <ng-content></ng-content>\n        </div>\n    `,\n    changeDetection: ChangeDetectionStrategy.Default\n})\nexport class BlockUI implements AfterViewInit,OnDestroy {\n\n    @Input() target: any;\n    \n    @Input() autoZIndex: boolean = true;\n    \n    @Input() baseZIndex: number = 0;\n    \n    @Input() styleClass: string;\n    \n    @ViewChild('mask') mask: ElementRef;\n    \n    _blocked: boolean;\n        \n    constructor(public el: ElementRef) {}\n    \n    @Input() get blocked(): boolean {\n        return this._blocked;\n    }\n    \n    set blocked(val: boolean) {\n        this._blocked = val;\n        \n        if (this.mask && this.mask.nativeElement) {\n            if (this._blocked)\n                this.block();\n            else\n                this.unblock();\n        }\n    }\n    \n    ngAfterViewInit() {\n        if (this.target && !this.target.getBlockableElement) {\n            throw 'Target of BlockUI must implement BlockableUI interface';\n        }\n    }\n        \n    block() {\n        if (this.target) {\n            this.target.getBlockableElement().appendChild(this.mask.nativeElement);\n            let style = this.target.style||{};\n            style.position = 'relative';\n            this.target.style = style;\n        }\n        else {\n            document.body.appendChild(this.mask.nativeElement);\n        }\n        \n        if (this.autoZIndex) {\n            this.mask.nativeElement.style.zIndex = String(this.baseZIndex + (++DomHandler.zindex));\n        }\n    }\n    \n    unblock() {\n        this.el.nativeElement.appendChild(this.mask.nativeElement);\n    }\n    \n    ngOnDestroy() {\n        this.unblock();\n    }\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [BlockUI],\n    declarations: [BlockUI]\n})\nexport class BlockUIModule { }","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]}