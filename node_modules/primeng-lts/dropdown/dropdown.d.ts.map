{"version":3,"file":"dropdown.d.ts","sources":["dropdown.d.ts"],"names":[],"mappingssourcesContent":["import { CdkVirtualScrollViewport } from '@angular/cdk/scrolling';\r\nimport { ElementRef, OnInit, AfterViewInit, AfterContentInit, AfterViewChecked, OnDestroy, Renderer2, EventEmitter, QueryList, TemplateRef, ChangeDetectorRef, NgZone } from '@angular/core';\r\nimport { AnimationEvent } from '@angular/animations';\r\nimport { SelectItem } from 'primeng-lts/api';\r\nimport { ControlValueAccessor } from '@angular/forms';\r\nexport declare const DROPDOWN_VALUE_ACCESSOR: any;\r\nexport declare class DropdownItem {\r\n    option: SelectItem;\r\n    selected: boolean;\r\n    disabled: boolean;\r\n    visible: boolean;\r\n    itemSize: number;\r\n    template: TemplateRef<any>;\r\n    onClick: EventEmitter<any>;\r\n    onOptionClick(event: Event): void;\r\n}\r\nexport declare class Dropdown implements OnInit, AfterViewInit, AfterContentInit, AfterViewChecked, OnDestroy, ControlValueAccessor {\r\n    el: ElementRef;\r\n    renderer: Renderer2;\r\n    private cd;\r\n    zone: NgZone;\r\n    scrollHeight: string;\r\n    filter: boolean;\r\n    name: string;\r\n    style: any;\r\n    panelStyle: any;\r\n    styleClass: string;\r\n    panelStyleClass: string;\r\n    readonly: boolean;\r\n    required: boolean;\r\n    editable: boolean;\r\n    appendTo: any;\r\n    tabindex: number;\r\n    placeholder: string;\r\n    filterPlaceholder: string;\r\n    filterLocale: string;\r\n    inputId: string;\r\n    selectId: string;\r\n    dataKey: string;\r\n    filterBy: string;\r\n    autofocus: boolean;\r\n    resetFilterOnHide: boolean;\r\n    dropdownIcon: string;\r\n    optionLabel: string;\r\n    autoDisplayFirst: boolean;\r\n    group: boolean;\r\n    showClear: boolean;\r\n    emptyFilterMessage: string;\r\n    virtualScroll: boolean;\r\n    itemSize: number;\r\n    autoZIndex: boolean;\r\n    baseZIndex: number;\r\n    showTransitionOptions: string;\r\n    hideTransitionOptions: string;\r\n    ariaFilterLabel: string;\r\n    ariaLabelledBy: string;\r\n    filterMatchMode: string;\r\n    maxlength: number;\r\n    tooltip: string;\r\n    tooltipPosition: string;\r\n    tooltipPositionStyle: string;\r\n    tooltipStyleClass: string;\r\n    autofocusFilter: boolean;\r\n    onChange: EventEmitter<any>;\r\n    onFocus: EventEmitter<any>;\r\n    onBlur: EventEmitter<any>;\r\n    onClick: EventEmitter<any>;\r\n    onShow: EventEmitter<any>;\r\n    onHide: EventEmitter<any>;\r\n    containerViewChild: ElementRef;\r\n    filterViewChild: ElementRef;\r\n    accessibleViewChild: ElementRef;\r\n    viewPort: CdkVirtualScrollViewport;\r\n    editableInputViewChild: ElementRef;\r\n    templates: QueryList<any>;\r\n    private _disabled;\r\n    disabled: boolean;\r\n    overlay: HTMLDivElement;\r\n    itemsWrapper: HTMLDivElement;\r\n    itemTemplate: TemplateRef<any>;\r\n    groupTemplate: TemplateRef<any>;\r\n    selectedItemTemplate: TemplateRef<any>;\r\n    selectedOption: any;\r\n    _options: any[];\r\n    value: any;\r\n    onModelChange: Function;\r\n    onModelTouched: Function;\r\n    optionsToDisplay: any[];\r\n    hover: boolean;\r\n    focused: boolean;\r\n    overlayVisible: boolean;\r\n    documentClickListener: any;\r\n    optionsChanged: boolean;\r\n    panel: HTMLDivElement;\r\n    dimensionsUpdated: boolean;\r\n    hoveredItem: any;\r\n    selectedOptionUpdated: boolean;\r\n    filterValue: string;\r\n    searchValue: string;\r\n    searchIndex: number;\r\n    searchTimeout: any;\r\n    previousSearchChar: string;\r\n    currentSearchChar: string;\r\n    documentResizeListener: any;\r\n    virtualAutoScrolled: boolean;\r\n    virtualScrollSelectedIndex: number;\r\n    viewPortOffsetTop: number;\r\n    preventModelTouched: boolean;\r\n    constructor(el: ElementRef, renderer: Renderer2, cd: ChangeDetectorRef, zone: NgZone);\r\n    ngAfterContentInit(): void;\r\n    ngOnInit(): void;\r\n    options: any[];\r\n    ngAfterViewInit(): void;\r\n    readonly label: string;\r\n    updateEditableLabel(): void;\r\n    onItemClick(event: any): void;\r\n    selectItem(event: any, option: any): void;\r\n    ngAfterViewChecked(): void;\r\n    writeValue(value: any): void;\r\n    resetFilter(): void;\r\n    updateSelectedOption(val: any): void;\r\n    registerOnChange(fn: Function): void;\r\n    registerOnTouched(fn: Function): void;\r\n    setDisabledState(val: boolean): void;\r\n    onMouseclick(event: any): void;\r\n    isInputClick(event: any): boolean;\r\n    isOutsideClicked(event: Event): boolean;\r\n    onEditableInputClick(): void;\r\n    onEditableInputFocus(event: any): void;\r\n    onEditableInputChange(event: any): void;\r\n    show(): void;\r\n    onOverlayAnimationStart(event: AnimationEvent): void;\r\n    scrollToSelectedVirtualScrollElement(): void;\r\n    updateVirtualScrollSelectedIndex(resetOffset: any): void;\r\n    appendOverlay(): void;\r\n    restoreOverlayAppend(): void;\r\n    hide(event: any): void;\r\n    alignOverlay(): void;\r\n    onInputFocus(event: any): void;\r\n    onInputBlur(event: any): void;\r\n    findPrevEnabledOption(index: any): any;\r\n    findNextEnabledOption(index: any): any;\r\n    onKeydown(event: KeyboardEvent, search: boolean): void;\r\n    search(event: KeyboardEvent): void;\r\n    searchOption(index: any): any;\r\n    searchOptionInRange(start: any, end: any): any;\r\n    searchOptionWithinGroup(index: any): any;\r\n    findOptionIndex(val: any, opts: any[]): number;\r\n    findOptionGroupIndex(val: any, opts: any[]): any;\r\n    findOption(val: any, opts: any[], inGroup?: boolean): SelectItem;\r\n    onFilter(event: any): void;\r\n    activateFilter(): void;\r\n    applyFocus(): void;\r\n    focus(): void;\r\n    bindDocumentClickListener(): void;\r\n    unbindDocumentClickListener(): void;\r\n    bindDocumentResizeListener(): void;\r\n    unbindDocumentResizeListener(): void;\r\n    onWindowResize(): void;\r\n    clear(event: Event): void;\r\n    onOverlayHide(): void;\r\n    ngOnDestroy(): void;\r\n}\r\nexport declare class DropdownModule {\r\n}\r\n"]}