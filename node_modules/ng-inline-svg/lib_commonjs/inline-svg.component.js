"use strict";
var ɵngcc0 = require('@angular/core');
var ɵngcc1 = require('./inline-svg.service');
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var inline_svg_directive_1 = require("./inline-svg.directive");
var inline_svg_service_1 = require("./inline-svg.service");
var InlineSVGComponent = (function () {
    function InlineSVGComponent(_inlineSVGService, el) {
        this._inlineSVGService = _inlineSVGService;
        this._el = el;
    }
    InlineSVGComponent.prototype.ngAfterViewInit = function () {
        this._updateContent();
    };
    InlineSVGComponent.prototype.ngOnChanges = function (changes) {
        if (changes['content']) {
            this._updateContent();
        }
    };
    InlineSVGComponent.prototype._updateContent = function () {
        this._inlineSVGService.insertEl(this.context, this._el.nativeElement, this.content, this.replaceContents, this.prepend);
    };
    __decorate([
        core_1.Input(),
        __metadata("design:type", inline_svg_directive_1.InlineSVGDirective)
    ], InlineSVGComponent.prototype, "context", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], InlineSVGComponent.prototype, "content", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Boolean)
    ], InlineSVGComponent.prototype, "replaceContents", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Boolean)
    ], InlineSVGComponent.prototype, "prepend", void 0);
    InlineSVGComponent = __decorate([ __metadata("design:paramtypes", [inline_svg_service_1.InlineSVGService, core_1.ElementRef])
    ], InlineSVGComponent);
InlineSVGComponent.ɵfac = function InlineSVGComponent_Factory(t) { return new (t || InlineSVGComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.InlineSVGService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
InlineSVGComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: InlineSVGComponent, selectors: [["inline-svg"]], inputs: { context: "context", content: "content", replaceContents: "replaceContents", prepend: "prepend" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 0, vars: 0, template: function InlineSVGComponent_Template(rf, ctx) { }, encapsulation: 2, changeDetection: 0 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(InlineSVGComponent, [{
        type: core_1.Component,
        args: [{
                selector: 'inline-svg',
                template: '',
                changeDetection: core_1.ChangeDetectionStrategy.OnPush
            }]
    }], function () { return [{ type: ɵngcc1.InlineSVGService }, { type: ɵngcc0.ElementRef }]; }, { context: [{
            type: core_1.Input
        }], content: [{
            type: core_1.Input
        }], replaceContents: [{
            type: core_1.Input
        }], prepend: [{
            type: core_1.Input
        }] }); })();
    return InlineSVGComponent;
}());
exports.InlineSVGComponent = InlineSVGComponent;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5saW5lLXN2Zy5jb21wb25lbnQuanMiLCJzb3VyY2VzIjpbImlubGluZS1zdmcuY29tcG9uZW50LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQ0FNTztBQUNQOzs7Ozs7Ozs7Ozs7Ozs7Ozs7b0JBQTJCO0FBQzNCO0FBQ0E7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xyXG52YXIgX19kZWNvcmF0ZSA9ICh0aGlzICYmIHRoaXMuX19kZWNvcmF0ZSkgfHwgZnVuY3Rpb24gKGRlY29yYXRvcnMsIHRhcmdldCwga2V5LCBkZXNjKSB7XHJcbiAgICB2YXIgYyA9IGFyZ3VtZW50cy5sZW5ndGgsIHIgPSBjIDwgMyA/IHRhcmdldCA6IGRlc2MgPT09IG51bGwgPyBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcih0YXJnZXQsIGtleSkgOiBkZXNjLCBkO1xyXG4gICAgaWYgKHR5cGVvZiBSZWZsZWN0ID09PSBcIm9iamVjdFwiICYmIHR5cGVvZiBSZWZsZWN0LmRlY29yYXRlID09PSBcImZ1bmN0aW9uXCIpIHIgPSBSZWZsZWN0LmRlY29yYXRlKGRlY29yYXRvcnMsIHRhcmdldCwga2V5LCBkZXNjKTtcclxuICAgIGVsc2UgZm9yICh2YXIgaSA9IGRlY29yYXRvcnMubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIGlmIChkID0gZGVjb3JhdG9yc1tpXSkgciA9IChjIDwgMyA/IGQocikgOiBjID4gMyA/IGQodGFyZ2V0LCBrZXksIHIpIDogZCh0YXJnZXQsIGtleSkpIHx8IHI7XHJcbiAgICByZXR1cm4gYyA+IDMgJiYgciAmJiBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHIpLCByO1xyXG59O1xyXG52YXIgX19tZXRhZGF0YSA9ICh0aGlzICYmIHRoaXMuX19tZXRhZGF0YSkgfHwgZnVuY3Rpb24gKGssIHYpIHtcclxuICAgIGlmICh0eXBlb2YgUmVmbGVjdCA9PT0gXCJvYmplY3RcIiAmJiB0eXBlb2YgUmVmbGVjdC5tZXRhZGF0YSA9PT0gXCJmdW5jdGlvblwiKSByZXR1cm4gUmVmbGVjdC5tZXRhZGF0YShrLCB2KTtcclxufTtcclxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xyXG52YXIgY29yZV8xID0gcmVxdWlyZShcIkBhbmd1bGFyL2NvcmVcIik7XHJcbnZhciBpbmxpbmVfc3ZnX2RpcmVjdGl2ZV8xID0gcmVxdWlyZShcIi4vaW5saW5lLXN2Zy5kaXJlY3RpdmVcIik7XHJcbnZhciBpbmxpbmVfc3ZnX3NlcnZpY2VfMSA9IHJlcXVpcmUoXCIuL2lubGluZS1zdmcuc2VydmljZVwiKTtcclxudmFyIElubGluZVNWR0NvbXBvbmVudCA9IChmdW5jdGlvbiAoKSB7XHJcbiAgICBmdW5jdGlvbiBJbmxpbmVTVkdDb21wb25lbnQoX2lubGluZVNWR1NlcnZpY2UsIGVsKSB7XHJcbiAgICAgICAgdGhpcy5faW5saW5lU1ZHU2VydmljZSA9IF9pbmxpbmVTVkdTZXJ2aWNlO1xyXG4gICAgICAgIHRoaXMuX2VsID0gZWw7XHJcbiAgICB9XHJcbiAgICBJbmxpbmVTVkdDb21wb25lbnQucHJvdG90eXBlLm5nQWZ0ZXJWaWV3SW5pdCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB0aGlzLl91cGRhdGVDb250ZW50KCk7XHJcbiAgICB9O1xyXG4gICAgSW5saW5lU1ZHQ29tcG9uZW50LnByb3RvdHlwZS5uZ09uQ2hhbmdlcyA9IGZ1bmN0aW9uIChjaGFuZ2VzKSB7XHJcbiAgICAgICAgaWYgKGNoYW5nZXNbJ2NvbnRlbnQnXSkge1xyXG4gICAgICAgICAgICB0aGlzLl91cGRhdGVDb250ZW50KCk7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuICAgIElubGluZVNWR0NvbXBvbmVudC5wcm90b3R5cGUuX3VwZGF0ZUNvbnRlbnQgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdGhpcy5faW5saW5lU1ZHU2VydmljZS5pbnNlcnRFbCh0aGlzLmNvbnRleHQsIHRoaXMuX2VsLm5hdGl2ZUVsZW1lbnQsIHRoaXMuY29udGVudCwgdGhpcy5yZXBsYWNlQ29udGVudHMsIHRoaXMucHJlcGVuZCk7XHJcbiAgICB9O1xyXG4gICAgX19kZWNvcmF0ZShbXHJcbiAgICAgICAgY29yZV8xLklucHV0KCksXHJcbiAgICAgICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIGlubGluZV9zdmdfZGlyZWN0aXZlXzEuSW5saW5lU1ZHRGlyZWN0aXZlKVxyXG4gICAgXSwgSW5saW5lU1ZHQ29tcG9uZW50LnByb3RvdHlwZSwgXCJjb250ZXh0XCIsIHZvaWQgMCk7XHJcbiAgICBfX2RlY29yYXRlKFtcclxuICAgICAgICBjb3JlXzEuSW5wdXQoKSxcclxuICAgICAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgT2JqZWN0KVxyXG4gICAgXSwgSW5saW5lU1ZHQ29tcG9uZW50LnByb3RvdHlwZSwgXCJjb250ZW50XCIsIHZvaWQgMCk7XHJcbiAgICBfX2RlY29yYXRlKFtcclxuICAgICAgICBjb3JlXzEuSW5wdXQoKSxcclxuICAgICAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgQm9vbGVhbilcclxuICAgIF0sIElubGluZVNWR0NvbXBvbmVudC5wcm90b3R5cGUsIFwicmVwbGFjZUNvbnRlbnRzXCIsIHZvaWQgMCk7XHJcbiAgICBfX2RlY29yYXRlKFtcclxuICAgICAgICBjb3JlXzEuSW5wdXQoKSxcclxuICAgICAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgQm9vbGVhbilcclxuICAgIF0sIElubGluZVNWR0NvbXBvbmVudC5wcm90b3R5cGUsIFwicHJlcGVuZFwiLCB2b2lkIDApO1xyXG4gICAgSW5saW5lU1ZHQ29tcG9uZW50ID0gX19kZWNvcmF0ZShbXHJcbiAgICAgICAgY29yZV8xLkNvbXBvbmVudCh7XHJcbiAgICAgICAgICAgIHNlbGVjdG9yOiAnaW5saW5lLXN2ZycsXHJcbiAgICAgICAgICAgIHRlbXBsYXRlOiAnJyxcclxuICAgICAgICAgICAgY2hhbmdlRGV0ZWN0aW9uOiBjb3JlXzEuQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoXHJcbiAgICAgICAgfSksXHJcbiAgICAgICAgX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtpbmxpbmVfc3ZnX3NlcnZpY2VfMS5JbmxpbmVTVkdTZXJ2aWNlLCBjb3JlXzEuRWxlbWVudFJlZl0pXHJcbiAgICBdLCBJbmxpbmVTVkdDb21wb25lbnQpO1xyXG4gICAgcmV0dXJuIElubGluZVNWR0NvbXBvbmVudDtcclxufSgpKTtcclxuZXhwb3J0cy5JbmxpbmVTVkdDb21wb25lbnQgPSBJbmxpbmVTVkdDb21wb25lbnQ7XHJcbiJdfQ==